{
	"openapi": "3.1.0",
	"info": {
		"version": "1.28",
		"title": "Прием платежей",
		"contact": {
			"url": "https://www.tbank.ru/kassa/"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		},
		"x-logo": {
			"url": "/kassa/dev/assets/img/logo.svg"
		},
		"description": "# Введение\n\n## Подключение интернет-эквайринга от Т‑Кассы\n\nИнтернет-эквайринг помогает принимать онлайн-платежи так, как удобно вам и покупателю: на сайте, в мобильном приложении, соцсетях, мессенджерах, по e-mail или СМС. Вы можете принимать оплату разными способами, возвращать и замораживать выплаты, настраивать рекуррентные платежи\n\nЧтобы подключить интернет-эквайринг, оставьте [заявку на сайте Т‑Банка](https://www.tbank.ru/kassa/) и заполните анкету компании или ИП. Подробности подключения можете узнать [в Т-Помощи](https://www.tbank.ru/business/help/business-payments/internet-acquiring/how-involve/connect/?card=q1) или у персонального менеджера\n\n## Способы интеграции интернет-эквайринга от Т‑Кассы\n\nИнтернет-эквайринг нужно интегрировать — настроить оплату на сайте или в приложении. Есть четыре способа интеграции:\n\n* Платежный модуль — для сайтов на CMS,\n* Платежный виджет — для самописного сайта,\n* SDK — для мобильного приложения,\n* API — для разработки своей интеграции.\n\nИнтеграцию можно выполнить самостоятельно или с помощью разработчика\n\n### Платежный модуль\n\nСпособ интеграции интернет-эквайринга с сайтом, созданным на основе CMS. Вы устанавливаете модуль — на странице сайта появляется кнопка оплаты. Покупатель нажимает на кнопку и переходит на платежную форму с разными способами оплаты: банковскими картами, по T‑Pay, SberPay, Mir Pay, СБП, Долями, в рассрочку. Вы можете выбрать, какие способы оплаты оставить в форме: все или некоторые.\n\nМодуль подходит, если ваш сайт собран на CMS — например, 1С-Битрикс, WordPress или Taplink. Т‑Касса поддерживает многие популярные CMS, в некоторые уже встроены модули — их устанавливать не нужно\n\n[Инструкции по интеграции с помощью платежного модуля](https://www.tbank.ru/kassa/dev/cms/)\n\n### Платежный виджет\n\nСпособ интеграции интернет-эквайринга с самописным сайтом. Вы вставляете готовый код на страницу сайта — на этом месте появляется кнопка оплаты. Покупатель нажимает на кнопку и переходит на платежную форму с разными способами оплаты: банковскими картами, по T‑Pay, SberPay, Mir Pay, СБП, Долями, в рассрочку. Вы можете выбрать, какие способы оплаты оставить в форме: все или некоторые.\n\nВиджет подходит в двух случаях:\n* ваш сайт самописный или на CMS, для которой в Т‑Банке нет платежного модуля;\n* вы не планируете принимать автоплатежи.\n\nДля интеграции виджета потребуется помощь программиста\n\n[Инструкция по интеграции с помощью виджета](https://www.tbank.ru/kassa/dev/widget/)\n\n### Мобильный SDK\nСпособ интеграции интернет-эквайринга с мобильным приложением. Покупатель оплачивает товар без перехода в мобильный браузер, оставаясь внутри вашего приложения\n\nС помощью SDK вы можете разместить платежную форму Т‑Кассы — со всеми или некоторыми способами оплаты. Также с помощью SDK вы можете отдельно встраивать способы оплаты — например, T‑Pay или СБП — в вашу платежную форму\n\nSDK подходит, если принимаете оплату в приложении на Android начиная с версии 7.0 или iOS начиная с версии 12.3. С инструкцией по подключению SDK в ЛК можно ознакомиться по ссылкам ниже:\n\n[Инструкция для Android начиная с версии 7.0](https://opensource.tbank.ru/mobile-tech/asdk-android)\n\n[Инструкция для iOS начиная с версии 12.3](https://opensource.tbank.ru/mobile-tech/asdk-ios)\n\n### API\nСамый гибкий и сложный способ интеграции интернет-эквайринга. Например, API подходит, если у вас самописный сайт и вы хотите настроить оплату под запросы бизнеса: совмещать в платежной форме разные способы оплаты, принимать рекуррентные платежи или подключать другие сервисы Т‑Кассы\n\nДля интеграции потребуется помощь программиста\n\n[Документация по API](https://www.tbank.ru/kassa/dev/payments/#section/Vvedenie/Rekomendacii-pri-integracii)\n\n## Платежная форма\nПлатежная форма — это готовый интерфейс с встроенными способами оплаты, который позволяет принимать платежи онлайн\n\nДля использования платежной формы необходимо подключить интернет-эквайринг, настроить терминал и интегрировать платежную форму на ваш сайт одним из способов выше(кроме SDK)\n### Платежная форма в webview\nНекоторые webview не умеют обрабатывать DeepLink ссылки. Из-за этого способы оплаты, которые осуществляют переход в мобильное приложение во время платежа (СБП, Mir Pay, T‑Pay), могут работать некорректно\n\nВ случае использования платежной формы в webview необходимо учесть особенности вашей интеграции и сделать необходимые доработки для поддержки DeepLink\n\nПо результатам доработок необходимо дополнительно протестировать корректную работу всех способов оплат. В случае обнаружения проблем, требуется связаться с разработчиками webview модуля для их устранения, либо рекомендуется отключить неработающие способы оплаты\n**Ссылки с примерами решений**:\n1. [Первое решение(java,kotlin)](https://razorpay.com/docs/payments/payment-gateway/web-integration/standard/webview/upi-intent-android/#13-handle-deep-links-in-shouldoverrideurlloading-),\n2. [Второе решение(java)](https://stackoverflow.com/questions/25672330/how-to-enable-deep-linking-in-webview-on-android-app).\n\n#### Рекомендации по интеграции\nПлатформа IOS:\nЧтобы deeplink работал в web — есть 2 варианта решения:\n1. Использовать SFSafariViewController, он умеет открывать диплинки, дополнительная настройка не нужна.\n2. Если используете WKWebView он не умеет открывать диплинки из коробки, чтобы его научить, надо обработать открытие диплинка Т‑Банка, пример описан ниже.\n\n**Пример реализации обработки открытия диплинка Т‑Банка**   \n```\nnavigationDelegate = self\nfunc webView(\n    _ webView: WKWebView,\n    decidePolicyFor navigationAction: WKNavigationAction,\n    decisionHandler: @escaping (WKNavigationActionPolicy) -> Void\n) {\n    if let url = navigationAction.request.url, let scheme = url.scheme {\n        if scheme != \"https\" && scheme != \"http\" {\n            UIApplication.shared.open(url)\n        }\n    }\n    decisionHandler(.allow)\n}\n```\n\n### Платежная форма в iframe\nНе рекомендуется использовать платежную форму в iframe для мобильных версий сайтов, так как у кнопочных способов оплаты могут возникать проблемы с открытием DeepLink и переходов в мобильное приложение для оплаты (СБП, Mir Pay, T‑Pay). Это связано с тем, что Iframe является изолированным контейнером, из-за этого переходы на сторонние ссылки не могут быть обработаны внутри iframe\n\nЕсли в мобильной версии сайта использование iframe обязательно, вам необходимо сделать доработки согласно инструкции ниже, чтобы вы могли использовать кнопочные способы оплаты. Она позволит произвести переход в стороннее приложение. Доработки представляют собой скрипт \"снаружи\" iframe, который получит сообщение о переходе от iframe и вызовет его на основной странице.\n\nПосле реализации доработок необходимо протестировать корректную работу всех способов оплат. В случае проблем и вопросов вы можете обратиться в нашу поддержку acq_help@tbank.ru\n\nВ десктопной версии iframe кнопочные способы оплаты будут работать без специальных доработок\n\n<details><summary><b>Инструкция по доработкам для mobile iframe</b></summary>\n<br>\nIframe является изолированным контейнером, из-за этого переходы на сторонние ссылки не могут быть обработаны внутри iframe (переход будет внутри iframe). Чтобы произвести переход в стороннее приложение требуется скрипт \"снаружи\" iframe, который получит сообщение о переходе от iframe и вызовет его на основной странице\n\nВ случае если у вас подключены способы оплаты, использующие deeplink, а именно: T‑Pay, СБП или Mir Pay, то в процессе оплаты может возникать ошибка\n\n##### Информация\nСкрипт общается с фреймом по средствам *window.postMessage()*\n\nДобавление скрипта решает проблему передачи ссылки на ресурс платежного сервиса, для способов оплаты использующих DeepLink. Данная проблема может возникнуть при попытке передачи ссылки в браузер Клиента, из контейнера Платежной формы расположенного в теге ``<iframe>``\n##### Установка\n**Не рекомендуется** копировать скрипт полностью в свою сборку. Интерфейс общения с Платежной Формой может изменится, поэтому просьба всегда загружать скрипт из [предоставленного URL](https://kassa.cdn-tinkoff.ru/integration/integration.js)\n\nПростая интеграция (Если используется уже созданный iframe на странице):   \nДобавьте ссылку на код скрипта iframe.js в HTML-код страницы сайта, на которой располагаться iframe c Платежной формой.\nРекомендуем разместить его в конце body после объявления тега iframe\n```\n<iframe id=\"payment-form\"></iframe>\n \n<script src=\"https://kassa.cdn-tinkoff.ru/integration/integration.js\"></script>\n<script>\n  var paymentForm = new PaymentForm.Integration({iframe: {element: document.getElementById('payment-form')}});\n</script>\n```\nДинамическая интеграция (Если iframe генерируется динамически):\n```\n<div id=\"payment-form-container\"></div>\n \n<script>\n  // // Получаем и присваиваем переменной uuid значение уникального идентификатора платежа ( передается в path параметра PaymentURL )\n  var uuid = \"\"; \n  // Получаем элемент контейнера в который будет встроен iframe\n  var contentContainer = document.getElementById('payment-form-container')\n \n  // Загрузите скрипт\n  var script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  script.async = false;\n  script.src = \"https://kassa.cdn-tinkoff.ru/integration/integration.js\";\n  script.onload = (): void => {\n     // Инициализируйте скрипт\n     var paymentForm = new PaymentForm.Integration({iframe: {element: document.getElementById('payment-form')}});\n \n     // Создайте iframe\n     var element = document.createElement(\"iframe\");\n     element.src = \"https://securepayments.tinkoff.ru/\" + uuid;\n     if (contentContainer) {\n        contentContainer.appendChild(element);\n     }\n  };\n                \n  \n  document.getElementsByTagName(\"body\")[0].appendChild(script);\n</script>\n```\n##### Настройка\nКласс Integration принимает 2 аргумента:\n1. HTMLIFrameElement — iframe DOM элемент.\n2. config — необязательный аргумент с конфигурацией PaymentFormIntegrationConfig.\n\nPaymentFormIntegrationConfig:   \n```\ninterface PaymentFormIntegrationConfig {\n  iframe: {\n    element: HTMLIFrameElement;\n    /**\n     * Используется если скрипт встраивается в промежуточный iframe\n     */\n    proxy?: true;\n    /**\n     * Вызывается в момент получения deepLink из ПФ\n     * Стандартное значение: (url) => {window.location.href = url}\n     * @param url\n     */\n    deepLinkRedirectCallback?: (url: string) => void;\n    /**\n     * Вызывается в момент получения exit из ПФ\n     * Например при нажатии кнопки \"Вернуться в магазин\"\n     * Стандартное значение: (url) => {window.location.href = url}\n     * @param url\n     */\n    exitRedirectCallback?: (url: string) => void;\n  };\n}\n```\nЕсли Вам не требуется перенаправлять родительскую страницу на возврат в магазин, а требуется просто закрыть модальное окно с платежной формой — замените этот параметр конфигурации\n\nПример инициализации скрипта с конфигурацией:   \n```\nvar paymentForm = new PaymentForm.Integration({\n  iframe: {\n    element: document.getElementById('payment-form'),\n    exitRedirectCallback: (url) => {\n      // Вызов закрытия модального окна\n    }\n  }\n});\n```\n##### Iframe внутри iframe\nБываю случаи когда приложение используется внутри iframe, который находится внутри другого iframe. В таком случае необходимо встроить скрипт с ключом proxy: true во все промежуточные iframe.\nПример инициализации скрипта для основной страницы:   \n```\n<iframe id=\"payment-form\"></iframe>\n \n<script src=\"https://kassa.cdn-tinkoff.ru/integration/integration.js\"></script>\n<script>\n  var paymentForm = new PaymentForm.Integration({iframe: {element: document.getElementById('payment-form')}});\n</script>\n```\nПример инициализации скрипта для вложенного iframe: \n```\n<iframe id=\"payment-form\"></iframe>\n \n<script src=\"https://kassa.cdn-tinkoff.ru/integration/integration.js\"></script>\n<script>\n  var paymentForm = new PaymentForm.Integration({iframe: {element: document.getElementById('payment-form'), proxy: true}});\n</script>\n```\n\"Промежуточный\" скрипт, будет перенаправлять сообщения в каждый следующий iframe\n\nКоллбеки событий будут отрабатывать вызываться в \"промежуточных\" iframe только в случае их переопределения в config\n##### Как работает скрипт\nОбщение между формой и родителем, происходит через *window.postMessage()*\n\n1. После успешной загрузки, платежная форма внутри iframe отправляет сообщение loaded родителю.\n2. После получения loaded из ПФ, скрипт отправляет сообщение ready на Платежную форму, таким образом происходит рукопожатие и платежная форма определяет что может отобразить кнопочные методы оплаты.\n3. Действиями Клиента на Платежной форме вызывается способ оплаты возвращающий DeepLink на ресурс платежного сервиса.\n4. Платежная форма, передает DeepLink в целевое окно клиента, с помощью события deepLink.\n5. Целевое окно выполняет редирект Клиента, по ссылке полученной в DeepLink, с помощью вызова *deepLinkRedirectCallback*.\n6. Аналогично передаются и другие сообщения.\n\n</details>\n\n### Кастомизация на платежной форме\nНа платежной форме доступна функция кастомизации, которая позволяет настроить форму под себя и своих клиентов. Для установки кастомизации обратитесь к вашему персональному менеджеру и передайте пожелания по настройкам \n\n#### Список доступных настроек кастомизации: \n|**Возможности кастомизации** | **Доп. описание**|\n|--- | ---|\n|Брендирование UI платежной формы | <li>добавлять лого своей компании на ПФ (логотип отобразится рядом с суммой заказа) </li><li>управлять цветами кнопок (кнопка \"Оплатить\" и другие кнопки со страниц статусов и модальных окон)</li>|\n|Управление блоком детализации (информация о заказе и магазине) | <li>делать блок свернутым и развернутым по-умолчанию</li><li> скрывать  блок с детализацией на ПФ</li><li>менять порядок строк в детализации</li>|\n|Управление светлой и темной темой | <li>показывать темную или светлую тему по-умолчанию</li><li>отключать темной/светлой темы</li>|\n\n\n<!--#### Установить последнюю версию Acquiring SDK\n <style>\n.block {\ntext-decoration: none;\npadding: 2rem;\nmargin: 2rem;\nborder: 0.2rem solid #dddbd9;\nborder-radius: 1rem;\nbox-shadow: 0 1.5rem 0.5rem -0.5rem rgba(70,70,94,.1); \nposition: auto;  overflow: auto; \n}\n\n.ios_upd {\ntext-decoration: none;\npadding: 10px;\nmargin: 10px;\nborder: 1px solid #949996;\nborder-radius: 1rem;\nbox-shadow: 0 1.5rem 0.5rem -0.5rem rgba(70,70,94,.1); \nposition: auto;  overflow: auto;\ndisplay: none;\n}\n.android_upd {\ntext-decoration: none;\npadding: 10px;\nmargin: 10px;\nborder: 1px solid #949996;\nborder-radius: 1rem;\nbox-shadow: 0 1.5rem 0.5rem -0.5rem rgba(70,70,94,.1); \nposition: auto;  overflow: auto;\ndisplay: none;\n}\np:hover + .ios_upd {\ndisplay: block;\n}\np:hover + .android_upd {\ndisplay: block;\n}\n.updtext {\n\ttext-decoration: underline;\n\ttext-decoration-style: dotted;\n}\n</style>\n<div class=\"block\">\n\tIOS\n\t<br>\n\tРелиз 3.1.1 от 12.09.2023\n\t<br>\n\t<a href=\"https://github.com/tinkoff-mobile-tech/AcquiringSdk_IOS\">Ссылка на скачивание</a>\n\t<p class=\"updtext\">Что изменилось (?)</p>\n\t\t<div class=\"ios_upd\">\n\t\t\t<ul>\n\t\t\t\t<li>Новая фича </li>\n\t\t\t\t<li>ещё одна новая фича</li>\n\t\t\t\t<li>ещё одна</li>\n\t\t\t</ul>\n\t\t</div>\n</div>\n<div class=\"block\">\n\tAndroid\n\t<br>\n\tРелиз 3.1.2 от 12.09.2023\n\t<br>\n\t<a href=\"https://github.com/tinkoff-mobile-tech/AcquiringSdkAndroid\">Ссылка на скачивание</a>\n\t<p class=\"updtext\">Что изменилось (?)</p>\n\t\t<div class=\"android_upd\">\n\t\t\t<ul>\n\t\t\t\t<li>Новая фича </li>\n\t\t\t\t<li>ещё одна новая фича</li>\n\t\t\t\t<li>ещё одна</li>\n\t\t\t</ul>\n\t\t</div>\n</div> -->\n\n## Инструкции по безопасности при интеграции\nУбедитесь, что вы используете последнюю версию интеграции, а также [генерируете и передаете корректный токен](https://www.tbank.ru/kassa/dev/payments/#section/Podpis-zaprosa) независимо от способа интеграции. <br>Если ваш сайт собран на CMS, то необходимо использовать новейшую версию платежного модуля, доступную на [сайте Т‑Кассы](https://www.tbank.ru/kassa/dev/cms/) — это доступный источник актуальных версий. Современные модули для популярных CMS генерируют корректный токен автоматически\n\nТакже мы расписали несколько дополнительных обязательных мер, которые необходимо соблюдать при интеграции с MAPI, а именно: \n\n1. Наиболее безопасный способ передачи данных от Мерчанта в MAPI — прямая интеграция бэкенда Мерчанта с бэкендом Т‑Кассы. В этом случае злоумышленник сможет перехватить запрос только если окажется в локальной сети Мерчанта.\n\n2. При любых способах интеграции с MAPI (в том числе и с помощью нашего платежного виджета) необходимо сверять параметры созданных заказов. В случае выявления расхождений между суммой операции, инициированной клиентом, и суммой совершенной операции, не осуществляйте доставку товара клиенту и незамедлительно уведомите Т‑Банк об этом. Для сверки параметров есть несколько способов:\n\t<br> 2.1. Получение нотификаций:\n\t\n\t- **По e-mail**: на указанную почту придет письмо при переходе платежа в статус «CONFIRMED»;\n\t\n\t- **По http**: MAPI будет отправлять POST-запрос при каждом изменении статуса платежа на URL, указанный в настройках терминала.\n\t\n\t<br> 2.2. Вызов метода GetState, который возвращает основные параметры и текущий статус платежа. Рекомендуется сверять/валидировать дополнительные данные заказа — `PaymentId` и `Amount`.\n\n3. Обновляйте модули для CMS. Современные модули для популярных CMS сверяют суммы заказов автоматически.\n\nЕсли на вашем сайте не применены описанные выше меры безопасности или используете программное обеспечение для интеграции, полученное не с [сайта Т‑Кассы](https://www.tbank.ru/kassa/develop/), вы самостоятельно отвечаете за возможные риски и неблагоприятные последствия, связанные с использованием такого программного обеспечения\n\n## Обработка карточных данных\nПлатежные системы разработали требования к безопасности карточных данных клиентов — **Payment Card Industry Data Security Standard** (PCI DSS). Компания должна пройти сертификацию, чтобы подтвердить надежность управления карточной информацией\n\nЕсли у вас нет сертификации PCI DSS, вы можете использовать платежную форму Т‑Кассы. В этом случае, все операции, связанные с обработкой критичных данных производятся на стороне Т‑Кассы. Мерчанту достаточно настроить интеграцию с MerchantAPI и инициализировать платеж. Клиент будет перенаправлен на платежную форму, в которую он сможет ввести данные карты. Когда платеж завершится, клиент снова увидит сайт Мерчанта. Подробную информацию о подключении  эквайринга смотрите в разделе Non PCI DSS. \n\nЕсли ваш ресурс соответствует требованиям PCI DSS, то вы можете собирать и хранить карточные данные клиентов. В таком случае, MerchantAPI получает зашифрованные карточные данные от Мерчанта. Подробную информацию о подключении  такого способа смотрите в разделе PCI DSS.\n\n# Передача признака инициатора операции\nПлатежные системы хотят понимать, кем была инициирована карточная операция. Особенно остро эта необходимость проявляется в случае проведения операций без 3ds и по сохраненным реквизитам\n\nДля выполнения требования регулятора мы добавили в метод /Init новый атрибут OperationInitiatorType. В значении этого атрибута ожидаем получать признак того, кем была инициирована операция и какой способ предоставления реквизитов был использован\n\nПодробное описание сценариев проведения операций, значений OperationInitiatorType, взаимосвязь с другими атрибутами и типами терминалов:\n|Тип операции и инициатор|Описание|Сценарий карточной операции|OperationInitiatorType|RebillId в /Charge|Recurrent в /Init|AFT терминал|ECOM терминал|\n|---|---|---|---|---|---|---|---|\n|Сustomer Initiated Credential-Not-Captured (CIT CNC)|Инициированная покупателем оплата без сохранения реквизитов карты для последующего использования|Стандартный платеж|0|null|N|Разрешено|Разрешено|\n|Сustomer Initiated Credential-Captured (CIT CC)|Инициированная покупателем оплата c сохранением реквизитов карты для последующего использования|Стандартный платеж с созданием родительского рекуррентного платежа|1|null|Y|Разрешено|Разрешено|\n|Сustomer Initiated Credential-on-File (CIT COF)|Инициированная покупателем оплата по сохраненным реквизитам карты (ранее была проведена операция с сохранением реквизитов CIT CC)|Рекуррентный платеж, инициированный покупателем|2|not null|N|Запрещено|Разрешено|\n|Merchant Initiated Credential-on-File, Recurring (CIT COF R)|Инициированные торговым предприятием повторяющиеся платежи **без графика** (ранее была проведена операция с сохранением реквизитов CIT CC). Применяются для оплаты коммунальных услуг, платежей за услуги связи, кабельное/спутниковое телевидение и прочее. Сумма может быть определена заранее или становится известна непосредственно перед оплатой|Рекуррентный платеж, инициированный торговым предприятием|R|not null|N|Запрещено|Разрешено|\n|Merchant Credential-on-File, Installment (CIT COF I)|Инициированные торговым предприятием повторяющиеся платежи **по графику** (ранее была проведена операция с сохранением реквизитов CIT CC). Применяется для платежей в рассрочку по товарному кредиту, для оплаты страховки в рассрочку, для погашения кредита в соответствии с графиком платежей. График платежей может быть изменен по соглашению сторон, т.е. суммы и даты платежей должны быть известны плательщику (держателю карты) до момента проведения операции.|Рекуррентный платеж, инициированный торговым предприятием|I|not null|N|Разрешено|Запрещено|\n\n# Какими терминами пользуемся в документации?\n| **Термин** | Определение |\n| ------ | -------- |\n| **Клиент** | Физлицо, производящее перевод с использованием банковской карты на сайте Мерчанта |\n| **Мерчант** | Бизнес, принимающий и осуществляющий переводы по банковским картам на своем сайте |\n| **Т‑Касса** | Сервис, помогающий проводить выплату клиенту-физлицу |\n| **Эмитент** | Банк, выпустивший карту клиента-физлица |\n| **PCI DSS**| Международный стандарт безопасности, созданный для защиты данных банковских карт |\n| **3-D Secure** | Протокол, который используется как дополнительный уровень безопасности для онлайн-кредитных и дебетовых карт. 3-D Secure добавляет ещё один шаг аутентификации для онлайн-платежей |\n| **Терминал** | Точка приема платежей Мерчанта (в общем случае привязывается к сайту, на котором осуществляется прием платежей). Далее в этой документации описан протокол для терминала мерчанта. <br> Для проведения тестов используются данные тестового терминала TinkoffBankTest (пароль аналогичен) |\n| **ККМ** | Контрольно-кассовая машина|\n|**Личный кабинет Мерчанта**|[Веб-приложение](https://business.tbank.ru/oplata/main), в котором Мерчант управляет интернет-эквайрингом - настраивает параметры терминалов, подтверждает или отменяет платежи, анализирует статистику|\n\n\n# Параметры терминала\nКаждый терминал обладает свойствами, которые влияют на те или иные аспекты приёма платежей. Эти свойства настраиваются при подключении интернет-эквайринга и могут быть изменены в Личном кабинете Мерчанта\n\nВ таблице ниже перечислены основые параметры приёма платежей для терминала\n\n|Название параметра|Формат|Описание|\n|---|---|---|\n|TerminalKey|20 символов (чувствительно к регистру)|Уникальный символьный ключ терминала. Устанавливается Т‑Кассой|\n|Success URL|250 символов(чувствительно к регистру)| URL на веб-сайте Мерчанта, куда будет переведен клиент в случае успешной оплаты <br> —   true - платеж завершился успешно <br> — false — платеж не завершился *\n|Fail URL| 250 символов(чувствительно к регистру)|URL на веб-сайте Мерчанта, куда будет переведен клиент в случае неуспешной оплаты *\n|Success Add Card URL| 250 символов (чувствительно к регистру)|URL на веб-сайте Мерчанта, куда будет переведен клиент после успешной привязки карты *|\n|Fail Add Card URL| 250 символов(чувствительно к регистру)|URL на веб-сайте Мерчанта, куда будет переведен клиент после неуспешной привязки карты *|\n|Notification URL| 250 символов(чувствительно к регистру)|URL на веб-сайте Мерчанта, куда будет отправлен POST запрос о статусе выполнения вызываемых методов. Только для методов **Authorize**, **FinishAuthorize**, **Confirm**, **Cancel**|\n|Валюта терминала|3 символа| Валюта, в которой будут происходить списания по данному терминалу, если иное не передано в запросе|\n|Активность терминала|Рабочий /Неактивный /Тестовый|Определяет режим работы данного терминала|\n|Password |20 символов(чувствительно к регистру)|Используется для подписи запросов/ответов. Является секретной информацией, известной только Мерчанту и Т‑Кассе. Пароль находится в [личном кабинете](https://business.tbank.ru/oplata/main) мерчанта\n|Отправлять нотификацию на FinishAuthorize|Да/Нет| Определяет, будет ли отправлена нотификация на выполнение метода **FinishAuthorize** (по умолчанию да)|\n|Отправлять нотификацию на Completed|Да/Нет| Определяет, будет ли отправлена нотификация на выполнение метода **AttachCard** (по умолчанию Да)|\n|Отправлять нотификацию на Reversed|Да/Нет| Определяет, будет ли отправлена нотификация на выполнение метода **Cancel** (по умолчанию Да)|\n\n\\* *в URL можно указать необходимые параметры в виде ${<параметр>}, которые будут переданы на URL\nметодом GET*\n\n# Подпись запроса\nПеред выполнением запроса MAPI проверяет, можно ли доверять его инициатору. Для этого сервер проверяет подпись запроса. В MAPI используется механизм подписи с помощью токена. Мерчант должен добавлять токен к каждому запросу, где это требуется. \n\n> В описании входных параметров для каждого метода мы указали, нужно подписывать запрос или нет. Токен формируется на основании тех полей, которые присутствуют в запросе, поэтому токены для каждого запроса уникальные, и не совпадают никогда\n\n**Токен** в MAPI — это строка, в которой Мерчант зашифровал данные своего запроса с помощью пароля. Для создания токена Мерчант использует пароль из Личного кабинета мерчанта\n\nРассмотрим на примере  процесс шифрования тела запроса для метода Init:\n```json\n{\n  \"TerminalKey\": \"MerchantTerminalKey\",\n  \"Amount\": 19200,\n  \"OrderId\": \"21090\",\n  \"Description\": \"Подарочная карта на 1000 рублей\",\n  \"Token\": \"68711168852240a2f34b6a8b19d2cfbd296c7d2a6dff8b23eda6278985959346\",\n  \"DATA\": {\n    \"Phone\": \"+71234567890\",\n    \"Email\": \"a@test.com\"\n  },\n  \"Receipt\": {\n    \"Email\": \"a@test.ru\",\n    \"Phone\": \"+79031234567\",\n    \"Taxation\": \"osn\",\n    \"Items\": [\n      {\n        \"Name\": \"Наименование товара 1\",\n        \"Price\": 10000,\n        \"Quantity\": 1,\n        \"Amount\": 10000,\n        \"Tax\": \"vat10\",\n        \"Ean13\": \"303130323930303030630333435\"\n      },\n      {\n        \"Name\": \"Наименование товара 2\",\n        \"Price\": 3500,\n        \"Quantity\": 2,\n        \"Amount\": 7000,\n        \"Tax\": \"vat20\"\n      },\n      {\n        \"Name\": \"Наименование товара 3\",\n        \"Price\": 550,\n        \"Quantity\": 4,\n        \"Amount\": 4200,\n        \"Tax\": \"vat10\"\n      }\n    ]\n  }\n}\n```\n\nЧтобы зашифровать данные запроса Мерчант должен выполнить следующие шаги:\n1. Собрать массив передаваемых данных в виде пар Ключ-Значения. В массив нужно добавить только параметры корневого объекта. Вложенные объекты и массивы не участвуют в расчете токена. В примере ниже в массив включены параметры `TerminalKey`, `Amount`, `OrderId`, `Description`  и исключен объект `Receipt` и `DATA`.\n``` JSON\n[{\"TerminalKey\": \"MerchantTerminalKey\"},{\"Amount\": \"19200\"},{\"OrderId\": \"21090\"},{\"Description\": \"Подарочная карта на 1000 рублей\"}]\n```\n\n2. Добавить в массив пару {`Password`, Значение пароля}. Пароль можно найти в личном кабинете Мерчанта\n``` JSON\n[{\"TerminalKey\": \"MerchantTerminalKey\"},{\"Amount\": \"19200\"},{\"OrderId\": \"21090\"},{\"Description\": \"Подарочная карта на 1000 рублей\"},{\"Password\": \"usaf8fw8fsw21g\"}]\n```\n\n3. Отсортировать массив по алфавиту по ключу.\n```JSON\n[{\"Amount\": \"19200\"},{\"Description\": \"Подарочная карта на 1000 рублей\"},{\"OrderId\": \"21090\"},{\"Password\": \"usaf8fw8fsw21g\"},{\"TerminalKey\": \"MerchantTerminalKey\"}]\n```\n\n4. Конкатенировать только **значения** пар в одну строку.\n```JSON\n\"19200Подарочная карта на 1000 рублей21090usaf8fw8fsw21gMerchantTerminalKey\"\n```\n\n5. Применить к  строке хеш-функцию SHA-256 (с поддержкой UTF-8).\n```JSON\n\"0024a00af7c350a3a67ca168ce06502aa72772456662e38696d48b56ee9c97d9\"\n```\n\n6. Добавить получившийся результат в значение параметра `Token` в тело запроса и отправить запрос.\n```JSON\n{\n  \"TerminalKey\": \"MerchantTerminalKey\",\n  \"Amount\": 19200,\n  \"OrderId\": \"21090\",\n  \"Description\": \"Подарочная карта на 1000 рублей\",\n  \"DATA\": {\n    \"Phone\": \"+71234567890\",\n    \"Email\": \"a@test.com\"\n  },\n  \"Receipt\": {\n    \"Email\": \"a@test.ru\",\n    \"Phone\": \"+79031234567\",\n    \"Taxation\": \"osn\",\n    \"Items\": [\n      {\n        \"Name\": \"Наименование товара 1\",\n        \"Price\": 10000,\n        \"Quantity\": 1,\n        \"Amount\": 10000,\n        \"Tax\": \"vat10\",\n        \"Ean13\": \"303130323930303030630333435\"\n      },\n      {\n        \"Name\": \"Наименование товара 2\",\n        \"Price\": 20000,\n        \"Quantity\": 2,\n        \"Amount\": 40000,\n        \"Tax\": \"vat20\"\n      },\n      {\n        \"Name\": \"Наименование товара 3\",\n        \"Price\": 30000,\n        \"Quantity\": 3,\n        \"Amount\": 90000,\n        \"Tax\": \"vat10\"\n      }\n    ]\n  },\n  \"Token\": \"0024a00af7c350a3a67ca168ce06502aa72772456662e38696d48b56ee9c97d9\"\n}\n```\nПроверить корректность формирования токена можно сервисом https://tokentcs.web.app\n\n> Помимо этого информацию о корректности токена можно проверить в ЛК ИЭ в разделе \"Операции\".\nВыберите нужный заказ, затем \"Дополнительная информация о заказе\", поле \"inittokenisvalid\". Если значение в этом поле будет \"true\", это означает, что токен валидный. Если \"false\", то токен передан некорректный.\n"
	},
	"servers": [
		{
			"url": "https://securepay.tinkoff.ru",
			"description": "production"
		},
		{
			"url": "https://rest-api-test.tinkoff.ru",
			"description": "test"
		}
	],
	"security": [],
	"tags": [
		{
			"name": "Сценарии оплаты по карте",
			"description": "## Правила работы\n\nПрием платежей осуществляется вызовом методов с передачей параметров методом POST в формате JSON. Все методы и передаваемые параметры являются чувствительными к регистру. \nДля нашего ИЭ оплата проходит только в рублях.\n> При необходимости оплаты в валюте, мерчант самостоятельно на своей стороне реализовывает логику конвертации суммы в запросе\n  \nДля POST-запроса в заголовке должен присутствовать `Content Type: application/json`.\nURL: https://securepay.tinkoff.ru/v2/\n  \n\n## Сценарии платежа\nОсновная сущность в интернет-эквайринге Т‑Кассы — это **платеж**. В зависимости от настроек терминала платеж может идти по разным сценариям\n\nЕсли Мерчант хочет получить деньги сразу после завершения оплаты, тогда терминал должен быть настроен на приём **одностадийных платежей**. Другой способ — **двухстадийный платеж**. После оплаты деньги заблокируются на карте клиента, а Мерчант затем подтверждает платёж в удобный ему момент.  \n\n>Настроить способ приема на терминале можно в Личном кабинете Мерчанта, либо указать нужный тип при вызове метода `Init` в параметре `PayType`\n\n### Стандартный платеж для мерчантов с PCI DSS\n#### Инициализация платежа\nДля того, чтобы создать платеж, Мерчант должен инициировать платеж методом `Init`, в котором передается сумма платежа и номер заказа\n\nПри создании платежа (вызов метода /Init), в объекте DATA в атрибуте OperationInitiatorType необходимо передавать признак инициатора операции. См. метод [Init](#tag/Standartnyj-platyozh/paths/~1Init/post)\n\nВ ответ MAPI создаст новый платеж в статусе **NEW** и вернёт обратно его идентификатор в параметре `PaymentId`\n\nНа следующем этапе Мерчант вызвает метод `Check3DSVersion`, в котором передает зашифрованные карточные данные клиента и `PaymentId`. Это нужно для проверки версии протокола 3D-Secure по карте. Она может быть либо версии 1.0, либо 2.0.\n\nЕсли в ответе метода `Check3DSVersion` есть параметр `ThreeDSMethodURL`, то браузер клиента должен вызывать ресурс, адрес которого пришел в параметре >`ThreeDSMethodURL`. В запросе нужно передать строковый параметр `threeDSMethodData`. Эта строка — закодированный в формате `base64` JSON-объект с параметрами:\n|Название параметра|Тип данных|Описание|\n|---|---|---|\n|threeDSMethodNotificationURL|string|Обратный адрес, на который будет >отправлен запрос после прохождения `3DS Method`|\n|threeDSServerTransID|string|Идентификатор транзакции из ответа метода `Check3DSVersion`|\n\nБраузер должен вызвать `3DS Method` в скрытом iframe и передать данные в формате `x-www-form-urlencoded`\n\nПример запроса на `ThreeDSMethodURL`:\n\n``` html\n<body onload=\"document.form.submit()\">\n<form name=\"form\" action=\"{ThreeDSMethodURL}\" method=\"post\" >\n<input type=\"hidden\" name=\"threeDSMethodData\" value=\"eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjU2ZTcxMmE1LTE5MGEtNDU4OC05MWJjLWUwODYyNmU3N2M0NCIsInRocmVlRFNNZXRob2ROb3RpZmljYXRpb25VUkwiOiJodHRwczovL3Jlc3QtYXBpLXRlc3QudGlua29mZi5ydS92Mi9Db21wbGV0ZTNEU01ldGhvZHYyIn0\">\n</form>\n</body>\n```\n\nПример декодированного значения `threeDSMethodData`:\n```json\n{\n\n\"threeDSServerTransID\":\"56e712a5-190a-4588-91bc-e08626e77c44\",\n\"threeDSMethodNotificationURL\":\"https://rest-api-test.tinkoff.ru/v2/>Complete3DSMethodv2\"\n\n}\n```\n\n  \n\n### Стандартный платеж\n\nЗа проведение платежа отвечает метод — `FinishAuthorize`. Через него Мерчант передает в MAPI карточные данные клиента, таким образом продолжая обработку платежа\n\n  \n\n>Если платеж **одностадийный**, то после вызова метода деньги будут списаны с карты клиента\n>\n>Если платеж **двухстадийный**, то после вызова метода деньги будут заблокированы на карте клиента. Мерчант должен дополнительно подтвердить списание, вызвав метод `Confirm`\n\n  \n\nВ ответ MAPI вернет один из возможных статусов:\n\n|Статус|Описание|Доступные действия|\n|---|---|---|\n|AUTH_FAIL|Неуспешная авторизация|Провести платеж заново|\n|REJECTED|Платеж отклонен|Провести платеж заново|\n|CONFIRMED|Успешный одностадийный платеж|-|\n|AUTHORIZED|Успешный двухстадийный платеж|Подтвердить платеж|\n|3DS_CHECKING|Требуется подтверждение платежа по 3D-Secure|<ul><li>Отменить платеж (действие доступно для клиента)</li><li>Пройти подтверждение (действие доступно для клиента)</li></ul>|\n\n\n#### Без 3DS-подтверждения\n\nЕсли по платежу не требуется проходить подтверждение 3DS, то MAPI в ответе `FinishAuthorize` вернет один из трех конечных статусов платежа:\n\n- **CONFIRMED** (при одностадийном платеже),\n\n- **AUTHORIZED** (при двухстадийном платеже),\n\n- **REJECTED** (при отказе в проведении платежа).\n\n  \n\n#### C 3DS-подтверждением\n\nЕсли в ответе метода `FinishAuthorize` вернулся статус платежа **3DS_CHECKING**, то это означает, что требуется пройти проверку 3D-Secure. Для этого Мерчант должен сформировать запрос в сервис аутентификации банка, выпустившего карту. Адрес сервиса возвращается в ответе `FinishAuthorize` в параметре `ACSUrl`. Вместе с этим требуется перенаправить клиента на эту же страницу `ACSUrl` для прохождения 3DS.\n\nВ заголовке запроса требуется передать параметр `Content-Type` со значением ` application/x-www-form-urlencoded`. Набор параметров в теле запросе зависит от версии протокола 3DS по карте\n\n**Важно:** Проведение тестовых платежей возможно только на тестовом окружении\n\n##### 3DS 1.0\nЕсли версия **3DS 1.0**, то в запросе передаются параметры:\n\n|Название параметра|Описание|\n|---|---|\n|MD| Информация для идентификации платежной сессии на стороне торговой точки. Придет в ответе метода `FinishAuthorize`|\n|PaReq| Запрос на аутентификацию плательщика, который содержит разные детали транзакции. Придет в ответе метода `FinishAuthorize`|\n|TermURL|Адрес перенаправления после аутентификации 3DS. Должен содержать ссылку на обработчик на стороне Мерчанта, принимающий результаты прохождения 3-D Secure|\n\n##### 3DS 2.0\nЕсли версия **3DS 2.0**, то в запросе передаются параметры, в зависимости от типа устройства клиента. Тип устройства передается в запросе `FinishAuthorize` в параметре `deviceChannel`. Возможны два варианта — браузер (BRW, код `02`) и приложение (APP, код `01`).\n\n**Параметры для браузера:**\n|Название параметра|Тип данных| Описание|\n|---|---|---|\n|creq|string|JSON с параметрами `threeDSServerTransID`, `acsTransID`,`challengeWindowSize`, `messageType`, `messageVersion` закодированный в формат `base64`|\n  \nСтрока `creq` для браузера формируется из следующих параметров:\n|Название параметра|Тип данных| Описание|\n|---|---|---|\n|threeDSServerTransID|string|Идентификатор транзакции из ответа метода `FinishAuthorize`|\n|acsTransID|string|Идентификатор транзакции, присвоенный ACS, полученный в ответе на `FinishAuthorize`|\n|challengeWindowSize|string|Размер экрана, на котором открыта страница ACS.Допустимые значения:<li>**01** = 250 x 400</li><li>**02** = 390 x 400</li><li>**03** = 500 x 600</li><li>**04** = 600 x 400</li><li>**05** = Full screen</li></ul>|\n|messageType|string|Передается фиксированное значение «CReq»|\n|messageVersion|string|Версия 3DS, полученная из ответа метода `Check3dsVersion`|\n\n**Параметры для приложения:**\n|Название параметра|Тип данных| Описание|\n|---|---|---|\n|creq|string|JWE object с параметрами `threeDSServerTransID`, `acsTransID`, `messageType`, `messageVersion`, `sdkTransID`, `sdkCounterStoA` закодированный в формат `PS256`|\n\nСтрока `creq` для приложения формируется из следующих параметров:\n|Название параметра|Тип данных| Описание|\n|---|---|---|\n|threeDSServerTransID|string|Идентификатор транзакции из ответа метода `FinishAuthorize`|\n|acsTransID|string|Идентификатор транзакции, присвоенный ACS, полученный в ответе на `FinishAuthorize`|\n|messageType|string|Передается фиксированное значение «CReq»|\n|messageVersion|string|Версия 3DS, полученная из ответа метода `Check3dsVersion`|\n|sdkTransID|string|Уникальный идентификатор транзакции, назначенный 3DS SDK для идентификации одной транзакции, полученный в ответе на `FinishAuthorize`|\n|sdkCounterStoA|string|Внутренний счетчик 3DS SDK внутри ACS. Поддерживаемые значения:<br>000-255</br>|\n\n\n#### Подтверждение прохождения 3DS\nПосле того, как сервис аутентификации банка, выпустившего карту, прислал результат прохождения 3D-Secure, Мерчант должен передать эту информацию в MAPI. В зависимости от версии протокола 3DS для этого нужно вызвать один из методов:\n- Для 3DS 1.0 — `Submit3DSAuthorization`,\n- Для 3DS 2.0 — `Submit3DSAuthorizationV2`.\n\n### Стандартный платеж для Мерчантов без PCI DSS\n#### Инициализация платежа\nДля того, чтоды создать платеж, Мерчант должен инициировать платеж методом `Init`, в котором передается сумма платежа и номер заказа. При успешном прохождении запроса в ответе на метод `Init` будет прислан параметр `PaymentURL`, на который необходимо переадресовать клиента. При переходе на `PaymentURL` клиенту откроется платежная форма Т‑Кассы, где необходимо ввести реквизиты карты, а дальше — этап прохождения 3DS.\n\n> Методы Authorize и FinishAuthorize вызываются системами Т‑Кассы при переадресации клиента на PaymentURL (возвращается в ответе на метод Init). Актуально для Мерчантов, использующих платежную форму Банка\n\nПри создании платежа (вызов метода /Init), в объекте DATA в атрибуте OperationInitiatorType необходимо передавать признак инициатора операции. См. метод [Init](#tag/Standartnyj-platyozh/paths/~1Init/post)\n\n#### Метод Authorize\nВызов происходит автоматически при переадресации клиента на страницу PaymentURL, указанную в ответе на Init. Статус платежа выставляется в FORM_SHOWED\n\n#### Метод FinishAuthorize\nПодтверждает инициированный платеж передачей карточных данных и осуществляет списание денежных средств с карты клиента\n\n#### Осуществление платежа на платежной форме Т‑Кассы\nВызывается формой оплаты, доступной по адресу PaymentURL, при заполнении клиентом карточных данных и нажатии кнопки «Оплатить»\n\nСтатус перевода:\n* при успешном сценарии: CONFIRMED,\n* при неуспешном: REJECTED.\n\nПереадресация клиента:\n* в случае успешного перевода на Success URL;\n* в случае неуспешного перевода на Fail URL.\n\n\n#### Завершение платежа\nЕсли платёж завершился успешно, то клиент будет перенаправлен на страницу `Success URL` из настроек терминала\n\n### Двухстадийный платеж\n\nДвухстадийный платеж — платеж, состоящий из двух этапов. На первом этапе проверяется наличие средств у клиента и осуществляется их блокировка (холдирование средств). На втором этапе Мерчант должен либо подтвердить списание средств, либо отменить холдирование средств. \n\nКогда клиент оплачивает заказ, деньги за покупку замораживаются (холдируются) на его счете до семи дней.\nЕсли клиент за это время отказался от заказа, он автоматически получает деньги обратно, а компания избегает комиссии за эквайринг\n\nЕсли клиент не стал отказываться от товара и вы подтвердили продажу в течение семи дней, деньги на его счете размораживаются и поступают на счет компании. В этом случае Т‑Касса списывает комиссию\n\nЕсли Мерчант не подтвердит платеж вовремя, может столкнуться с негативом от клиента\n\nНапример, в случае, когда клиент может не вспомнить, за что списались деньги, и может обратиться в свой банк для возврата средств\n\n<details><summary><b>Про сроки холдирования</b></summary>\n<br>\n\nХолдирование денежных средств на карте покупателя зависит от его банка эмитента и не всегда равно семи дням. Этот срок может быть другим. Например, покупатель оплатил товар, его банк заморозил средства на карте на 3 дня, они прошли, деньги разморозились и стали доступны на счете. Спустя день вы подтверждаете платеж, списывая сумму покупки. Фактически оплата прошла один раз.\n\n</details>\n\n**Техническая реализация двухстадийных платежей:**  \n\nЕсли терминал настроен на прием двухстадийный платежей, то после вызова метода `FinishAuthorize` деньги блокируются на карте клиента, и платеж переходит в статус **AUTHORIZED**\n\nКогда Мерчант захочет списать деньги, он должен вызвать метод `Confirm` и передать в запросе `PaymentId`. После успешного списания платеж перейдет в статус **CONFIRMED**. Если Мерчант хочет отменить заказ (например, данный товар закончился), он должен вызвать метод `Cancel`\n\n### Рекуррентные платежи\nМерчант может сохранять платежные данные клиента и использовать их для повторных списаний. Такие платежи называются **рекуррентными**. В этом случае клиент должен совершить хотя бы один платеж, который был настроен как рекуррентный. Для этого Мерчант должен передать параметр `Recurrent` в методе **Init**.\n\nПосле успешной оплаты MAPI отправит Мерчанту уведомление об изменении статуса платежа на **AUTHORIZED** или **CONFIRMED** и передаст параметр `RebillId`. Следующие платежи этого клиента будут рекуррентными, если Мерчант вызовет метод **Init**, а затем без переадресации на `PaymentURL` вызовет метод **Charge** и передаст параметр `RebillId`.\n  \n>Метод `Charge` работает как по одностадийной, так и по двухстадийной схеме оплаты. Чтобы перейти на двухстадийную схему, нужно переключить терминал в [Личном кабинете](https://business.tbank.ru/oplata/main), а также написать обращение на <acq_help@tbank.ru> с просьбой переключить схему рекуррентов\n\n## Возврат и отмена платежа\nМерчант может отменить успешный платеж. В таком случае, деньги вернутся на ту карту, которую клиент указывал при совершении платежа\n\nУспешный платеж — платеж, который находится в статусе **AUTHORIZED** или **CONFIRMED**. Если Мерчант отменяет платеж в статусе **AUTHORIZED**, то происходит разморозка заблокированной суммы на карте клиента. Если платеж в статусе **CONFIRMED**, то деньги списываются со счета Мерчанта и возвращаются на карту клиента.\n  \n> Возврат может быть частичный или полный. Частичный возврат — отмена не на всю сумму платежа. Полный возврат — отмена на полную сумму платежа.\n\nЧтобы отменить платеж, Мерчант должен вызвать метод [Cancel](https://www.tbank.ru/kassa/dev/payments/#tag/Otmena-platezha/operation/Cancel) и передать в запросе идентификатор платежа `PaymentId`. По умолчанию, MAPI сделает полный возврат. Если требуется частичная отмена, то во входящем запросе Мерчант должен передать сумму, которая вернется клиенту, в параметре `Amount`.  \n\n<details><summary><b>Про частичный возврат при подключенной Онлайн-кассе</b></summary>\n<br>\n\n1. Если при работе используется онлайн-касса, то возврат можно делать только по позициям в чеке. Если возврат нужно сделать на иную сумму, то сначала надо отключить онлайн-кассу и только потом провести возврат через API методом [Cancel](https://www.tbank.ru/kassa/dev/payments/#tag/Otmena-platezha/operation/Cancel), передавая в нем нужную сумму в параметре `Amount`\n\n2. Если у клиента подключена онлайн-касса, то в методе [Cancel](https://www.tbank.ru/kassa/dev/payments/#tag/Otmena-platezha/operation/Cancel) нужно передать:\n* в `Amount` — сумму к частичному возврату\\анхолду;\n* в `Receipt` — передать параметры чека.\n\nВ `Items` — параметр `Amount` для частичного возврата\\анхолда должен рассчитываться следующим образом: Price * Quantity = Amount\n\nНапример, товар стоит 500.00 рублей и нужно вернуть 50.00 рублей, то в [Cancel](https://www.tbank.ru/kassa/dev/payments/#tag/Otmena-platezha/operation/Cancel) нужно передать Amount = 5000:\n\n```JSON\n{\n    \"Name\": \"Item12\",\n    \"Price\": 50000,\n    \"Quantity\": 0.1,\n    \"Amount\": 5000,\n    \"Tax\": \"none\",\n    \"PaymentObject\": \"service\"\n}\n```\nЕсли в чеке несколько позиций, то по каждой позиции в чеке нужно сделать аналогично\n\nБез активной онлайн-кассы достаточно передать нужную сумму в `Amount` в методе [Cancel](https://www.tbank.ru/kassa/dev/payments/#tag/Otmena-platezha/operation/Cancel). В случае частичного анхолда остаток также остается в резерве и его нужно подтвердить\n\n## Получение данных о платеже\nМерчант может получить информацию об основных параметрах платежа в любой момент\n\nЕсли требуется получить данные по конкретному платежу, то Мерчант должен вызвать метод [`GetState`](#tag/Standartnyj-platyozh/paths/~1GetState/post) и передать в запросе `PaymentId`\n\nЕсли по одному заказу было несколько, то получить историю платежей и их текущий статус можно с помощью метода [`CheckOrder`](#tag/Standartnyj-platyozh/paths/~1CheckOrder/post). Мерчант должен передать в запросе `OrderId`\n\n*`OrderId` не является уникальным параметром. Рекомендуется сверять дополнительные данные заказа — `PaymentId` и `Amount`.*\n\n## Статусная модель платежа\nВ процессе обработки платеж меняет свое состояние. В таблице ниже описаны основные статусы, а также условия перехода в них\n\n|Статус|Правило перехода|\n|---|---|\n|**NEW**|MAPI получил запрос `Init`. После этого, он создает новый платеж в статусе **NEW** и возвращает обратно его идентификатор в параметре `PaymentId` и ссылку на платежную форму в параметре `PaymentURL`|\n|**FORM_SHOWED**|Мерчант перенаправил клиента на страницу платежной формы `PaymentURL` и страница загрузилась у клиента в браузере|\n|**AUTHORIZING**|Платеж обрабатывается MAPI и платежной системой|\n|**3DS_CHECKING**|Платеж проходит проверку 3D-Secure|\n|**3DS_CHECKED**|Платеж успешно прошел проверку 3D-Secure|\n|**AUTHORIZED**|Платеж авторизован, деньги заблокированы на карте клиента|\n|**CONFIRMING**|Подтверждение платежа обрабатывается MAPI и платежной системой|\n|**CONFIRMED**|Платеж подтвержден, деньги списаны с карты клиента|\n|**REVERSING**|Мерчант запросил отмену авторизованного, но еще не подтвержденного платежа. Возврат обрабатывается MAPI и платежной системой|\n|**PARTIAL_REVERSED**|Частичный возврат по авторизованному платежу завершился успешно|\n|**REVERSED**|Полный возврат по авторизованному платежу завершился успешно|\n|**REFUNDING**|Мерчант запросил отмену подтвержденного платежа. Возврат обрабатывается MAPI и платежной системой|\n|**PARTIAL_REFUNDED**| Частичный возврат по подтвержденному платежу завершился успешно|\n|**REFUNDED**|Полный возврат по подтвержденному платежу завершился успешно|\n|**СANCELED**|Мерчант отменил платеж|\n|**DEADLINE_EXPIRED**|1. Клиент не завершил платеж в срок жизни ссылки на платежную форму `PaymentURL`. Этот срок Мерчант настраивает в Личном кабинете, либо передает в параметре `RedirectDueDate` при вызове метода `Init` <br>2. Платеж не прошел проверку 3D-Secure в срок|\n|**REJECTED**|Банк отклонил платеж|\n|**AUTH_FAIL**|Платеж завершился ошибкой или не прошел проверку 3D-Secure|\n\nНа схеме ниже — полный жизненный цикл платежа\n[![scheme](https://cdn.t-static.ru/static/documents/payment%20schema%20EACQ.jpg)](https://cdn.t-static.ru/static/documents/payment%20schema%20EACQ.jpg)"
		},
		{
			"name": "Методы работы с клиентами",
			"description": ""
		},
		{
			"name": "Сценарии привязки карты",
			"description": "## Общая информация\nМерчант может сохранить платежные данные клиента, чтобы при последующих оплатах ему не приходилось заполнять платежную форму. Для этого клиент привязывается к терминалу, через который будут проходить платежи. После, для этого клиенту можно сохранять карты. \n\nМерчант может выбрать способ привязки клиента — с проверкой 3D-Secure или без\n\nЕсли выбрана опция с проверкой, то клиент должен будет подтвердить операцию уже на этом этапе. Все дальнейшие платежи будут проходить по схеме рекуррентного платежа, то есть подтверждать каждое списание не нужно\n\nЕсли Мерчант выбрал опцию привязки без проверки 3D-Secure, то клиент и его карты будут сохранены без подтверждения. Однако, оно подтребуется при первом платеже по привязанной карте\n\nЗа способ привязки отвечает параметр `CheckType` в запросе метода `AddCard`. Если Мерчант не передаст этот параметр, то MAPI, по умолчанию, будет считать, что привязка прошла без подтверждения клиента\n\n> Для корректной работы методов Т‑Касса должна разрешить Мерчанту привязывать карты и клиентов к терминалу. В результате привязки карты к параметру `CustomerKey` будет привязана `CardId`\n\n## Сценарии работы с картами и клиентами\n### Добавление, получение и удаление клиента\nДля сохранения идентификатора клиента `CustomerKey` Мерчант должен вызвать метод `AddCustomer` и передать в запросе параметр `CustomerKey`\n\nДля удаления клиента из списка привязанных к терминалу Мерчант должен вызвать метод `RemoveCustomer`передать в запросе параметр `CustomerKey`\n\nДля получения сохраненных данных клиента Мерчант должен вызвать метод `GetCustomer` и передать в запросе параметр `CustomerKey`\n\n### Добавление, получение и удаление карты\n<span style=\"color:#900C3F\">для Мерчантов с PCI DSS</span>\n\n#### Инициализация привязки\nПосле сохранения клиента в списке привязанных к терминалу Мерчант может добавить карту. Для этого он вызывает метод `AddCard` и передает в запросе параметр `CustomerKey`. В ответ MAPI пришлет идентификатор сессии привязки карты `PaymentId`.\n\n#### Проверка версии 3DS\nНа следующем этапе Мерчант вызвает метод `Check3DSVersion`, в котором передает зашифрованные карточные данные клиента и `PaymentId`. Это нужно для проверки версии протокола 3D-Secure по карте. Она может быть либо версии 1.0, либо 2.0.\n\n>Если в ответе метода `Check3DSVersion` есть параметр `ThreeDSMethodURL`, то браузер клиента должен вызывать ресурс, адрес которого пришел в параметре >`ThreeDSMethodURL`. В запросе нужно передать строковый параметр `threeDSMethodData`. Эта строка - закодированный в формате `base64` JSON-объект с параметрами:\n>|Название параметра|Тип данных|Описание|\n>|---|---|---|\n>|threeDSMethodNotificationURL|string|Обратный адрес, на который будет отправлен запрос после прохождения `3DS Method`|\n>|threeDSServerTransID|string|Идентификатор транзакции из ответа метода `Check3DSVersion`|\n>\n>Браузер должен вызвать `3DS Method` в скрытом iframe и передать данные в формате `x-www-form-urlencoded`\n>\n>Пример запроса на `ThreeDSMethodURL`:\n>\n>``` js\n><body onload=\"document.form.submit()\">\n><form name=\"form\" action=\"{ThreeDSMethodURL}\" method=\"post\" >\n> <input type=\"hidden\" name=\" threeDSMethodData\"\n>value=\"eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjU2ZTcxMmE1LTE5MGEtNDU4OC05MWJjLWUwODYyNmU3N2M0NCIsInRocm\n>VlRFNNZXRob2ROb3RpZmljYXRpb25VUkwiOiJodHRwczovL3Jlc3QtYXBpLXRlc3QudGlua29mZi5ydS92Mi9Db21wbGV0ZTNEU0\n>1ldGhvZHYyIn0\">\n></form>\n></body>\n>```\n>\n>Пример декодированного значения `threeDSMethodData`:\n>```json\n>{\n>\"threeDSServerTransID\":\"56e712a5-190a-4588-91bc-e08626e77c44\",\n>\"threeDSMethodNotificationURL\":\"https://rest-api-test.tinkoff.ru/v2/>Complete3DSMethodv2\"\n>}\n>```\n\n#### Завершение привязки\nДля завершения привязки карты Мерчант вызывает метод `AttachCard` и передает зашифрованные карточные данные, а также набор параметров для прохождения проверки 3D-Secure\n\nВ ответ MAPI вернет один из возможных статусов:\n|Статус|Описание|Доступные действия|\n|---|---|---|\n|REJECTED|Привязка отклонена|Провести привязку заново|\n|COMPLETED|Успешная привязка карты|-|\n|3DS_CHECKING|Требуется подтверждение привязки по 3D-Secure|<ul><li>Отменить привязку</li><li>Пройти подтверждение</li></ul>\n\nЕсли в ответе метода `AttachCard` вернулся статус платежа **3DS_CHECKING**, то это означает, что требуется пройти проверку 3D-Secure. Для этого Мерчант должен\nсформировать запрос в сервис аутентификации банка, выпустившего карту. Адрес сервиса возвращается в ответе `AttachCard` в параметре `ACSUrl`. Вместе с\nэтим требуется перенаправить клиента на эту же страницу `ACSUrl` для прохождения 3DS.\n\nВ заголовке запроса требуется передать параметр `Content-Type` со значением ` application/x-www-form-urlencoded`. Набор параметров в теле запросе зависит от версии протокола 3DS по карте\n\n##### 3DS 1.0\nЕсли версия **3DS 1.0**, то в запросе передаются параметры:\n\n|Название параметра|Описание|\n|---|---|\n|MD| Информация для идентификации платежной сессии на стороне торговой точки. Придет в ответе метода `AttachCard`|\n|PaReq|\tЗапрос на аутентификацию плательщика, который содержит разные детали транзакции. Придет в ответе метода `AttachCard`|\n|TermURL|Адрес перенаправления после аутентификации 3DS. Должен содержать ссылку на обработчик на стороне Мерчанта, принимающий результаты прохождения 3-D Secure|\n\n##### 3DS 2.0\nЕсли версия **3DS 2.0**, то в запросе передаются параметры, в зависимости от типа устройства клиента\n\n**Параметры для браузера:**\n|Название параметра|Тип данных| Описание|\n|---|---|---|\n|creq|string|JSON с параметрами `threeDSServerTransID`, `acsTransID`,`challengeWindowSize`, `messageType`, `messageVersion` закодированный в формат `base64`|\n\nСтрока `creq` для браузера формируется из следующих параметров:\n|Название параметра|Тип данных| Описание|\n|---|---|---|\n|threeDSServerTransID|string|Идентификатор транзакции из ответа метода `AttachCard`|\n|acsTransID|string|Идентификатор транзакции, присвоенный ACS, полученный в ответе на `AttachCard`|\n|challengeWindowSize|string|Размер экрана, на котором открыта страница ACS.Допустимые значения:<li>**01** = 250 x 400</li><li>**02** = 390 x 400</li><li>**03** = 500 x 600</li><li>**04** = 600 x 400</li><li>**05** = Full screen</li></ul>|\n|messageType|string|Передается фиксированное значение «CReq»|\n|messageVersion|string|Версия 3DS, полученная из ответа метода `Check3dsVersion`|\n\n**Параметры для приложения:**\n|Название параметра|Тип данных| Описание|\n|---|---|---|\n|creq|string|JWE object с параметрами `threeDSServerTransID`, `acsTransID`, `messageType`, `messageVersion`, `sdkTransID`, `sdkCounterStoA` закодированный в формат `PS256`|\n\nСтрока `creq` для приложения формируется из следующих параметров:\n|Название параметра|Тип данных| Описание|\n|---|---|---|\n|threeDSServerTransID|string|Идентификатор транзакции из ответа метода `AttachCard`|\n|acsTransID|string|Идентификатор транзакции, присвоенный ACS, полученный в ответе на `AttachCard`|\n|messageType|string|Передается фиксированное значение «CReq»|\n|messageVersion|string|Версия 3DS, полученная из ответа метода `Check3dsVersion`|\n|sdkTransID|string|Уникальный идентификатор транзакции, назначенный 3DS SDK для идентификации одной транзакции, полученный в ответе на `AttachCard`|\n|sdkCounterStoA|string|Внутренний счетчик 3DS SDK внутри ACS. Поддерживаемые значения:<br>000-255</br>|\n\n#### Подтверждение прохождения 3DS\nПосле того, как сервис аутентификации банка, выпустившего карту, прислал результат прохождения 3D-Secure, Мерчант должен передать эту информацию в MAPI. В зависимости от версии протокола 3DS для этого нужно вызвать один из методов:\n- Для 3DS 1.0 — `Submit3DSAuthorization`,\n- Для 3DS 2.0 — `Submit3DSAuthorizationV2`.\n\n#### Завершение привязки\nЕсли привязка завершилась успешно, то клиент будет перенаправлен на страницу `Success Add Card URL` из настроек терминала\n\n## Статусная модель привязки карты\nВ процессе обработки операция привязки меняет свое состояние. В таблице ниже описаны основные статусы, а также условия перехода в них\n\n| Статус | Описание |\n| --- | --- |\n| NEW | Новая сессия |\n| FORM_SHOWED | Показ формы привязки карты |\n| 3DS_CHECKING | Отправка клиента на проверку 3DS |\n| 3DS_CHECKED | Клиент успешно прошел проверку 3DS |\n| AUTHORIZING | Отправка платежа на 0 руб |\n| AUTHORIZED | Платеж на 0 руб прошел успешно |\n| COMPLETED | Привязка успешно завершена |\n| REJECTED | Привязка отклонена |\n\n\nНа схеме ниже — полный жизненный цикл привязки карты\n\n[![scheme](https://cdn.t-static.ru/static/documents/Status%20scheme%20of%20linking%20cards.png)](https://cdn.t-static.ru/static/documents/Status%20scheme%20of%20linking%20cards.png)"
		},
		{
			"name": "Оплата через СБП",
			"description": "## Общая информация для оплат по QR\n1. Банк по умолчанию покупатель выбирает на своём устройстве, через API это настроить невозможно\n2. Если оплата СБП отклоняется на стороне эмитента, эквайер на своей стороне не может повлиять на это \n3. На платежной форме банка при выборе способа оплаты СБП, отображается QR-код с надписью \"Отсканируйте в приложении Т‑Банка\", т.к. мы не можем отвечать, что у другого банка есть возможность сканирования QR-кода внутри приложения, поэтому мы указываем только информацию про Т‑Банк\n4. По СБП не предусмотрена двухстадийная оплата, соответственно холдирование невозможно даже при рекуррентном платеже\n5. Способ оплаты СБП не работает для маркетплейсов\n6. Внимание! Тестирование оплаты через Систему быстрых платежей возможно на prod окружении и только на demo терминале \n\nURL: https://securepay.tinkoff.ru/v2/\n\n## Статусная модель платежа \nВ процессе обработки платеж меняет свое состояние. В таблице ниже описаны основные статусы, а также условия перехода в них\n|Статус|Правило перехода|\n|---|---|\n|**NEW**|MAPI получил запрос `Init`. После этого, он создает новый платеж в статусе **NEW** и возвращает обратно его идентификатор в параметре `PaymentId` и ссылку на платежную форму в параметре `PaymentURL`.|\n|**FORM_SHOWED**|Мерчант перенаправил клиента на страницу платежной формы `PaymentURL`, и страница загрузилась у клиента в браузере|\n|**AUTHORIZING**|Платеж обрабатывается MAPI и платежной системой|\n|**AUTHORIZED**|Платеж авторизован, деньги заблокированы на карте клиента|\n|**CONFIRMING**|Подтверждение платежа обрабатывается MAPI и платежной системой|\n|**CONFIRMED**|Платеж подтвержден, деньги списаны с карты клиента|\n|**REFUNDING**|Мерчант запросил отмену подтвержденного платежа. Возврат обрабатывается MAPI и платежной системой|\n|**ASYNC_REFUNDING**|Обработка возврата денежных средств по QR|\n|**PARTIAL_REFUNDED**| Частичный возврат по подтвержденному платежу завершился успешно|\n|**REFUNDED**|Полный возврат по подтвержденному платежу завершился успешно|\n|**CANCELED**|Мерчант отменил платеж|\n|**DEADLINE_EXPIRED**|1. Клиент не завершил платеж в срок жизни ссылки на платежную форму `PaymentURL`. Этот срок Мерчант настраивает в Личном кабинете, либо передает в параметре `RedirectDueDate` при вызове метода `Init` <br>2. Платеж не прошел проверку 3D-Secure в срок|\n|**ATTEMPTS_EXPIRED**|Клиент превысил количество попыток открытия формы|\n|**REJECTED**|Банк отклонил платеж|\n|**AUTH_FAIL**|Платеж завершился ошибкой или не прошел проверку 3D-Secure|\n\nНа схемах ниже изображен полный жизненный цикл платежа\n[![scheme](https://cdn.t-static.ru/static/documents/schemaSBPPayments.png)](https://cdn.t-static.ru/static/documents/schemaSBPPayments.png)\n\n## Привязка счёта\n### Таблица статусов привязки счёта\n|Статус|Правило перехода|\n|---|---|\n|**NEW**|MAPI получил запрос AddAccountQr или GetQr для сессии с рекуррентным платежом|\n|**PROCESSING**|QR сформирован и отправлен мерчанту|\n|**ACTIVE**|Привяза счета прошла успешно|\n|**INACTIVE**|Банк отклонил привязку счета|\n### Схема привязки счёта \n[![scheme](https://cdn.t-static.ru/static/documents/perehody_statysa_privyazki.png)](https://cdn.t-static.ru/static/documents/perehody_statysa_privyazki.png)\n\nНа схеме ниже приведены переходы статуса привязки счета при оплате с одновременной привязкой. Переходы статуса платежа в данной операции показаны на схеме полного жизненного цикла платежа\n[![scheme](https://cdn.t-static.ru/static/documents/Privyazka_pri_odnovremennoi_oplate.png)](https://cdn.t-static.ru/static/documents/Privyazka_pri_odnovremennoi_oplate.png)\n\n## Рекуррентный платеж\n### Таблица статусов рекуррентного платежа\n|Статус | Правило перехода|\n|--- | ---|\n|NEW | MAPI получил запрос Init. После этого он создает новый платеж в статусе NEW и возвращает обратно его идентификатор в параметре PaymentId|\n|FORM_SHOWED | MAPI принял запрос на обработку платежа. Ожидается подтверждение от НСПК о проведении оплаты по привязке|\n|AUTHORIZING | MAPI принял запрос от НСПК на авторизацию платежа|\n|AUTHORIZED | Платеж авторизован, деньги заблокированы на карте клиента|\n|CONFIRMING | Подтверждение платежа обрабатывается MAPI и платежной системой|\n|CONFIRMED | Платеж подтвержден, деньги списаны с карты клиента|\n|REFUNDING | Мерчант запросил отмену подтвержденного платежа. Возврат обрабатывается MAPI и платежной системой|\n|ASYNC_REFUNDING | Обработка возврата денежных средств по QR|\n|PARTIAL_REFUNDED | Частичный возврат по подтвержденному платежу завершился успешно|\n|REFUNDED | Полный возврат по подтвержденному платежу завершился успешно|\n|CANCELED | Мерчант отменил платеж|\n|REJECTED | Банк отклонил платеж|\n\n### Схема проведения рекуррентого платежа\n[![scheme](https://cdn.t-static.ru/static/documents/schtmaSBPRecurrent.png)](https://cdn.t-static.ru/static/documents/schtmaSBPRecurrent.png)   \n\n\n### Логика привязки при наличии нескольких терминалов\n[![scheme;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/sbp_recurrent_multiterminal_scheme.png)](https://cdn.t-static.ru/static/documents/sbp_recurrent_multiterminal_scheme.png)   \nЕсли клиент привязывает счет к терминалу мерчанта, у которого есть несколько терминалов, то клиент имеет возможность выполнять рекуррентные платежи на всех терминалах Мерчанта\n\nПроцесс выглядит следующим образом:\n1. Мерчанту принадлежат терминалы \"А\" и \"Б\", покупатель ранее проводил оплату только по терминалу \"А\".\n2. Покупатель пропбует провести рекуррентный платеж по терминалу \"Б\".\n3. Система проверяет наличие привязки по терминалу \"Б\".\n4. Так как привязка по этому терминалу не проводилась, система с помощью идентификатора магазина проверяет наличие привязки на других терминалах мерчанта. \n5. Система успешно находит привязку по терминалу \"А\", в связи с чем разрешает проведение рекуррентного платежа.\n\n# Подключение СБП\n## Откройте расчетный счёт\nДля подключения СБП клиент должен быть резидентом. Если клиент нерезидент, СБП работать не будет\n\nЗаполните [заявку](https://www.tbank.ru/business/) и откройте расчетный счет в Т‑Банке\n\n## Подключите Интернет эквайринг\nПодайте [заявку](https://business.tbank.ru/oplata/main) на подключение интернет эквайринг и заполните данные об организации и магазине\n## Выберите доступные типы интеграций\nСБП доступен для следующих типов интеграций:\n* Платежный [виджет](https://www.tbank.ru/kassa/dev/payments/#tag/Oplata-cherez-SBP/Vidzhet-SBP),\n* Платежный [API](https://www.tbank.ru/kassa/dev/payments/#tag/Oplata-cherez-SBP/Obshaya-informaciya-dlya-oplat-po-QR),\n* Мобильный [SDK](https://www.tbank.ru/kassa/dev/payments/#section/Vvedenie/Sposoby-integracii),\n* Через Агента ТСП,\n* Стикер с QR-кодом для размещения на кассе.\n\nДалее, настройте интеграцию на сайте, в мобильном приложении или в любом другом интерфейсе\n\n## Включение СБП\n\n### Требования к подключению СБП\nРасчётный счёт в Т‑Банке установлен в магазине счётом для выплат\n\n### Подключение СБП в Личном Кабинете\nВойдите в свой личный кабинет и откройте страницу магазина, для которого вы хотите подключить оплату\nчерез СБП. Перейдите на вкладку “Способы оплаты“\n\n[![sposobioplati;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/fa5996fc-d52a-4f4b-b1cb-71bf4ebcd910.jpg)](https://cdn.t-static.ru/static/documents/fa5996fc-d52a-4f4b-b1cb-71bf4ebcd910.jpg)\n\nНажмите \"Настроить“ на плашке Система быстрых платежей.\nДалее выбираете тот способ интеграции, который планируете использовать\n\n#### Платежная форма Т‑Банка\nЕсли планируете использовать её, то выбираете данную вкладку и нажимаете \"Включить\"\n\n[![sbp_pf_tinkoff_off;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/sbp_pf_tinkoff_off.jpg)](https://cdn.t-static.ru/static/documents/sbp_pf_tinkoff_off.jpg)\n\nПосле подключения вкладка будет выглядить следующим образом \n\n[![sbp_pf_tinkoff_on;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/sbp_pf_tinkoff_on.jpg)](https://cdn.t-static.ru/static/documents/sbp_pf_tinkoff_on.jpg)\n\n#### Собственная платежная форма\nЕсли у вас уже есть собственная платежная форма или вы хотите подключить виджет СБП, то необходимо нажать \"Включить\" в данной вкладке. После включения останется настроить интеграцию по API  \n\n[![sbp_pf_svoya_off;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/sbp_pf_svoya_off.jpg)](https://cdn.t-static.ru/static/documents/sbp_pf_svoya_off.jpg)\n\nПосле подключения вкладка будет выглядить следующим образом \n\n[![sbp_pf_svoya_on;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/sbp_pf_svoya_on.jpg)](https://cdn.t-static.ru/static/documents/sbp_pf_svoya_on.jpg)\n\n#### Приложение \nЕсли вы планируете использовать СБП в своём приложении, то включаете соответствующую настройку, после чего следуете инструкции размещенной в данном разделе \n\n[![app_sbp_off:block;margin:auto|](https://cdn.t-static.ru/static/documents/app_sbp_off.jpg)](https://cdn.t-static.ru/static/documents/app_sbp_off.jpg)\n\nПосле включения вкладка будет выглядить следующим образом\n\n[![app_sbp_on:block;margin:auto|](https://cdn.t-static.ru/static/documents/app_sbp_on.jpg)](https://cdn.t-static.ru/static/documents/app_sbp_on.jpg)\n\n#### Статический QR\nВне зависимости от того, какой способ интеграции вы используете, вы всегда можете скачать статический QR-код в данном разделе\n\n[![novii_static_qr:block;margin:auto|](https://cdn.t-static.ru/static/documents/novii_static_qr.png)](https://cdn.t-static.ru/static/documents/novii_static_qr.png)\n\n\n### Настройка интеграций при включении способа оплаты СБП\n#### Платежная форма Т‑Банка\nПосле подключения СБП в Личном кабинете, QR код автоматически отобразится на платежной форме, ничего\nдополнительно интегрировать не нужно.\n[Описание](https://www.tbank.ru/kassa/develop/widget/install/), как интегрировать Платежную форму на сайт.\nПлатёжные формы Т‑Банка:\nМобильная\n\n[![pfsbpmobile;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/pfsbpmobile.png)](https://cdn.t-static.ru/static/documents/pfsbpmobile.png)\n\nДесктопная\n[![pfsbpdesktop;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/pfsbpdesktop.png)](https://cdn.t-static.ru/static/documents/pfsbpdesktop.png)\n\nВнимание! Способ — Оплата Картой, является обязательным, отключить его нельзя, все остальные\nспособы — опциональные и их можно выключить в Личном кабинете\n\n#### API\nЕсли ваша интеграция по API, то вы самостоятельно отображаете полученный QR-код или кнопку на вашем\nсайте или любом другом интерфейсе\n\n#### SDK\nЕсли ваша интеграция предусматривает исопользование мобильного приложения, то в SDK необходимо\nпередать специальные параметры в [IOS](https://opensource.tbank.ru/mobile-tech/asdk-ios) и [Android](https://opensource.tbank.ru/mobile-tech/asdk-android) для отображения QR кода\n\n#### Агентская интеграция\nЕсли ваша интеграция настроена с Агентом ТСП, то необходимо\n1. Создать магазин типа – **Выставление счета**.\n2. Включить СБП в способах оплаты.\n3. Сообщить Агенту ТСП об успешном включении.\n\nИнтерфейс \"SDK Т‑Банка\":   \n\n[![sbpsdk1;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/sbpsdk1.png)](https://cdn.t-static.ru/static/documents/sbpsdk1.png)\n\n[![sbpsdk2;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/sbpsdk2.png)](https://cdn.t-static.ru/static/documents/sbpsdk2.png)\n\n### Прием платежей с помощью стикеров с QR-кодом\nСтикер со статичным QR кодом – платежный QR код который размещается в кассовой зоне магазина.\nПосле создании магазина в Личном кабинете, его можно скачать в режиме онлайн\n\n#### Получение стикера\nДля получения стикера с QR кодом небходимо:\n1. Создать магазин с выставлением счета, если у вас уже есть магазин, то далее п.2.\n2. Зайдите в настройки СБП в разделе \"Способы оплаты\".\n3. Нажать на кнопку \"скачать\" в разделе Статический QR. \n4. Полученный QR код необходимо распечатать и разместить в кассовой зоне вашего магазина.\nСтикер \"QR Т‑Банка”:\n\n\n[![sbpqr;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/novii_static_qr_skrin.png)](https://cdn.t-static.ru/static/documents/novii_static_qr_skrin.png)\n\n\nПосле сканирования покупателем Стикера с QR кодом ему необходимо будет ввести сумму и\nподтвердить оплату\n\n**Внимание!** Фискализация по операциям с помощью Стикера с QR-кодом не происходит через онлайн\nкассы, даже если онлайн кассы подключенны в личном кабинете\n\n#### Нотификации об оплате\nПосле оплаты вам придет нотификация в зависимости от настроек, на email или по http на ваш сервер\n\n**Магазин — Выставление счетов**   \nНастройка нотификаций происходит через acq_help@tbank.ru\n\n**Магазин — Интернет магазин**   \nЕсли у вас уже есть интернет-магазин, то нотификации вы можете самостоятельно настроить в разделе\nТерминал\n\n\n[![nastroikiterminala;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/nastroikiterminala.png)](https://cdn.t-static.ru/static/documents/nastroikiterminala.png)\n\n### Настроить выбор банка при интеграции по API\nЕсли вы интегрировались по API, то можно настроить выбор банка при оплате по СБП.\nДля этого нужно создать прямую ссылку, которая существует для того, чтобы перенаправить\nклиента при клике на ссылку в конкретное приложение банка.\n1. Чтобы сформировать прямую ссылку на переход в приложение банка, необходимо заменить\nhttps из функциональной ссылки на значение параметра schema из списка банков.\n2. Список банков лежит по ссылке - https://qr.nspk.ru/proxyapp/c2bmembers.json.\n\nНапример:\nФункциональная ссылка https://qr.nspk.ru/AS10004UVOQ9J4I489A8SG8NIA6P3F8B\nЗаменить https на соответствующую schema Т‑Банка —\nbank100000000004://qr.nspk.ru/AS10004UVOQ9J4I489A8SG8NIA6P3F8B\nДля каждого из банков сделать прямую ссылку по логике указанной в п.1. На Вашей платёжной форме\nнеобходимо отобразить список банков из п. 2\n\n# Виджет СБП\nСБП можно интегрировать с помощью виджета, ниже будет описан порядок такой интеграции\n\n## Подключение платежного виджета\n\n### Установка платежного виджета на сайт\nВставьте следующий код на ваш сайт в место, где должна располагаться кнопка \"Оплатить СБП\"\n```\n<html lang=\"ru\">\n<head> \n<script defer src=\"https://securepay.tinkoff.ru/html/payForm/js/tinkoff_v2.js\"></script> \n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \n</head> \n<body> \n<style>.tinkoffPayRow{display:block;margin:1%;width:160px;}</style> \n<!--    tinkoffWidgetContainer – уникальный id, задается произвольно-->\n<div id=\"tinkoffWidgetContainer1\"></div> \n<form name=\"TinkoffPayForm\"> \n<input class=\"tinkoffPayRow\" type=\"hidden\" name=\"terminalkey\" value=\"\"/> \n<input class=\"tinkoffPayRow\" type=\"hidden\" name=\"language\" value=\"ru\" /> \n<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"Сумма заказа\" name=\"amount\" value=\"111\" required min=\"10.00\"/> <input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"Номер заказа\" name=\"order\"/> \n<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"Описание заказа\" name=\"description\"/> \n<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"ФИО плательщика\" name=\"name\"/> \n<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"E-mail\" name=\"email\"/> \n<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"Контактный телефон\" name=\"phone\"/> \n</form> \n</body>\n```\nСумма заказа \"amount\" указывается в рублях, копейки через точку\n\n## Формирование чека\n\nДобавьте в код поле ввода receipt:\n```\n<input class=\"tinkoffPayRow\" type=\"hidden\" name=\"receipt\" value=\"\">\n```\nВ значении атрибута value поля receipt нужно указывать параметры чека. Например, добавьте следующий код:\n```\n var form = document.forms.TinkoffPayForm;\n\n      // Данные для чека\n      Object.defineProperty(form.receipt, 'value', {\n        get: function () {\n          return JSON.stringify({\n            Email: form.email.value,\n            Phone: form.phone.value,\n            EmailCompany: 'mail@mail.com',\n            Taxation: 'patent',\n            Items: [\n              {\n                Name: form.description.value || 'Оплата',\n                Price: form.amount.value + '00',\n                Quantity: 1.0,\n                Amount: form.amount.value + '00',\n                PaymentMethod: 'full_prepayment',\n                PaymentObject: 'service',\n                Tax: 'none',\n              },\n            ],\n          });\n        },\n      });\n```\n## Подключение СБП\n## Подключение СБП в Личном Кабинете\n1. Перейдите в свой личный кабинет и откройте страницу интернетмагазина, для которого вы хотите подключить оплату через СБП на сайте. Перейдите на вкладку “Способы оплаты”. Для подключения СБП надо провести первый платеж любым доступным способом.\n2. Нажмите на плашку СБП для подключения оплаты через СБП на сайте.\n3. В случае успешного подключения СБП для интернет-магазина плашка должна стать активной. \n## Настройка оплаты товаров\nДля подключения оплаты СБП для одного и более товаров потребуется передавать в метод initPayments объект настроек, в котором определено поле paymentItems \n\nЗначением поля paymentItems является массив объектов, которые определяют размещение платёжных кнопок и информацию о платеже\n\nПример кода приведен ниже:\n \n```\n  var terminalkey = document.forms.TinkoffPayForm.terminalkey;\n\n  var widgetParameters = {\n    terminalKey: terminalkey.value,\n    paymentItems: [\n      {\n        container: document.getElementById(\"tinkoffWidgetContainer1\"),\n        paymentInfo: function () {\n          return {\n            paymentData: document.forms.TinkoffPayForm,\n          };\n        },\n      },\n    ],\n    paymentSystems: { TinkoffFps: {} },\n  };\n\n  window.addEventListener(\"load\", function () {\n    initPayments(widgetParameters);\n  });\n\n```\n## Структура объекта массива paymentItems\n|Наименование|Обязательный|Тип данных|Описание|\n|-|---|--|-|\n|container|Да|HTMLFormElement|Элемент, в который вставляют кнопки|\n|paymentInfo|Да|Function/Object|Информация о платеже| \n## Тесты по QR\n* <b> Сценарий “Платеж-успех” </b>\n1) Инициировать начало платежной сессии – вызывать метод **Init**.\n2) Запросить формирование Динамического QR-кода **GetQr**.\n3) Отобразить Динамический QR-код на странице клиенту. \n4) Вызвать метод **SbpPayTest**, передавая в нем внутренний идентификатор платежной сессии Т‑Кассы (PaymentId).\n5) Запросить текущий статус платежа вызывая метод **GetState**.\n6) Получить ответ со статусом CONFIRMED.\n* <b> Сценарий “Платеж — отказ по таймауту” </b>\n1) Инициировать начало платежной сессии – вызывать метод **Init**.\n2) Запросить формирование Динамического QR-кода **GetQr**.\n3) Отобразить Динамический QR-код на странице клиенту.\n4) Вызвать метод **SbpPayTest**, передавая в нем внутренний идентификатор платежной сессии Т‑Кассы (PaymentId) и параметр IsDeadlineExpired = true.\n5) Запросить текущий статус платежа вызывая метод **GetState**.\n6) Получить ответ со статусом DEADLINE_EXPIRED.\n* <b> Сценарий “Платеж – отказ, отклонен Т‑Кассой” </b>\n1) Инициировать начало платежной сессии – вызывать метод **Init**.\n2) Запросить формирование Динамического QR-кода **GetQr**.\n3) Отобразить Динамический QR-код на странице клиенту.\n4) Вызвать метод **SbpPayTest**, передавая в нем внутренний идентификатор платежной сессии\nТ‑Кассы (PaymentId) и параметр IsRejected = true.\n5) Запросить текущий статус платежа вызывая метод **GetState**.\n6) Получить ответ со статусом REJECTED.\n* <b> Сценарий “Возврат – успех </b>\n1) Инициировать возврат (не отмену) методом Cancel тестового платежа по QR-коду СБП,\nвыполненного успешно в тесте “Платеж-успех”\n2) Запросить текущий статус платежа вызывая метод **GetState**.\n3) Получить ответ со статусом REFUNDED.\n\n## Настройка платежного виджета\nВставьте идентификатор магазина в код платежного виджета в значение параметра terminalkey. Идентификатор магазина выдаётся банком,\nего можно получить в личном кабинете (раздел «Магазины», вкладка \"Терминалы\"):\n\nЕсли необходимо изменить состав полей платежного виджета, укажите у полей, которые хотите скрыть, type=\"hidden\":\n```\n<input class=\"tinkoffPayRow\" type=\"hidden\" placeholder=\"ФИО клиента\" name=\"name\"> \n```\nЕсли необходимо сделать обязательным для заполнения какое-либо поле, выставьте у этого поля параметр required:\n```\n<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"E-mail\" name=\"email\" required>\n```\nСтилизация платежного виджета производится магазином самостоятельно. Ограничений на стилизацию со стороны Т‑Банка нет:\n```\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \n<input class=\"tinkoffPayRow\" type=\"hidden\" placeholder=\"ФИО плательщика\" name=\"name\"> \n<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"E-mail\" name=\"email\" required> \n<input class=\"tinkoffPayRow\" type=\"hidden\" name=\"terminalkey\" value=\"Идентификатор вашего магазина\"> \n\n```\nПроверить статус платежа можно в личном кабинете интернет-эквайринга, просмотрев операции по СБП, по API с помощью метода [GetState](https://www.tbank.ru/kassa/dev/payments/#tag/Standartnyj-platyozh/paths/~1GetState/post) или с помощью нотификации по http или на e-mail в разделе [Нотификации мерчанта об операциях](https://www.tinkoff.ru/kassa/dev/payments/index.html#tag/Notifikacii-Merchanta-ob-operaciyah)"
		},
		{
			"name": "Оплата через T‑Pay",
			"description": "## Общая информация\nОплата доступна на мобильных устройствах и десктопах, проводится последовательным вызовом\nметодов:\n\n- `/TinkoffPay/terminals/{terminalKey}/status`,\n- `/Init`,\n- `/TinkoffPay/transactions/{paymentId}/versions/{version}/link` либо `/TinkoffPay/{paymentId}/QR`.\n\n# Другие способы интеграции \n\n## T‑Pay SDK\nT‑Pay SDK — интеграция способа оплаты в приложение. Документация по SDK активно поддерживается на GitHub.   \nАдреса:   \n* [SDK Android](https://opensource.tbank.ru/mobile-tech/asdk-android),\n* [SDK IOS](https://opensource.tbank.ru/mobile-tech/asdk-ios).\n\n## T‑Pay web\nT‑Pay web — способ интеграции через установку виджета на сайт\n\n\n### Подключение платежного виджета\n\n#### Установка платежного виджета на сайт\nВставьте следующий код на ваш сайт в место, где должна располагаться кнопка «Оплатить»\n```\n<style>.tinkoffPayRow{display:block;margin:1%;width:160px;}</style>\n\n<link rel=\"stylesheet\" href=\"./html/payForm/static/css/t-widget.css\" type=\"text/css >\n\n<script src=\"https://securepay.tinkoff.ru/html/payForm/js/tinkoff.js ></script>\n\n<form name=\"TinkoffPayForm\" onsubmit=\"pay(this); return false; >\n\n\t<input class=\"tinkoffPayRow\" type=\"hidden\" name=\"terminalkey\" value=\"EatFit3DS >\n\n\t<input class=\"tinkoffPayRow\" type=\"hidden\" name=\"frame\" value=\"true\">\n\n\t<input class=\"tinkoffPayRow\" type=\"hidden\" name=\"language\" value=\"ru\">\n\n\t<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"Сумма заказа\" name=\"amount\n \trequired>\n\n\t<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"Номер заказа\" name=\"order\">\n\n\t<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"Описание заказа\n \tname=\"description\">\n\n\t<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"ФИО клиента\" name=\"name\">\n\n\t<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"E-mail\" name=\"email\">\n\n\t<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"Контактный телефон\n \tname=\"phone\">\n\n\t<input class=\"tinkoffPayRow\" type=\"submit\" value=\"Оплатить\">\n\n</form>\n```\n#### Настройка платежного виджета\nВставьте идентификатор мерчанта в код платежного виджета в значение параметра terminalkey. Идентификатор мерчанта выдается Т‑Кассой,\nего можно получить в личном кабинете (раздел «Магазины»).\nЕсли необходимо изменить состав полей платежного виджета,\nукажите у полей, которые хотите скрыть, type=\"hidden\":\n```\n<input class=\"tinkoffPayRow\" type=\"hidden\" placeholder=\"ФИО\nклиента\" name=\"name\"> \n```\nЕсли необходимо сделать обязательным для заполнения какое-либо\nполе, выставьте у этого поля параметр required:\n```\n<input class=\"tinkoffPayRow\" type=\"text\" placeholder=\"E-mail\"\nname=\"email\" required> \n```\nЕсли требуется открывать платежную форму в текущем окне,\nукажите у данного атрибута значение true:\n```\n<input class=\"tinkoffPayRow\" type=\"hidden\" name=\"frame\"\nvalue=\"true\"> \n```\nСтилизация платежного виджета производится мерчантом\nсамостоятельно. Ограничений на стилизацию со стороны Т‑Кассы нет:\n```\n<input class=\"tinkoffPayRow\" type=\"hidden\" name=\"terminalkey\"\nvalue=\"Идентификатор вашего магазина\"> \n```\n### Подключение T‑Pay\n#### Подключение T‑Pay в личном кабинете\n1. Перейдите в свой личный кабинет и откройте страницу интернет-магазина, для которого вы хотите подключить оплату через T‑Pay на сайте. Перейдите на вкладку «Способы оплаты».\n2. Нажмите кнопку «Настроить» на плашке T‑Pay, перейдите в подраздел «Своя платежная\nформа» и нажмите «Включить».\n3. В случае успешного подключения T‑Pay для интернет-магазина должна отобразиться\nстраница активного статуса подключения T‑Pay на сайте.\n\n\n#### Подключение T‑Pay на страницах интернет-магазина\nВставьте приведенный ниже код на страницу вашего сайта сразу после кода платежного виджета:\n```\n<script type=\"text/javascript\">\n\n\tvar terminalkey = document.forms.TinkoffPayForm.terminalkey\n\n\tvar widgetParameters = {\n\n \tcontainer: 'tinkoffWidgetContainer',\n\n \t terminalKey: terminalkey.value,\n\n \tpaymentSystems: {\n\n \tTinkoffPay: {\n\n \tpaymentInfo: function () {\n\n \treturn {\n\n \tinfoEmail: \"E-mail для отправки информации о платеже\",\n\n \tpaymentData: document.forms.TinkoffPayForm\n\n \t}\n\n \t}\n\n \t},\n\n \t},\n\n\t};\n\n\twindow.addEventListener('load', function () {\n\n \tinitPayments(widgetParameters);\n\n\t});\n</script>\n\n```\n\n\nМетод initPayments запускает инициализацию платежных кнопок T‑Pay.\nВходным параметром метода является объект с данными о настройках проведения платежей\n##### Структура объекта T‑Pay\n|Наименование|Обязательный|Тип данных|Описание|\n|-|---|--|-|\n|paymentInfo|Да|Function/Object|Платежная информация|\n\n\n### Настройка оплаты множества товаров\nДля подключения оплаты T‑Pay на одной странице для нескольких товаров потребуется передавать в метод initPayments объект\nнастроек, в котором определено поле paymentItems.\nЗначением поля paymentItems является массив объектов, которые определяют размещение платежных кнопок и информацию о платеже.\nПример кода страницы приведен ниже:\n```\n<div id=\"tinkoffWidgetContainer1\"></div>\n\n<div id=\"tinkoffWidgetContainer2\"></div>\n\n<script type=\"text/javascript\">\n\n\tvar terminalkey = document.forms.TinkoffPayForm.terminalkey\n\n\tvar widgetParameters = {\n\n \tterminalKey: terminalkey.value,\n\n \tpaymentItems: [{\n\n \tcontainer: document.getElementById('tinkoffWidgetContainer1'),\n\n \tpaymentInfo: function () {\n\n \treturn {\n\n \tinfoEmail: \"E-mail для отправки информации о платеже\",\n\n \tpaymentData: document.forms.TinkoffPayForm\n\n \t}\n\n \t}},\n\n \t{\n\n \tcontainer: document.getElementById('tinkoffWidgetContainer2'),\n\n \tpaymentInfo: function () {\n\n \treturn {\n\n \tinfoEmail: \"E-mail для отправки информации о платеже\",\n\n paymentData: document.forms.TinkoffPayForm\n\n \t}\n\n \t}}],\n\n \tpaymentSystems: {\n\n \tTinkoffPay: {\n\n \t},\n\n \t},\n\n\t};\n\n\twindow.addEventListener('load', function () {\n\n \tinitPayments(widgetParameters);\n\n\t});\n\n</script>\n```\n\n#### Структура объекта массива paymentItems\n|Наименование|Обязательный|Тип данных|Описание|\n|-|---|--|-|\n|container|Да|HTMLFormElement|Элемент, в который вставляют кнопки|\n|paymentInfo|Да|Function/Object|Платежная информация|\n\n## T‑Pay + T‑ID.\nДля интеграции T‑Pay + T‑ID, предварительно требуется настроить интеграцию с ID. Ознакомиться с его API можно по ссылке https://developer.tbank.ru/products/scenarios/TID/w2w\n\n### Подключение платежного виджета\n\n#### Установка платежного виджета на сайт\nВставьте следующий код на ваш сайт в место, где должна располагаться кнопка «Оплатить»\n```\n<link rel=\"stylesheet\" href=\"https://securepay.tinkoff.ru/tpaytid/styles.css\" media=\"print\"\nonload=\"this.media='all'\">\n\n<tinkoff-pay-id-button\n\nterminalkey=”%yourterminalkey%”\n\nredirectsuccess=false\n\nrederectfail=false\n\n></tinkoff-pay-id-button>\n\n<script src=\"https://securepay.tinkoff.ru/tpaytid/tinkoff-pay-button.js\" type=\"module\"></\nscript>\n```\n#### Настройка платежного виджета\nВставьте идентификатор магазина в код платежного виджета в значение параметра terminalkey. Идентификатор магазина выдаётся Т‑Кассой, его можно получить в личном кабинете (раздел «Магазины»).   \nЕсли требуется переход по ссылке в случае удачной оплаты,\nвыставите “redirectsuccess=true” или задайте атрибут у себя в коде:\n```\nvar tpayIdButton = document.querySelector('tinkoff-pay-id-button');\ntpayIdButton.setAttribute('redirectsuccess', true);\n```\nЕсли требуется переход по ссылке в случае неудачной оплаты,\nвыставите “redirectfail=true” или задайте атрибут у себя в коде\n```\nvar tpayIdButton = document.querySelector('tinkoff-pay-id-button');\ntpayIdButton.setAttribute('redirectfail', true);\n```\nДля получения данных об оплате подпишитесь на событие\n“onSessionChange”\n```\nvar tpayIdButton = document.querySelector('tinkoff-pay-id-button');\ntinkoffPayIdButton.addEventListener('onSessionChange', e => {\n\n// Ваш код здесь\n\n})\n```\n#### Структура объекта события о платеже onSessionChange\n|Наименование|Обязательный|Тип данных|Описание|\n|-|---|--|-|\n|eventType|Да|String|Тип события|\n|sessionId|Да|String|Идентификатор сессии|\n|paymentId|Нет|Number|Идентификатор платежи|\n|accountId|Нет|String|Идентификатор карты|\n|data|Нет|Object|Набор параметров ключ-значение|\n|eventSessionId|Нет|String|Идентификатор события открытия карт|\n\n#### Схема интеграции сценария T‑Pay + T‑ID\n[![scheme](https://cdn.t-static.ru/static/documents/Tpay_ID_schema.png)](https://cdn.t-static.ru/static/documents/Tpay_ID_schema.png)\nИмплементация сценария T‑Pay + T‑ID требует установку на сайте SDK виджета. Необходимо подписаться на события генерируемые виджетом и дублировать их на backend в зашифрованном виде методом /v2/TinkoffPayEvent, обогащая его данными о клиенте (в данном случае это авторизационный токен AccessToken, выпущенный T‑ID)\n\nВсего предполагается три типа событий, для каждого из которых передается набор параметров для последующей валидации:\n* Инициализация кнопки — процесс отображения кнопки,\n* Отображение счета — процесс отображения счетов, доступных клиенту для оплаты. При получении события с таким типом требуется сгенерировать платежную сессию эквайринга (в случае если она не была сгенерирована ранее — то есть в параметрах события отсутствует PaymentId) стандартно методом /v2/Init, учитывая особенности для T‑Pay (пп 2.3.). Возможны несколько сценариев развития событий: \n1. Клиент определен и имеет счета для оплаты — отобразится список счетов,\n2. Клиент не определен или требуется дополнительная аутентификация — произойдет редирект в мобильное приложение Т‑Банка.\n3. Клиент определен и не имеет подходящих счетов — отобразится ошибка.\n\n*\tОплата — проведение оплаты по выбранному счету\n\nРезультат авторизации следует принимать асинхронно через нотификации\n\n"
		},
		{
			"name": "Оплата через YandexPay",
			"description": "## Общая информация\n### Описание продукта\nС YandexPay можно оплачивать покупки на сайтах банковской картой, не вводя ее данные. Для этого подойдет карта, привязанная к аккаунту на Яндексе. Кнопка YandexPay отображается на платежной странице рядом с другими способами оплаты.\n\nПри использовании YandexPay необходимо соблюдать:\n1. Правила оформления бренда.\n2. Список запрещенных товаров и услуг.\n\n### Чек-лист для подключения YandexPay\n\n1. Подключить Интернет-эквайринг.\n2. Выбрать тип интеграции.\n3. Подключить в личном кабинете.\n\n#### Подключите Интернет-эквайринг\nПодайте [заявку](https://www.tbank.ru/kassa/solution/classic/) на подключение интернет-эквайринг и заполните данные об организации и магазине\n#### Выберите интеграцию\nYandexPay доступен для следующих типов интеграций:\n* Кнопка YandexPay на Платежном [виджете](https://www.tbank.ru/kassa/develop/widget/install/) Т‑Банка\n(Интеграция с YandexPay реализована на стороне Т‑Кассы);\n* Кнопка YandexPay на сайте Мерчанта\n(Необходима прямая интеграция Мерчанта с API Т‑Банка и YandexPay).\n\n#### YandeхPay на Платежном виджете Т‑Банка\nПри таком варианте интеграции клиент находится на сайте Мерчанта только до момента ввода данных своей платежной карты или до оплаты с YandexPay.\nДля оплаты клиент перенаправляется на платежную страницу Т‑Кассы, на которой будет отображен способ оплаты YandexPay.\nПосле оплаты клиент будет проинформирован о результате и возвращен обратно на сайт Мерчанта, а Мерчанту будут отправлены уведомления с результатом платежа.\nМерчанту не требуется интегрироваться с YandexPay, все необходимое уже реализовано на стороне Т‑Кассы.\n\n#### YandexPay на сайте Мерчанта (API)\nДля добавления кнопки YandexPay на сайт необходимо иметь сертификат PCI DSS и самостоятельно выполнить [интеграцию](https://yandex.ru/dev/yandex-pay-partners/doc/concepts/methods.html#methods__gateway) с YandexPay. Для выполнения платежа необходимо получить токен в Yandex Pay и передать его в платежный шлюз Т‑Кассы\n\nДля выполнения оплаты через [API](#tag/Oplata-cherez-YandexPay) необходимо:\n1. Передать в Т‑Кассу токен, полученный на сайте с помощью Yandex Pay Web SDK в\nпараметре «Token».\n2. YandexPay формирует токен в Base64. Токен необходимо декодировать и передавать в [API](#tag/Oplata-cherez-YandexPay).\n\n**Внимание!**\n\nДля большинства карт в YandexPay будет проведена 3-D Secure аутентификация клиента\n\n### Включение YandexPay\nДля включения кнопки YandexPay в Платежном виджете и API, необходимо переключить тоггл YandexPay в Личном кабинете Т‑Кассы\n* Если интеграция с помощью Платежного виджета, то кнопка Yandex Pay автоматически\nпоявится на Платежном виджете Т‑Кассы;\n* Если интеграция по API, то отображение кнопки YandexPay находится на стороне Мерчанта.\n\n### Настройка нотификаций об оплате\nПосле оплаты вам придет нотификация в зависимости от настроек, на email или по http на ваш сервер\n#### Магазин — Выставление счетов\nНастройка нотификаций происходит через acq_help@tbank.ru\n#### Магазин — Интернет-магазин\nЕсли у вас уже есть интернет-магазин, то нотификации вы можете самостоятельно настроить в\nразделе \"Терминал\""
		},
		{
			"name": "Оплата через MirPay",
			"description": "## Общая информация для оплат по MirPay\nВ этом разделе перечислены методы для взаимодействия с СБП\n\nПрием платежей осуществляется вызовом методов с передачей параметров методом POST в формате\nJSON. Все методы и передаваемые параметры являются чувствительными к регистру.\nДля POST запроса в заголовке должен присутствовать Content Type: application/json.\n\nТестовый URL*: https://rest-api-test.tinkoff.ru/v2/   \nБоевой URL: https://securepay.tinkoff.ru/v2/\n\n*Для возможности отправки запросов на тестовую среду напишите на почту acq_help@tbank.ru c\nпросьбой добавить ваши IP в WL\n\n## Схема проведения платежа\n[![scheme](https://cdn.t-static.ru/static/documents/mirpaychema.png)](https://cdn.t-static.ru/static/documents/mirpaychema.png)\n1. Клиент со своего мобильного устройства с предустановленным приложением MirPay на\nweb-сайте магазина мерчанта открывает страницу оплаты товара.\n2. Мерчант иницирует платежную сессию, отправляя запрос /init с данными по платежу в MAPI.\n3. MAPI создает платежную сессию в статусе NEW.\n4. MAPI возвращает Мерчанту данные о платежной сессии.\n5. Мерчант отображает клиенту кнопку MirPay.\n6. Клиент выбирает оплату по MirPay.\n7. Если мерчант не интегрирован с НСПК, то он запрашивает deeplink для перехода клиента в\nприложение MirPay у мапи, иначе он может пройти этот этап сам и перейти к этапу авторизации\nплатежа и передаче платежных данных с помощью метода FinishAuthorize.\n8. Во время проведения оплаты, мерчант может узнать статус платежа, вызвав метод GetState.\n9. В конце платежа мерчант в зависимости от того был ли платеж успешный/не успешный\nпереводит мерчанта на страницу success/fail url.\n\n"
		},
		{
			"name": "Оплата через SberPay",
			"description": "## Подключение SberPay\n### Подключение SberPay в личном кабинете\n1. Перейдите в свой личный кабинет и откройте страницу интернет-магазина, для которого вы хотите подключить оплату через SberPay на сайте. Перейдите на вкладку «Способы оплаты».\n2. Нажмите кнопку «Настроить» на плашке SberPay, перейдите в подраздел «Своя платежная форма» и нажмите «Включить». Если плашка отсутствует – магазин находится на регистрации/перерегистрации в эквайринге Сбербанка.\n3. В случае успешного подключения SberPay для интернет-магазина должна отобразиться страница активного статуса подключения SberPay на сайте.\n\n## Оплата через SberPay\n### Требования к фронтовому решению\nТребования к функционалу и дизайну фронтового решения кнопки определяются Сбербанком и расположены по ссылкам: https://ecomtest.sberbank.ru/promo/deeplink_select_mWeb2app_3.pdf и https://securepayments.sberbank.ru/wiki/doku.php/integration:sbol:guide_book\n\n### Общая информация\nОплата доступна на мобильных устройствах и десктопах, проводится последовательным вызовом методов:\n* /Init,\n* /SberPay/transactions/{PaymentId}/link либо /SberPay/{PaymentId}/QR,\n* /Confirm,\n* /Cancel.\n\n### Особенности в /Init\nПри реализации подключения оплаты через SberPay Web, необходимо обязательно передавать следующие параметры в объекте Data. Пример:\n```\n\"DATA\": {\n \"SberPayWeb\": \"true\",\n \"Device\": \"Desktop\"\n}\n```\n### Особенности /Confirm\nВвиду особенностей работы эквайринга Сбербанка подтверждение по платежной сессии можно провести только единожды (частичное или полное).   \nТак же ввиду асинхронного характера приема запросов на подтверждение при деградации производительности сервисов партнера может быть получен статус платежа **CONFIRMING**, схема работы в таком случае описана ниже\n\n### Особенности /Cancel\nВвиду особенностей работы эквайринга Сбербанка отмену платежной сессии можно провести только единожды и только на полную сумму платежа, возврат может быть как частичным, так и полным, проведен несколько раз до исчерпания суммы платежа.   \nТак же ввиду асинхронного характера приема запросов на подтверждение при деградации производительности сервисов партнера может быть получен статус платежа **REVERSING**, **REFUNDING**, схема работы в таком случае описана ниже\n\n## Схемы прохождения операций\n### Инициализация и авторизация платежа \n[![sp_scheme_init;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/sp_scheme_init.png)](https://cdn.t-static.ru/static/documents/sp_scheme_init.png)\n\n### Подтверждение\n[![sp_scheme_confirm;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/sp_scheme_confirm.png)](https://cdn.t-static.ru/static/documents/sp_scheme_confirm.png)\n\n### Отмена\n[![sp_scheme_cancel;display:block;margin:auto|](https://cdn.t-static.ru/static/documents/sp_scheme_cancel.png)](https://cdn.t-static.ru/static/documents/sp_scheme_cancel.png)\n\n"
		},
		{
			"name": "Получение справки по операции",
			"description": ""
		},
		{
			"name": "Нотификации Мерчанта об операциях",
			"description": "Нотификации — это уведомления магазину о статусе выполнения платежа. На основании этих уведомлений магазин должен предоставлять услугу/товар клиенту\n\nДля выполнения самостоятельной настройки нотификаций необходимо зайти в <i>ЛК ИЭ</i>→<i>Магазины</i>→<i>Настройки</i> и выбрать необходимый вариант получения нотификаций (почта, HTTP(s) либо оба варианта)\n\n# Нотификации по E-mail\n\nТ‑Касса может присылать письма с уведомлениями об успешных платежах (статус CONFIRMED). Настроить нотификации на электронную почту можно в личном кабинете. Уведомления на почту можно комбинировать с уведомлениями, отправляемыми по http(s).\n\n# Нотификации по HTTP(s)\n\nПри совершении операций `Authorize`, `FinishAuthorize`, `Confirm`, `Cancel` на адрес `Notification URL`\nвысылается уведомление POST-запросом с информацией об операции. При использовании\nодностадийного проведения платежа при обращении к методу `FinishAuthorize` нотификация\nотправляется на сайт Мерчанта на адрес `Notification URL` синхронно и ожидает ответа в течение 10\nсекунд\n\nПосле получения ответа или неполучения его за заданное время сервис переадресует\nклиента на `Success URL` или `Fail URL` в зависимости от результата платежа\n\n\nВ случае успешной обработки нотификации Мерчант должен вернуть ответ c HTTP-кодом сообщения `200` с телом сообщения: `OK`\n(без тегов и заглавными английскими буквами).\nЕсли тело сообщения отлично от OK, любая нотификация считается неуспешной, и сервис будет\nповторно отправлять нотификацию раз в час в течение 24 часов. Если нотификация за это время так и\nне доставлена, она складывается в дамп.\n\nВышесказанное так же действительно и при вызове метода `Charge` за исключением того, что данный\nметод не осуществляет переадресации клиента <br>\n\nТ‑Банк Бизнес может уведомлять магазин об успешных/ошибочных привязках счёта. Для этого в настройках терминала необходимо указать URL на который будут отправляться POST-запросы со статусами\n\nЕсли в `NotificationURL` используются порты, допустимо использование порта **443 (HTTPS)**.\nАктуальный список внешних сетей*, используемых Т‑Банком, для отправки нотификаций:\n\n* 91.194.226.0/23\n* 91.218.132.0/24\n* 91.218.133.0/24\n* 91.218.134.0/24\n* 91.218.135.0/24\n* 212.233.80.0/24\n* 212.233.81.0/24\n* 212.233.82.0/24\n* 212.233.83.0/24\n* 91.194.226.181 (тестовая среда)\n\nЧтобы нотификации работали корректно, добавьте эти сети в исключения сетевых фильтров или других видов защиты, которыми пользуетесь\n\nЕсли есть потребность в получении дополнительных параметров в нотификациях, то необходимо передать параметр **DATA** (данный параметр включается через менеджера или техническую поддержку) с возможными ключами:\n| Ключ | Расшифровка |\n| --- | --- |\n| description | Описание |\n| name | ФИО |\n| number | Отображение номера договора в реестрах по AFT и ИЭ по МФО |\n| eorder_number | Номер заказа |\n| paymentId | Номер транзакции |\n| fphone | Телефон |\n| s_firstname | Отображение ФИО в реестрах по AFT и ИЭ по МФО |\n| s_lastname | Отображение ФИО в реестрах по AFT и ИЭ по МФО |\n| s_middlename | Отображение ФИО в реестрах по AFT и ИЭ по МФО |\n| terminalKey | Номер терминала |\n\nВ ответе параметр приходит в формате **Data** (не полностью в верхнем регистре).\n\n\nУкажите в настройках терминала URL, чтобы получать на него POST-запросы со статусами:\n| Статус | Описание |\n| --- | --- |\n| AUTHORIZED | Деньги захолдированы на карте клиента. Ожидается подтверждение операции * |\n| CONFIRMED | Операция подтверждена |\n| PARTIAL_REVERSED | Частичная отмена |\n| REVERSED | Операция отменена |\n| PARTIAL_REFUNDED | Произведён частичный возврат |\n| REFUNDED | Произведён возврат |\n| REJECTED | Списание денежных средств закончилась ошибкой |\n| 3DS_CHECKING ** | Автоматическое закрытие сессии, которая превысила срок пребывания в статусе 3DS_CHECKING (более 36 часов) |\n\n\\* *Операция может быть подтверждена:*\n - *Через Личный Кабинет,*\n - *Запросом `Confirm`,*\n - *Автоматически, если у магазина настроена одностадийная схема оплаты для магазина в Личном Кабинете.*\n\n По неподтвержденным операциям возмещение не производится. Узнать статус платежа можно с помощью вызова метода GetState\n\n\\*\\* *Напишите на почту acq_help@tbank.ru c просьбой включить отправку нотификаций об автозакрытии сессий в статусе 3DS_CHECKING*\n\n\n## Ответ на HTTP(s)-нотификацию\nВ случае успешной обработки нотификации Мерчанту необходимо вернуть ответ `HTTP CODE = 200` с телом сообщения: `OK` (без тегов и заглавными английскими буквами)\n\n**PHP. Пример ответа на http(s)-нотификацию**\n```\n<?php\necho «OK»;\n?>\n```\n\n**Java. Пример ответа на http(s)-нотификацию**\n```\n@POST\n@Path(\"/ok\")\npublic Response NotifyResponse() {\nreturn Response.status(200).entity(\"OK\").build();\n}\n```\n\nЕсли ответ «OK» не получен, нотификация считается неуспешной, и сервис будет повторно отправлять данную нотификацию раз в час в течение 24 часов. Если нотификация за это время не доставлена, она будет сложена в архив\n\nПри получении нотификации и перед её обработкой настоятельно рекомендуем проверить подпись запроса\n\n## Проверка токенов\n\nДля формирования подписи запроса для нотификации небходимо:\n1. Собрать массив всех обязательных передаваемых параметров для конкретного метода в виде пар Ключ-Значение (кроме параметра Token). Например:\n```\n[[\"TerminalKey\": \"1321054611234DEMO\"],[\"OrderId\": \"201709\"],[\"Success\": \"true\"],[\"Status\": \"AUTHORIZED\"],[\"PaymentId\": \"8742591\"],[\"ErrorCode\": \"0\"],[\"Amount\": \"9855\"],[\"CardId\": \"322264\"],[\"Pan\": \"430000******0777\"],[\"ExpDate\": \"1122\"],[\"RebillId\": \"101709\"]]\n```\n2. Добавить в массив пару (`Password`, значение). Password – пароль для терминала, указан в [личном кабинете](https://business.tbank.ru/oplata/main) мерчанта: \n```\n[[\"TerminalKey\": \"1321054611234DEMO\"],[\"OrderId\": \"201709\"],[\"Success\": \"true\"],[\"Status\": \"AUTHORIZED\"],[\"PaymentId\": \"8742591\"],[\"ErrorCode\": \"0\"],[\"Amount\": \"9855\"],[\"CardId\": \"322264\"],[\"Pan\": \"430000******0777\"],[\"ExpDate\": \"1122\"],[\"RebillId\": \"101709\"],[\"Password\": \"Dfsfh56dgKl\"]]\n```\n\n3. Отсортировать массив по Ключам по алфавиту:\n```\n[[\"Amount\": \"9855\"],[\"CardId\": \"322264\"],[\"ErrorCode\": \"0\"],[\"ExpDate\": \"1122\"],[\"OrderId\": \"201709\"],[\"Pan\": \"430000******0777\"],[\"Password\": \"Dfsfh56dgKl\"],[\"PaymentId\": \"8742591\"],[\"RebillId\": \"101709\"],[\"Status\": \"AUTHORIZED\"],[\"Success\": \"true\"],[\"TerminalKey\": \"1321054611234DEMO\"]]\n```\n\n4. Конкатенировать значения всех пар:\n```\n985532226401122201709430000******0777Dfsfh56dgKl8742591101709AUTHORIZEDtrue1321054611234DEMO\n```\n\n5. Вычислить SHA-256 от полученного в п.4. значения:\n```\nb906d28e76c6428e37b25fcf86c0adc52c63d503013fdd632e300593d165766b\n```\n\nПример генерации токена:\n```\nprivate static final String PASSWORD_KEY = \"Password\"; private static final String PASSWORD_VALUE = \"12345678\";\nprivate String generateToken(final Map<String, String> parameters) throws UnsupportedEncodingException,\nNoSuchAlgorithmException { final Map<String, String> sortedParameters = new TreeMap<String, String>(parameters);\nif (sortedParameters.containsKey(TOKEN)) {\nsortedParameters.remove(TOKEN);\n}\nsortedParameters.put(PASSWORD_KEY, PASSWORD_VALUE); final String paramString =\nJoiner.on(\"\").skipNulls().join(sortedParameters.values()); return\ncalculateSha256(paramString);\n}\n```\n\nПример сравнения токенов:\n```\nprivate boolean checkToken(final Map<String,String> params, final String expectedToken) {\nfinal String actualToken = params.get(TOKEN);\nreturn !(expectedToken == null || !expectedToken.equals(actualToken));\n}\n```"
		},
		{
			"name": "Общая информация",
			"description": "Если на терминале включена фискализация чеков и к нему привязана онлайн-касса, то вместе с платежом возможна отправка чека \n\nПередаваемый чек может быть в формате ФФД 1.05 и ФФД 1.2 (зависит от привязанной к терминалу онлайн-кассы). Для передачи чека в формате ФФД 1.2 необходимо наличие привязанной к терминалу кассы с поддержкой ФФД 1.2 и передача в чеке параметра \"FfdVersion\" \"1.2\"\n\n\nЧек прихода передается при вызове методов Init или Confirm. В случае двустадийного платежа, при передачи чека прихода как в Init, так и в Confirm приоритетным будет считаться чек, переданный в Confirm\n\n\nЧек возврата передается в методе Cancel. В чеке должна быть указаны позиции возврата, сумма чека возврата должна совпадать с возвращаемой суммой\n\n**Внимание!**\n<br>\nТехническая поддержка не дает рекомендации клиентам по использованию определённых параметров в чеках, так как это находится в зоне ответственности самого клиента. Рекомендуем клиенту самостоятельно разобраться в налаживании схемы работы фискализации с юристами, поддержкой онлайн-кассы и соответствующими органами.\n<br>\nПоддержка оказывает консультации технического характера, если в процессе фискализации возникают ошибки."
		},
		{
			"name": "Подключение Онлайн-кассы",
			"description": "Подробная инструкция по подключению Онлайн-кассы находится в разделе [\"Help\"](https://www.tbank.ru/business/help/business-payments/internet-acquiring/kassa/how-connect/?card=q2) на лендинге\n\nЧтобы пройти тест-кейсы 7 и 8, нужно следующее:\n<ol>\n    <li>Настроить передачу чека в платеже;</li>\n    <li>Создать платёж через DEMO-терминал;</li>\n    <li>Оплатить его картой, указанной в тест-кейсе;</li>\n</ol>\nФормирование чека лежит на плечах клиента. В зависимости от типа подключения:\n<ul>\n    <li>\n\nПри подключении по API объект \"Receipt\" нужно передавать в запросе [\"Init\"](https://www.tbank.ru/kassa/dev/payments/#tag/Standartnyj-platyozh)\n    </li>\n    <li>\n\nПри подключении через виджет объект \"Receipt\" нужно сформировать в [виджете](https://www.tbank.ru/kassa/dev/widget/)\n    </li>\n    <li>\n\nПри подключении через модуль нужно настроить передачу чека по инструкции для соответствующего модуля (если модуль поддерживает интеграцию с онлайн-кассой). Это можно проверить на [странице](https://www.tbank.ru/kassa/dev/cms/). Если модуль разработан не нами, нужно обратиться в поддержку соответствующего сервиса и уточнить, поддерживает ли он формирование чека.\n    </li>\n</ul>\n\n**ВАЖНО**: для подключения онлайн-кассы нужен <i>активированный терминал</i>, а также необходимо указать <i>корректный сайт магазина</i> в настройках терминала, иначе может возникнуть ошибка подключения кассы\n\n### Список доступных онлайн-касс\n\n<ul>\n    <li>CloudKassir</li>\n    <li>АТОЛ Онлайн</li>\n    <li>Бизнес.Ру Онлайн‑Чеки</li>\n    <li>КОМТЕТ Касса</li>\n    <li>aQsi Online</li>\n    <li>Ecomkassa</li>\n    <li>OFD Ferma</li>\n    <li>Orange Data</li>\n    <li>Чеки от Т‑Кассы</li>\n</ul>"
		},
		{
			"name": "Методы работы с чеками",
			"description": " "
		},
		{
			"name": "Квитанции",
			"description": "Чтобы квитанция отправилась, необходимо указывать email на ПФ с выбором чекбокса \"Нужна квитанция\".\n### Настройка обязательности заполнения email на ПФ\nЕсть возможность сделать настройку с обязательным вводом email на ПФ. В таком случае, email для отправки квитанции будет обязателен для заполнения на ПФ.\nПри включении этой настройки покупателям будет доступен только метод оплаты \"карта\", а способы Tinkoff Pay, Sber Pay и другие будут недоступны.\nДля включения настройки нужно обратиться в чат поддержки."
		},
		{
			"name": "Описание дополнительных объектов",
			"description": "### Структура объекта Receipt для ФФД 1.05\nJSON-объект с данными чека. Обязателен, если подключена онлайн-касса\n\n| **Параметр** | **Тип** | **Обязательность** | **Описание** | **Тег ФФД** |\n| ------ | -------- | ------ | -------- | -------- |\n| Items | Array of objects | Да | Массив, содержащий в себе информацию о товарах <br> См. *Структура объекта Items* |\n| FfdVersion | String | Нет | <br>Версия ФФД <br>Возможные значения:<br> • \"FfdVersion\": \"1.2\"<br> • \"FfdVersion\": \"1.05\"<br>По умолчанию версия ФФД - 1.05. |\n| Email | String | Нет* | Электронная почта для отправки чека | 1008 |\n| Phone | String | Нет* | Телефон для отправки чека | 1008 |\n| Taxation | Enum | Да | Система налогообложения. Перечисление с возможными значениями:<br> - osn - общая СН;<br> - usn_income - упрощенная СН;<br> - usn_income_outcome - упрощенная СН (доходы минус расходы);<br> - envd - единый налог на вмененный доход;<br> - esn - единый сельскохозяйственный налог;<br> - patent - патентная СН;<br><br>Примечание:<br>‣ Самозанятые работают по системе налогообложения НПД — налог на профессиональную деятельность. Интегрировать онлайн-кассу и передавать такую СНО не нужно. Формировать чеки нужно в приложении/веб-версии \"Мой налог\"<br>‣ Автоматизированная упрощённая система налогообложения. Передавать такую систему налогообложения нужно как УСН. Это работает только для обычной схемы, для ТЧеков не работает. | 1055 |\n| Payments | Object | Нет** | Объект c информацией о видах суммы платежа. <br> См. *Структура объекта Payments* |\n\n*Должен быть заполнен параметр или `Phone`, или `E-mail`<br>\n**Если объект не передан, будет автоматически указана итоговая сумма чека с видом оплаты \"Безналичный\".<br>\nЕсли передан объект `receipt.Payments`, то значение в `Electronic` должно быть равно итоговому значению `Amount` в методе [**Init**](#tag/Standartnyj-platyozh/paths/~1Init/post). При этом сумма введенных значений по всем видам оплат, включая `Electronic`, должна быть равна сумме (`Amount`) всех товаров, переданных в объекте `receipt.Items`.\n\n### Структура объекта Shops\n| **Параметр** | **Тип** | **Обязательность** | **Описание** |\n| ------ | -------- | ------ | -------- |\n| ShopCode | String | Да | Присвоенный идентификатор точки на стороне банка |\n| Amount | String | Да | Сумма в копейках, которая относится к указанному ShopCode |\n| Name | String | Нет | Наименование позиции. Максимум 128 символов |\n| Fee | String | Нет | Сумма комиссии в копейках, удерживаемая из возмещения Партнера в пользу Маркетплейса. <br>Если не передано, используется комиссия, указанная при регистрации. |\n\n### Структура объекта Items\n| **Параметр** | **Тип** | **Обязательность** | **Описание** | **Тег ФФД** |\n| ------ | -------- | ------ | -------- | -------- |\n| Name | String | Да | Наименование товара | 1030 |\n| Price | Number | Да | Цена в копейках | 1078 |\n| Quantity | Number | Да | Количество/вес:<br> - целая часть не более 5 знаков;<br> - дробная часть не более 3 знаков для Атол, не более 2 знаков для CloudPayments.| 1023 |\n| Amount | Number | Да | Сумма в копейках. Целочисленное значение не более 10 знаков | 1043 |\n| PaymentMethod | Enum | Да | Признак способа расчёта. Если значение не передано, по умолчанию в онлайн-кассу передается признак способа расчёта \"full_payment\". Возможные значения:<br> — «full_prepayment» — предоплата 100%<br> — «prepayment» — предоплата<br> — «advance» — аванс<br> — «full_payment» — полный расчет<br> — «partial_payment» — частичный расчет и<br> кредит<br> — «credit» — передача в кредит<br> — «credit_payment» – оплата кредита | 1214 |\n| PaymentObject | Enum | Да | Признак предмета расчёта.Если значение не передано, по умолчанию в онлайн-кассу отправляется признак предмета расчёта \"commodity\".<br>Возможные значения:<br> — «commodity» — товар<br> — «excise» — подакцизный товар<br> — «job» — работа<br> — «service» — услуга<br> — «gambling_bet» — ставка азартной игры<br> — «gambling_prize» — выигрыш азартной игры<br> — «lottery» — лотерейный билет<br> — «lottery_prize» — выигрыш лотереи<br> — «intellectual_activity» — предоставление результатов интеллектуальной деятельности<br> — «payment» — платеж<br> — «agent_commission» — агентское вознаграждение<br> — «composite» — составной предмет расчета<br> — «another» — иной предмет расчета | 1212 |\n| Tax | Enum | Да | Ставка налога. Перечисление со значениями:<br> — none — без НДС<br> — vat0 — НДС по ставке 0%<br> — vat10 — НДС чека по ставке 10%<br> — vat20 — НДС чека по ставке 20%<br> — vat110 — НДС чека по расчетной ставке 10/110<br> — vat120 — НДС чека по расчетной ставке 20/120 | 1199 |\n| Ean13 | String | Нет | Штрих-код в требуемом формате. В зависимости от типа кассы требования могут отличаться:<br>• **АТОЛ Онлайн** - шестнадцатеричное представление с пробелами. Максимальная длина — 32 байта (^[a-fA-F0-9]{2}$)(^([afA-F0-9]{2}\\\\s){1,31}[a-fA-F0-9]{2}$)<br> Пример:<br> *00 00 00 01 00 21 FA 41 00 23 05 41 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 00 AB 00*<br>• **CloudKassir** — длина строки: четная, от 8 до 150 байт, то есть от 16 до 300 ASCII символов ['0' - '9' , 'A' - 'F' ] шестнадцатеричного представления кода маркировки товара<br> Пример:<br> *303130323930303030630333435*<br>• **OrangeData** — строка, содержащая base64 кодированный массив от 8 до 32 байт<br> Пример:<br> *igQVAAADMTIzNDU2Nzg5MDEyMwAAAAAAAQ==*<br>В случае передачи в запросе не прошедшего валидацию параметра Ean13, возвращается неуспешный ответ с текстом ошибки в параметре message = \"Неверный параметр Ean13\"  | 1162 |\n| ShopCode | String | Нет | Код магазина. Для параметра ShopСode необходимо использовать значение параметра Submerchant_ID, полученного в ответ при регистрации магазинов через xml. Если xml не используется, передавать поле не нужно |\n| AgentData | Object | Да, если используется агентская схема | Данные агента. Параметры объекта описаны в таблице *Структура объекта AgentData* |\n| SupplierInfo | Object | Да, если передается значение `AgentSign` в объекте AgentData | Данные поставщика платежного агента. Параметры объекта описаны в таблице *Структура объекта AgentData* |\n\n<ul>\n<li>Как передать скидку в платеже:\n\nНа всех кассах, кроме Cloud Kassir скидка должна быть заложена уже на стороне клиента и к нам в запросе должны приходить итоговые значения `Price`, `Quantity`, `Amount`. То есть произведение цены и количества/веса (price*quantity) должно быть равно общей сумме (amount)<br>\nДля Cloud Kassir скидка может быть учтена только в `Amount`, следовательно, `Price` можно прописывать без скидки</li>\n\n<li>Промокоды/бонусы:\n\nВ случае оплаты бонусами для каждой позиции прописывается реальная полная стоимость в цене `Price`, а вот в объекте `Payments` нужно указать `AdvancePayment` (сумма оплатой бонусами) и `Electronic` (что реально заплатил клиент).</li>\n</ul>\n\n\n### Структура объекта Payments\n| **Параметр** | **Тип** | **Обязательность** | **Описание** | **Тег ФФД** |\n| ------ | -------- | ------ | -------- | -------- |\n| Cash | Number(14) | Нет | Вид оплаты \"Наличные\". Сумма к оплате в копейках не более 14 знаков | 1031 |\n| Electronic | Number(14) | Да | Вид оплаты \"Безналичный\" | 1081 |\n| AdvancePayment | Number(14) | Нет | Вид оплаты \"Предварительная оплата (Аванс)\" | 1215 |\n| Credit | Number(14) | Нет | Вид оплаты \"Постоплата (Кредит)\" | 1216 |\n| Provision | Number(14) | Нет | Вид оплаты \"Иная форма оплаты\" | 1217 |\n\n### Структура объекта AgentData\nДанные агента. Обязателен, если используется агентская схема.\n| **Параметр** | **Тип** | **Обязательность** | **Описание** | **Тег ФФД** |\n| ------ | -------- | ------ | -------- | -------- |\n| AgentSign | String | Нет | Признак агента.<br> Возможные значения:<br> • bank_paying_agent — банковский платежный агент<br> • bank_paying_subagent — банковский платежный субагент<br> • paying_agent — платежный агент<br> • paying_subagent — платежный субагент<br> • attorney — поверенный<br> • commission_agent — комиссионер<br> • another — другой тип агента<br> | 1222 |\n| OperationName | String | Нет | Наименование операции.<br> Атрибут обязателен, если AgentSign передан в значениях:<br> • bank_paying_agent <br> • bank_paying_subagent | 1044 |\n| Phones | Array of Strings | Нет | Телефоны платежного агента, в формате +{Ц} <br> Атрибут обязателен, если в AgentSign передан в значениях:<br> • bank_paying_agent<br> • bank_paying_subagent<br> • paying_agent<br> • paying_subagent | 1073 |\n| ReceiverPhones | Array of Strings | Нет | Телефоны оператора по приему платежей, в формате +{Ц}<br> Атрибут обязателен, если в AgentSign передан в значениях:<br> • paying_agent<br>• paying_subagent | 1074 |\n| TransferPhones | Array of Strings | Нет | Телефоны оператора перевода, в формате +{Ц}.<br> Атрибут обязателен, если в AgentSign передан в значениях:<br> • bank_paying_agent<br>• bank_paying_subagent | 1075 |\n| OperatorName | String | Нет | Наименование оператора перевода.<br> Атрибут обязателен, если в AgentSign передан в значениях:<br> • bank_paying_agent<br> • bank_paying_subagent | 1026 |\n| OperatorAddress | String | Нет | Адрес оператора перевода.<br> Атрибут обязателен, если в AgentSign передан в значениях:<br> • bank_paying_agent<br> • bank_paying_subagent | 1005 |\n| OperatorInn | String | Нет | ИНН оператора перевода.<br> Атрибут обязателен, если в AgentSign передан в значениях:<br> • bank_paying_agent <br> • bank_paying_subagent | 1016 |\n\n### Структура объекта SupplierInfo\nДанные поставщика платежного агента. Обязателен, если передается значение `AgentSign` в объекте `AgentData`\n| **Параметр** | **Тип** | **Обязательность** | **Описание** | **Тег ФФД** |\n| ------ | -------- | ------ | -------- | -------- |\n| Phones | Массив String | Да, если передается значение AgentSign в объекте AgentData | Телефон поставщика, в формате +{Ц} (1-19 символов в каждой строке массива) | 1171 |\n| Name | String | Да, если передается значение AgentSign в объекте AgentData | Наименование поставщика. <br>Внимание: в данные 239 символов включаются телефоны поставщика + 4 символа на каждый телефон <br>Например, если передано два телефона поставщика длиной 12 и 14 символов, то максимальная длина наименования поставщика будет 239 – (12 + 4) – (14 + 4) = 205 символов | 1225 |\n| Inn | String | Да, если передается значение AgentSign в объекте AgentData | ИНН поставщика, в формате ЦЦЦЦЦЦЦЦЦЦ (10-12 символов) | 1226 |\n\nПример запроса:\n```json\n{\n\"TerminalKey\":\"TinkoffBankTest\",\n\"Amount\":140000,\n\"OrderId\":\"21050\",\n\"Description\":\"Подарочная карта на 1000 рублей\",\n\"Token\":\"871199b37f207f0c4f721a37cdcc71dfcea880b4a4b85e3cf852c5dc1e99a8d6\"\n\"DATA\":{\n\"Phone\":\"+71234567890\",\n\"Email\":\"a@test.com\"},\n\"Receipt\": {\n      \"Email\":\"a@test.ru\",\n      \"Phone\":\"+79031234567\",\n      \"Taxation\":\"osn\",\n      \"Items\": [\n        {\n          \"Name\":\"Наименование товара 1\",\n          \"Price\":10000,\n          \"Quantity\":1.00,\n          \"Amount\":10000,\n          \"Tax\":\"vat10\"\n        },\n        {\n          \"Name\":\"Наименование товара 2\",\n          \"Price\":20000,\n          \"Quantity\":2.00,\n          \"Amount\":40000,\n          \"Tax\":\"vat20\"\n        },\n        {\n          \"Name\":\"Наименование товара 3\",\n          \"Price\":30000,\n          \"Quantity\":3.00,\n          \"Amount\":90000,\n          \"Tax\":\"vat10\"\n        }\n      ]\n    }\n}\n```\n\nПример запроса, если используется агентская схема:\n```json\n{\n\"TerminalKey\":\"TinkoffBankTest\",\n\"Amount\": 50000,\n\"OrderId\":\"21050\",\n\"Description\":\"Подарочная карта на 1000 рублей\",\n\"Token\":\"2ED30E046136931431B5251B7C9A1EAC68DAB082203BD42676BA14A851359DF4\",\n\"DATA\":{\"Phone\":\"+71234567890\",\"Email\":\"a@test.com\"},\n\"Receipt\": {\n      \"Email\": \"a@test.ru\",\n      \"Phone\": \"+79031234567\",\n      \"Taxation\": \"osn\",\n   \"Customer\":\"TestCustomer\",\n   \"CustomerInn\":\"1234567890\",\n   \"Payments\": {\n            \"electronic\": 50000,\n            \"cash\": 90000,\n            \"advancePayment\": 0,\n            \"credit\": 0,\n            \"provision\": 0\n        },\n   \"AgentData\": {\n            \"AgentSign\": \"bank_paying_subagent\",\n            \"OperationName\": \"Чек\",\n            \"Phones\": [\"+19221210697\", \"+19098561231\"],\n            \"ReceiverPhones\": [\"+29221210697\", \"+29098561231\"],\n            \"TransferPhones\": [\"+39221210697\"],\n            \"OperatorName\": \"Tinkoff\",\n            \"OperatorAddress\": \"г.Москва\",\n            \"OperatorInn\": \"7710140679\"\n        },\n        \"SupplierInfo\": {\n            \"Phones\": [\"+49221210697\", \"+49098561231\"]\n        },\n      \"Items\": [\n        {\n    \"AgentData\": {\n           \"AgentSign\": \"paying_agent\",\n             \"OperationName\": \"Позиция чека\",\n             \"Phones\": [\"+790912312398\"],\n             \"ReceiverPhones\": [\"+79221210697\", \"+79098561231\"],\n             \"TransferPhones\": [\"+79221210697\"],\n             \"OperatorName\": \"Tinkoff\",\n             \"OperatorAddress\": \"г. Тольятти\",\n             \"OperatorInn\": \"7710140679\"\n      },\n            \"SupplierInfo\": {\n              \"Phones\": [\"+79221210697\", \"+79098561231\"],\n              \"Name\": \"ООО Вендор товара\",\n              \"Inn\": \"7710140679\"\n      },\n          \"Name\": \"Наименование товара 1\",\n          \"Price\": 10000,\n          \"Quantity\": 1.00,\n          \"Amount\": 10000,\n          \"Tax\": \"vat10\",\n          \"Ean13\": \"303130323930303030630333435\",\n          \"ShopCode\": \"12345\",\n          \"MeasurementUnit\": \"шт\"\n        },\n        {\n          \"Name\": \"Наименование товара 2\",\n          \"Price\": 20000,\n          \"Quantity\": 2.00,\n          \"Amount\": 40000,\n          \"Tax\": \"vat20\"\n        },\n        {\n          \"Name\": \"Наименование товара 3\",\n          \"Price\": 30000,\n          \"Quantity\": 3.00,\n          \"Amount\": 90000,\n          \"Tax\": \"vat10\"\n        }\n      ]\n    }\n}\n```\n\n\n### Структура объекта Receipt для ФФД 1.2\n\n\nJSON-объект с данными чека. Обязателен, если подключена онлайн-касса \n\n| **Параметр** | **Тип** | **Обязательность** | **Описание** | **Тег ФФД** |\n| ------ | -------- | ------ | -------- | -------- |\n| Items | Array of objects | Да | Массив, содержащий в себе информацию о товарах. <br> См. *Структура объекта Items* |\n| FfdVersion | String | Нет | <br>Версия ФФД. <br>Возможные значения:<br> • \"FfdVersion\": \"1.2\"<br> • \"FfdVersion\": \"1.05\"<br>По умолчанию версия ФФД - 1.05. |\n| Email | String | Нет* | Электронная почта для отправки чека | 1008 |\n| Phone | String | Нет* | Телефон для отправки чека | 1008 |\n| Taxation | Enum | Да | Система налогообложения. Перечисление с возможными значениями:<br> — osn — общая СН<br> — usn_income — упрощенная СН<br> — usn_income_outcome — упрощенная СН (доходы минус расходы)<br> — envd — единый налог на вмененный доход<br> — esn — единый сельскохозяйственный налог<br> — patent — патентная СН<br><br>Примечание:<br>‣ Самозанятые работают по системе налогообложения НПД — налог на профессиональную деятельность. Интегрировать онлайн-кассу и передавать такую СНО не нужно. Формировать чеки нужно в приложении/веб-версии \"Мой налог\"<br>‣ Автоматизированная упрощённая система налогообложения. Передавать такую систему налогообложения нужно как УСН. Это работает только для обычной схемы, для ТЧеков не работает. | 1055 |\n| Payments | Object | Нет** | Объект c информацией о видах суммы платежа <br> См. *Структура объекта Payments* |\n\n*Должен быть заполнен параметр или `Phone`, или `E-mail`<br>\n**Если объект не передан, будет автоматически указана итоговая сумма чека с видом оплаты \"Безналичный\"<br>\nЕсли передан объект `receipt.Payments`, то значение в `Electronic` должно быть равно итоговому значению `Amount` в методе [**Init**](#tag/Standartnyj-platyozh/paths/~1Init/post). При этом сумма введенных значений по всем видам оплат, включая `Electronic`, должна быть равна сумме (`Amount`) всех товаров, переданных в объекте `receipt.Items`\n\n\n\n| **Наименование** | **Тип** | **Обязательность** | **Описание** | **Тег ФФД** |\n| ------ | -------- | ------ | -------- | -------- |\n| FfdVersion | String | Нет | <br>Версия ФФД. <br>Возможные значения:<br> • \"FfdVersion\": \"1.2\"<br> • \"FfdVersion\": \"1.05\"<br>По умолчанию версия ФФД — 1.05. |\n| ClientInfo | Object | Нет | Информация по покупателю |\n| Taxation | Enum | Да | Система налогообложения. Перечисление с возможными значениями:<br> — osn — общая СН<br> — usn_income — упрощенная СН<br> — usn_income_outcome — упрощенная СН (доходы минус расходы)<br> — envd — единый налог на вмененный доход<br> — esn — единый сельскохозяйственный налог<br> — patent — патентная СН | 1055 |\n| Email | String | Нет* | Электронная почта для отправки чека | 1008 |\n| Phone | String | Нет* | Телефон для отправки чека | 1008 |\n| Customer | String | Нет | Идентификатор/Имя покупателя | 1227 |\n| CustomerInn | String | Нет | ИНН покупателя | 1228 |\n| Items | Array of objects | Да | Массив, содержащий в себе информацию о товарах |\n| Payments | Object | Нет** | Объект c информацией о видах суммы платежа. См. Структура объекта Payments |\n| OperatingСheckProps | Object | Нет | Операционный реквизит чека (тег 1270) |\n| SectoralCheckProps | Object | Нет | Отраслевой реквизит чека (тег 1261) |\n| AddUserProp | Object | Нет | Дополнительный реквизит пользователя (тег 1084) |\n| AdditionalCheckProps | String | Нет | Дополнительный реквизит чека (БСО) (тег 1192) |\n\n*Должен быть заполнен параметр или `Phone`, или `E-mail`<br>\n**Если объект не передан, будет автоматически указана итоговая сумма чека с видом оплаты \"Безналичный\"<br>\nЕсли передан объект `receipt.Payments`, то значение в `Electronic` должно быть равно итоговому значению `Amount` в методе [**Init**](#tag/Standartnyj-platyozh/paths/~1Init/post). При этом сумма введенных значений по всем видам оплат, включая `Electronic`, должна быть равна сумме (`Amount`) всех товаров, переданных в объекте `receipt.Items`\n\n### Структура объекта ClientInfo\n\n| **Параметр** | **Тип** | **Обязательность** | **Описание** | **Тег ФФД** |\n| ------ | -------- | ------ | -------- | -------- |\n| Birthdate | String | Нет | Дата рождения покупателя в формате ДД.ММ.ГГГГ | 1243 |\n| Citizenship | String | Нет | Числовой код страны, гражданином которой является покупатель. Код страны указывается в соответствии с Общероссийским классификатором стран мира ОКСМ | 1244 |\n| DocumentСode | String | Нет | Числовой код вида документа, удостоверяющего личность <br> Может принимать только значения: <br> • 21 — Паспорт гражданина Российской Федерации <br> • 22 — Паспорт гражданина Российской Федерации, дипломатический паспорт, служебный паспорт, удостоверяющие личность гражданина Российской Федерации за пределами Российской Федерации <br> • 26 — Временное удостоверение личности гражданина Российской Федерации, выдаваемое на период оформления паспорта гражданина Российской Федерации <br> • 27 — Свидетельство о рождении гражданина Российской Федерации (для граждан Российской Федерации в возрасте до 14 лет) <br> • 28 — Иные документы, признаваемые документами, удостоверяющими личность гражданина Российской Федерации в соответствии с законодательством Российской Федерации <br> • 31 — Паспорт иностранного гражданина <br> • 32 — Иные документы, признаваемые документами, удостоверяющими личность иностранного гражданина в соответствии с законодательством Российской Федерации и международным договором Российской Федерации <br> • 33 — Документ, выданный иностранным государством и признаваемый в соответствии с международным договором Российской Федерации в качестве документа, удостоверяющего личность лица безгражданства. <br> • 34 — Вид на жительство (для лиц без гражданства) <br> • 35 — Разрешение на временное проживание (для лиц без гражданства) <br> • 36 — Свидетельство о рассмотрении ходатайства о признании лица без гражданства беженцем на территории Российской Федерации по существу <br> • 37 — Удостоверение беженца <br> • 38 — Иные документы, признаваемые документами, удостоверяющими личность лиц без гражданства в соответствии с законодательством Российской Федерации и международным договором Российской Федерации <br> • 40 — Документ, удостоверяющий личность лица, не имеющего действительного документа, удостоверяющего личность, на период рассмотрения заявления о признании гражданином Российской Федерации или о приеме в гражданство Российской Федерации <br> | 1245 |\n| DocumentData | String | Нет | Реквизиты документа, удостоверяющего личность (например: серия и номер паспорта) | 1246 |\n| Address | String | Нет | Адрес покупателя (клиента), грузополучателя. Максимум 256 символов | 1254 |\n\n### Структура объекта OperatingСheckProps\n\n| **Параметр** | **Тип** | **Обязательность** | **Описание** |\n| ------ | -------- | ------ | -------- |\n| Name | String | Да | Идентификатор операции (тег 1271) <br> Принимает значения «0» до определения значения реквизита ФНС России |\n| Value | String | Да | Данные операции (тег 1272) |\n| Timestamp | String | Да | Дата и время операции в формате ДД.ММ.ГГГГ ЧЧ:ММ:СС (тег 1273) |\n\n### Структура объекта SectoralCheckProps\n\n| **Параметр** | **Тип** | **Обязательность** | **Описание** |\n| ------ | -------- | ------ | -------- |\n| FederalId | String | Да | Идентификатор ФОИВ (тег 1262). Максимальное количество символов – 3 |\n| Date | String | Да | Дата документа основания в формате ДД.ММ.ГГГГ (тег 1263) |\n| Number | String | Да | Номер документа основания (тег 1264) |\n| Value | String | Да | Значение отраслевого реквизита (тег 1265) |\n\n### Структура объекта AddUserProp\n\n| **Параметр** | **Тип** | **Обязательность** | **Описание** |\n| ------ | -------- | ------ | -------- |\n| Name | String | Да | Наименование дополнительного реквизита пользователя (тег 1085) |\n| Value | String | Да | Значение дополнительного реквизита пользователя (тег1086) |\n\n### Структура объекта Items\n\n| **Параметр** | **Тип** | **Обязательность** | **Описание** | **Тег ФФД** |\n| ------ | -------- | ------ | -------- | -------- |\n| Name | String | Да | Наименование товара <br> Максимум 128 символов | 1030 |\n| Price | Number | Да | Цена в копейках | 1079 |\n| Quantity | Number | Да | Количество/вес:<br> — целая часть не более 5 знаков;<br> — дробная часть не более 3 знаков для Атол, не более 2 знаков для CloudPayments <br> Значение «1», если передан объект markCode | 1023 |\n| Amount | Number | Да | Сумма в копейках. Целочисленное значение не более 10 знаков | 1043 |\n| PaymentMethod | Enum | Да | Признак способа расчета. Если значение не передано, по умолчанию в онлайн-кассу передается признак способа расчёта \"full_payment\". Возможные значения:<br> — «full_prepayment» — предоплата 100%<br> — «prepayment» — предоплата<br> — «advance» — аванс<br> — «full_payment» — полный расчет<br> — «partial_payment» — частичный расчет и<br> кредит<br> — «credit» — передача в кредит<br> — «credit_payment» — оплата кредита | 1214 |\n| PaymentObject | Enum | Да | Признак предмета расчёта.Если значение не передано, по умолчанию в онлайн-кассу отправляется признак предмета расчета \"commodity\"<br>Возможные значения:<br> — «commodity» — товар<br> — «excise» — подакцизный товар<br> — «job» — работа<br> — «service» — услуга<br> — «gambling_bet» — ставка азартной игры<br> — «gambling_prize» — выигрыш азартной игры<br> — «lottery» — лотерейный билет<br> — «lottery_prize» — выигрыш лотереи<br> — «intellectual_activity» — предоставление результатов интеллектуальной деятельности<br> — «payment» — платеж<br> — «agent_commission» — агентское вознаграждение<br> — «contribution» — выплата<br> — «property_rights» — имущественное право<br> — «unrealization» — внереализационный доход<br> — «tax_reduction» — иные платежи и взносы<br> — «trade_fee» — торговый сбор<br> — «resort_tax» — курортный сбор<br> — «pledge» — залог<br> — «income_decrease» — расход<br> — «ie_pension_insurance_without_payments» — взносы на ОПС ИП<br> — «ie_pension_insurance_with_payments» — взносы на ОПС<br> — «ie_medical_insurance_without_payments» — взносы на ОМС ИП<br> — «ie_medical_insurance_with_payments» — взносы на ОМС<br> — «social_insurance» — взносы на ОСС<br> — «casino_chips» — платеж казино<br> — «agent_payment» — выдача ДС<br> — «excisable_goods_without_marking_code» — АТНМ<br> — «excisable_goods_with_marking_code» — АТМ<br> — «goods_without_marking_code» — ТНМ<br> — «goods_with_marking_code» — ТМ<br> — «another» — иной предмет расчета | 1212 |\n| UserData  | String | Нет | Дополнительный реквизит предмета расчета | 1191 |\n| Excise | Number | Нет | Сумма акциза в рублях с учетом копеек, включенная в стоимость предмета расчета<br> Целая часть не более 8 знаков<br> Дробная часть не более 2 знаков<br> Значение не может быть отрицательным<br> | 1229 |\n| CountryCode | String | Нет | Цифровой код страны происхождения товара в соответствии с Общероссийским классификатором стран мира (3 цифры) | 1230 |\n| DeclarationNumber | String | Нет | Номер таможенной декларации (32 цифры максимум) | 1231 |\n| MeasurementUnit | String | Да | Единицы измерения. Передовать в соответствии с ОК 015-94 (МК 002-97)<br> Возможные варианты указаны в <a href=\"https://www.consultant.ru/document/cons_doc_LAW_362322/0060b1f1924347c03afbc57a8d4af63888f81c6c/\">статье</a> (также возможна передача произвольных значений)<br> MeasurementUnit обязателен, в случае если ФФД онлайн-кассы 1.2 | 2108 |\n| MarkProcessingMode | String | Нет* | Режим обработки кода маркировки. Должен принимать значение равное «0» | 2102 |\n| MarkCode | Object | Нет* | Код маркировки в машиночитаемой форме, представленный в виде одного из видов кодов, формируемых в соответствии с требованиями, предусмотренными правилами, для нанесения на потребительскую упаковку, или на товары, или на товарный ярлык. Параметры объекта описаны в таблице *Структура объекта MarkCode* | 1163 |\n| MarkQuantity | Object | Нет** | Реквизит «дробное количество маркированного товара». MarkQuantity не является обязательным объектом, в том числе для товаров с маркировкой. Этот объект МОЖНО передавать, если товар с маркировкой. То есть даже при ФФД 1.2 этот объект не является обязательным |\n| SectoralItemProps | Array of objects | Нет*** | Отраслевой реквизит предмета расчета. Параметры объекта описаны в таблице *Структура объекта SectoralItemProps* |\n| Tax | Enum | Да | Ставка налога. Перечисление со значениями:<br> — none — без НДС<br> — vat0 — НДС по ставке 0%<br> — vat10 — НДС чека по ставке 10%<br> — vat20 — НДС чека по ставке 20%<br> — vat110 — НДС чека по расчетной ставке 10/110<br> — vat120 — НДС чека по расчетной ставке 20/120 | 1199 |\n| AgentData | Object | Да, если используется агентская схема | Данные агента. Параметры объекта описаны в таблице *Структура объекта AgentData* |\n| SupplierInfo | Object | Да, если передается значение `AgentSign` в объекте AgentData | Данные поставщика платежного агента. Параметры объекта описаны в таблице *Структура объекта AgentData* |\n\n*Включается в чек в случае, если предметом расчета является товар, подлежащий обязательной\nмаркировке средством идентификации (соответствующий код в поле paymentObject)<br>\n**Передается только в случае, если расчет осуществляется за маркированный товар (соответствующий\nкод в поле paymentObject) и значение в поле measurementUnit равно «0» <br>\nСостоит из двух параметров, где <br>\n• Numerator — числитель дробной части предмета расчета. Значение должно быть строго меньше\nзначения реквизита «знаменатель» <br>\n• Denominator — знаменатель дробной части предмета расчета. Значение равно количеству товара в партии (упаковке), имеющей общий код маркировки товара <br>\nПример:\n```json\n{\n\"numerator\": \"1\",\n\"denominator\": \"2\"\n}\n```\n***Необходимо указывать только для товаров подлежащих обязательной маркировке средством идентификации и включение данного реквизита предусмотрено НПА отраслевого регулирования для соответствующей товарной группы <br>\n\n<ul>\n<li>Как передать скидку в платеже:\n\nНа всех кассах, кроме Cloud Kassir скидка должна быть заложена уже на стороне клиента и к нам в запросе должны приходить итоговые значения `Price`, `Quantity`, `Amount`. То есть произведение цены и количества/веса (price*quantity) должно быть равно общей сумме (amount)<br>\nДля Cloud Kassir скидка может быть учтена только в `Amount`, следовательно, `Price` можно прописывать без скидки</li>\n\n<li>Промокоды/бонусы:\n\nВ случае оплаты бонусами для каждой позиции прописывается реальная полная стоимость в цене `Price`, а вот в объекте `Payments` нужно указать `AdvancePayment` (сумма оплатой бонусами) и `Electronic` (что реально заплатил клиент)</li>\n</ul>\n\n### Структура объекта MarkCode\n\n| **Параметр** | **Тип** | **Обязательность** | **Описание** |\n| ------ | -------- | ------ | -------- |\n| MarkCodeType | String | Да | Тип штрих кода. Возможные значения: <br> • UNKNOWN — код товара, формат которого не идентифицирован, как один из реквизитов <br> • EAN8 — код товара в формате EAN-8 <br> • EAN13 — код товара в формате EAN-13 <br> • ITF14 — код товара в формате ITF-14 <br> • GS10 — код товара в формате GS1, нанесенный на товар, не подлежащий маркировке <br> • GS1M — код товара в формате GS1, нанесенный на товар, подлежащий маркировке <br> • SHORT — код товара в формате короткого кода маркировки, нанесенный на товар <br> • FUR — контрольно-идентификационный знак мехового изделия <br> • EGAIS20 — код товара в формате ЕГАИС-2.0 <br> • EGAIS30 — код товара в формате ЕГАИС-3.0 <br> • RAWCODE — Код маркировки, как он был прочитан сканером |\n| value | String | Да | Код маркировки |\n\n### Структура объекта SectoralItemProps\n\n| **Параметр** | **Тип** | **Обязательность** | **Описание** | **Тег ФФД** |\n| ------ | -------- | ------ | -------- | -------- |\n|FederalId | Enum (string) | Да | Идентификатор ФОИВ (федеральный орган исполнительной власти) | 1262 |\n| Date | String | Да | Дата нормативного акта ФОИВ | 1263 |\n| Number | String | Да | Номер нормативного акта ФОИВ | 1264 |\n| Value | String | Да | Состав значений, определенных нормативного актом ФОИВ | 1265 |\n\nПример запроса с маркировкой:\n```json\n{\n    \"TerminalKey\": \"testRegressTwoFiscalAtolBank\",\n    \"Amount\": 90000,\n    \"OrderId\": \"{{$timestamp}}\",\n    \"Description\": \"RS_TESTING\",\n    \"CustomerKey\": \"a.grigorash\",\n    \"Receipt\": {\n        \"FfdVersion\": \"1.2\",\n        \"ClientInfo\": {\n            \"Birthdate\": \"21.11.1995\",\n            \"Сitizenship\": \"643\",\n            \"DocumentCode\": \"40\",\n            \"DocumentData\": \"4507 443564\",\n            \"Address\": \"г. Краснодар ул. Привокзальная 1\"\n        },\n        \"Taxation\": \"osn\",\n        \"Email\": \"ext.test.qa@tinkoff.ru\",\n        \"Phone\": \"88005553535\",\n        \"Customer\": \"Клиент\",\n        \"CustomerInn\": \"516974792202\",\n        \"Items\": [\n            {\n                \"AgentData\": {\n                    \"AgentSign\": \"paying_agent\",\n                    \"OperationName\": \"Позиция чека\",\n                    \"Phones\": [\n                        \"+790912312398\"\n                    ],\n                    \"ReceiverPhones\": [\n                        \"+79221210697\",\n                        \"+79098561231\"\n                    ],\n                    \"TransferPhones\": [\n                        \"+79221210697\"\n                    ],\n                    \"OperatorName\": \"Tinkoff\",\n                    \"OperatorAddress\": \"г. Тольятти\",\n                    \"OperatorInn\": \"7710140679\"\n                },\n                \"SupplierInfo\": {\n                    \"Phones\": [\n                        \"+79221210697\",\n                        \"+79098561231\"\n                    ],\n                    \"Name\": \"ООО Вендор товара\",\n                    \"Inn\": \"7710140679\"\n                },\n                \"Name\": \"Тестовый товар\",\n                \"Price\": 100000,\n                \"Quantity\": 1,\n                \"Amount\": 90000,\n                \"Tax\": \"vat20\",\n                \"PaymentMethod\": \"full_prepayment\",\n                \"PaymentObject\": \"goods_with_marking_code\",\n                \"UserData\": \"Данные пользователя ext.test.qa@tinkoff.ru\",\n                \"Excise\": 12.2,\n                \"CountryCode\": \"056\",\n                \"DeclarationNumber\": \"12345678901\",\n                \"MeasurementUnit\": \"шт\",\n                \"MarkProcessingMode\": \"0\",\n                \"MarkCode\": {\n                    \"MarkCodeType\": \"EAN8\",\n                    \"Value\": \"12345678\"\n                },\n                \"MarkQuantity\": {\n                    \"Denominator\": \"2\",\n                    \"Numerator\": \"1\"\n                },\n                \"SectoralItemProps\": [\n                    {\n                        \"Number\": \"123/43\",\n                        \"Date\": \"21.11.2020\",\n                        \"Value\": \"test value SectoralItemProps\",\n                        \"FederalId\": \"001\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n\nПример запроса без маркировки:\n```json\n{\n    \"TerminalKey\": \"testRegressTwoFiscalAtolBank\",\n    \"Amount\": 90000,\n    \"OrderId\": \"{{$timestamp}}\",\n    \"Description\": \"RS_TESTING\",\n    \"CustomerKey\": \"a.grigorash\",\n    \"Receipt\": {\n        \"FfdVersion\": \"1.2\",\n        \"Taxation\": \"osn\",\n        \"Email\": \"ext.test.qa@tinkoff.ru\",\n        \"Phone\": \"88005553535\",\n        \"Customer\": \"Клиент\",\n        \"CustomerInn\": \"516974792202\",\n        \"Items\": [\n            {\n                \"AgentData\": {\n                    \"AgentSign\": \"paying_agent\",\n                    \"OperationName\": \"Позиция чека\",\n                    \"Phones\": [\"+790912312398\"],\n                    \"ReceiverPhones\": [\"+79221210697\", \"+79098561231\"],\n                    \"TransferPhones\": [\"+79221210697\"],\n                    \"OperatorName\": \"Tinkoff\",\n                    \"OperatorAddress\": \"г. Тольятти\",\n                    \"OperatorInn\": \"7710140679\"\n                },\n                \"SupplierInfo\": {\n                    \"Phones\": [\"+79221210697\", \"+79098561231\"],\n                    \"Name\": \"ООО Вендор товара\",\n                    \"Inn\": \"7710140679\"\n                },\n                \"Name\": \"Тестовый товар\",\n                \"Price\": 100000,\n                \"Quantity\": 1,\n                \"Amount\": 90000,\n                \"Tax\": \"vat20\",\n                \"PaymentMethod\": \"full_prepayment\",\n                \"PaymentObject\": \"commodity\",\n                \"MeasurementUnit\": \"шт\"\n                 \n            }\n        ]\n    }\n}\n```\n"
		},
		{
			"name": "Коды ошибок",
			"description": "\n| CODE | MESSAGE | DETAILS (опционально) |\n|---|---|---|\n| 0 | None |  |\n| 1 | Параметры не сопоставлены |  |\n| 2 | Отсутствуют обязательные параметры |  |\n| 3 | Внутренняя ошибка системы интернет эквайринга |  |\n| 4 | Не получится изменить статус платежа |  |\n| 5 | Обратитесь в поддержку, чтобы уточнить детали |  |\n| 6 | Не получилось привязать карту покупателя. Обратитесь в поддержку, чтобы уточнить детали |  |\n| 7 | Неверный статус покупателя |  |\n| 8 | Неверный статус транзакции |  |\n| 9 | Переадресовываемый url пуст |  |\n| 10 | Метод Charge заблокирован для данного терминала |  |\n| 11 | Невозможно выполнить платеж |  |\n| 12 | Неверный параметр RedirectDueDate |  |\n| 13 | Оплата с мобильного телефона недоступна |  |\n| 13 | Оплата через WebMoney недоступна |  |\n| 14 | Платеж неверный. |  |\n| 15 | Не удалось осуществить платеж через EINV |  |\n| 16 | Счет был отклонен. |  |\n| 17 | Неверные введенные данные |  |\n| 18 | Не удалось осуществить платеж через MC. |  |\n| 19 | Не удалось осуществить платеж через WebMoney. |  |\n| 20 | Ошибка повторного идентификатора заказа |  |\n| 21 | Внутренняя ошибка вызова сервиса ACQAPI |  |\n| 27 | Кассовая ссылка на текущий момент недоступна для повторной активации |  |\n| 50 | Ошибка отправки нотификации |  |\n| 51 | Ошибка отправки Email |  |\n| 52 | Ошибка отправки Sms |  |\n| 53 | Обратитесь к продавцу |  |\n| 54 | Повторное прохождение 3DS авторизации не допустимо |  |\n| 55 | Повторите попытку позже | Не найдено оплаченных назначений платежа |\n| 60 | Запрещено получение документов по url для текущего терминала | Запрещено получение документов по url для текущего терминала |\n| 61 | Должен быть заполнен один из параметров: emailList или Url | Должен быть заполнен один из параметров: emailList или Url |\n| 62 | Запрещено получение документов по url для текущего systemId | Запрещено получение документов по url для текущего systemId |\n| 63 | Не найдена операция | Не найдена операция |\n| 64 | Невалидные данные в запросе | Невалидные данные в запросе |\n| 65 | Не удалось сформировать документ. Обратитесь в службу поддержки | Не удалось сформировать документ. Повторите операцию позднее |\n| 66 | Не удалось сформировать документ. Повторите операцию позднее | Запрещено получение документов по url для текущего терминала |\n| 67 | Не удалось сформировать документ. Повторите операцию позднее | Не удалось сформировать документ. Повторите операцию позднее |\n| 68 | Не удалось сформировать документ. Обратитесь в службу поддержки | Стороний сервис не доступен |\n| 76 | Операция по иностранной карте недоступна. | Операция по иностранной карте недоступна. Воспользуйтесь картой российского банка |\n| 77 | Оплата иностранной картой недоступна. | Оплата по иностранной карте недоступна. Воспользуйтесь картой российского банка |\n| 78 | Выплата на иностранную карту недоступна. | Выплата на иностранную карту недоступна. Воспользуйтесь картой российского банка |\n| 79 | Возврат на иностранную карту недоступен. | Возврат на иностранную карту недоступен. Обратитесь в поддержку |\n| 96 | Ошибка Iris |  |\n| 97 | Ошибка Jasper |  |\n| 98 | Ошибка SubExt |  |\n| 99 | Попробуйте повторить попытку позже | Банк, выпустивший карту, отклонил операцию |\n| 100 | • Попробуйте еще раз. Если ошибка повторится — обратитесь в поддержку<br>• Платеж не получится отменить, потому что деньги покупателя не были зарезервированы<br>• Платеж уже отменен<br>• Не получилось отменить платеж. Укажите сумму не больше, чем зарезервировано<br>• Покупатель опротестовал платеж в банке. Обратитесь в поддержку,чтобы уточнить детали<br>• Платеж уже подтвержден<br>• Нужно настроить подтверждение платежа через СМС (3DS) — для этого обратитесь в поддержку<br>• Карта покупателя неактивна |  |\n| 101 | Не пройдена идентификация 3DS | Ошибка прохождения 3-D Secure |\n| 102 | • Обратитесь в поддержку, чтобы уточнить детали<br>• Сообщите покупателю, чтобы попробовал оплатить еще раз. Если ошибка повторится — обратитесь в поддержку |  |\n| 102 | Операция отклонена, пожалуйста обратитесь в интернет-магазин или воспользуйтесь другой картой | Заказ не может быть оплачен, обратитесь службу поддержки |\n| 102 | Превышен лимит на сумму выплат в месяц |  |\n| 102 | Отказ. Более двух успешных оплат с одного email в неделю по проекту dolyame.ru |  |\n| 102 | Отказ. Более двух успешных оплат с одного phone в неделю по проекту dolyame.ru |  |\n| 102 | Отказ. Более двух успешных оплат с одной карты в неделю по проекту dolyame.ru |  |\n| 102 | Отказ. Более двух успешных оплат с одной карты в сутки по проекту dolyame.ru |  |\n| 102 | Отказ. Более двух успешных оплат с одного устройства в сутки по проекту dolyame.ru |  |\n| 102 | Отказ. Более двух успешных оплат с одного устройства в неделю по проекту dolyame.ru |  |\n| 102 | Отказ. Более двух успешных оплат с одного куки/идентификатора клиентского агента в сутки по проекту dolyame.ru |  |\n| 102 | Отказ. Более двух успешных оплат с одного куки/идентификатора клиентского агента в неделю по проекту dolyame.ru |  |\n| 102 | Отказ. Попытка оплаты с виртуальных или мошеннических бинов по проекту dolyame.ru |  |\n| 103 | Недостаточно средств на счете |  |\n| 104 | Ошибка выполения рекуррента |  |\n| 105 | Нужно настроить автоплатежи по Maestro — для этого обратитесь в поддержку |  |\n| 106 | Карта не поддерживает 3DS проверку. Попробуйте другую карту |  |\n| 107 | Неверно введен CardId. Проверьте, что такая карта была ранее привязана |  |\n| 108 | Оплата разрешена только по 3DS картам. Попробуйте другую карту |  |\n| 109 | Не найден dsTranId для сессии |  |\n| 110 | Не передан cres |  |\n| 111 | Передан некорректный cres |  |\n| 116 | Недостаточно средств на карте. |  |\n| 119 | Превышено допустимое количество запросов авторизации операции |  |\n| 120 | Попробуйте повторить попытку позже |  |\n| 123 | Попробуйте повторить попытку позже |  |\n| 125 | Попробуйте повторить попытку позже |  |\n| 191 | Некорректный статус договора, обратитесь к вашему менеджеру |  |\n| 201 | Поле PaymentId не должно быть пустым |  |\n| 201 | Поле paymentMethod не должно быть пустым |  |\n| 201 | Поле paymentObject не должно быть пустым |  |\n| 201 | Поле measurementUnit не должно быть пустым |  |\n| 202 | Терминал заблокирован |  |\n| 203 | Параметры запроса не должны быть пустыми |  |\n| 204 | Неверный токен. Проверьте пару TerminalKey/SecretKey |  |\n| 205 | Неверный токен. Проверьте пару TerminalKey/SecretKey | Указанный терминал не найден |\n| 206 | Email не может быть пустым |  |\n| 207 | Параметр DATA превышает максимально допустимый размер |  |\n| 208 | Наименование ключа из параметра DATA превышает максимально допустимый размер |  |\n| 209 | Значение ключа из параметра DATA превышает максимально допустимый размер |  |\n| 210 | Размер поля TerminalKey должен быть от {min} до {max} |  |\n| 211 | Неверный формат IP |  |\n| 212 | Размер поля OrderId должен быть от {min} до {max} |  |\n| 213 | Размер поля Description должен быть от {min} до {max} |  |\n| 214 | Поле Currency должно быть меньше или равно {value} |  |\n| 215 | Размер поля PayForm должен быть от {min} до {max} |  |\n| 216 | Размер поля CustomerKey должен быть от {min} до {max} |  |\n| 217 | Поле PaymentId числовое значение должно укладываться в формат (<{integer} цифр>.<{fraction} цифр>) |  |\n| 218 | Значение PAN не является числовым |  |\n| 219 | Неверный срок действия карты |  |\n| 220 | Размер поля CardHolder должен быть от {min} до {max} |  |\n| 221 | Значение CVV не является числовым |  |\n| 222 | Поле CardId числовое значение должно укладываться в формат (<{integer} цифр>.<{fraction} цифр>) |  |\n| 223 | Поле RebillId числовое значение должно укладываться в формат (<{integer} цифр>.<{fraction} цифр>) |  |\n| 224 | Неверный формат Email |  |\n| 225 | Неверный формат Email |  |\n| 226 | Размер поля Email должен быть от {min} до {max} |  |\n| 227 | Размер поля Phone должен быть от {min} до {max} |  |\n| 228 | Размер поля MD должен быть от {min} до {max} |  |\n| 229 | Размер поля PaRes должен быть от {min} до {max} |  |\n| 230 | Размер поля Code должен быть от {min} до {max} |  |\n| 231 | Не найден идентификатор карты |  |\n| 233 | Размер поля CardId должен быть от {min} до {max} |  |\n| 234 | Размер поля PAN должен быть от {min} до {max} |  |\n| 235 | Размер поля RebillId должен быть от {min} до {max} |  |\n| 236 | Размер поля Token должен быть от {min} до {max} |  |\n| 237 | Размер поля PaymentId должен быть от {min} до {max} |  |\n| 238 | Размер поля ExpDate должен быть от {min} до {max} |  |\n| 239 | Размер поля CVV должен быть от {min} до {max} |  |\n| 240 | Поле Amount числовое значение должно укладываться в формат (<{integer} цифр>.<{fraction} цифр>) |  |\n| 241 | Поле Currency должно быть больше или равно {value} |  |\n| 242 | Размер поля InfoEmail должен быть от {min} до {max} |  |\n| 243 | Ошибка шифрования карточных данных |  |\n| 244 | Ошибка сопоставления карточных данных |  |\n| 245 | Параметр AddCard не сопоставлен |  |\n| 246 | Параметр SendEmail не сопоставлен |  |\n| 247 | Параметр Amount не сопоставлен |  |\n| 248 | Параметр CVV не сопоставлен |  |\n| 249 | Параметр Currency не сопоставлен |  |\n| 250 | Параметр DATA не сопоставлен |  |\n| 251 | Неверная сумма. Сумма должна быть больше или равна {value} копеек |  |\n| 252 | Срок действия карты истек |  |\n| 253 | Валюта {value} не разрешена для данного терминала |  |\n| 254 | Дополнительные возможности отключены |  |\n| 255 | Платеж не найден |  |\n| 256 | Указан некорректный тип безопасной сделки | Указан некорректный тип безопасной сделки |\n| 257 | Некорректное значение признака последней выплаты. Используйте значения true или false | Некорректное значение признака последней выплаты. Используйте значения true или false |\n| 258 | Неверный параметр Ean13 |  |\n| 259 | Параметр EncryptedPaymentData не сопоставлен |  |\n| 260 | Максимальная длина номера телефона 30 символов |  |\n| 261 | Параметр Source не сопоставлен |  |\n| 262 | Истек срок действия родительского платежа |  |\n| 308 | Сумма всех позиций в чеке должна равняться сумме всех видов оплаты |  |\n| 309 | Поле Receipt не должно быть пустым |  |\n| 310 | Дробная часть параметра Quantity не должна быть более {value} знаков |  |\n| 310 | Целая часть параметра Quantity не должна быть более {value} знаков |  |\n| 311 | Ошибка регистрации чека в Receipt Service |  |\n| 312 | Ошибка получения чека из Receipt Service |  |\n| 313 | Ошибка создания организации в Receipt Service |  |\n| 314 | Ошибка создания кассы в Receipt Service |  |\n| 315 | Касса не найдена |  |\n| 316 | Максимальная длина номера телефона 19 символов |  |\n| 317 | Неверное значение поля agentSign |  |\n| 318 | Поле AgentSign не должно быть пустым |  |\n| 319 | Поле SupplierInfo не должно быть пустым |  |\n| 320 | Поле Inn в объекте SupplierInfo не должно быть пустым |  |\n| 321 | Поле Receipts не должно быть пустым |  |\n| 322 | Передана некорректная подпись |  |\n| 323 | Amount не совпадают |  |\n| 324 | Указанный тип отмены не может быть выполнен по операции |  |\n| 325 | Транзакция не найдена |  |\n| 326 | Неверный amount |  |\n| 327 | \"Терминал не поддерживает C2C переводы или не передан Route=\"\"C2C\"\" для C2C терминала\" |  |\n| 328 | Должны присутствовать данные для списания и данные для пополнения |  |\n| 329 | Email или Phone обязательны при передаче чека |  |\n| 330 | Сумма в запросе больше чем в оригинальной транзакции |  |\n| 331 | Неверный терминал |  |\n| 332 | Поле Fee в объекте Shops должно быть больше или равно 0 |  |\n| 333 | Поле Amount в объекте Shops должно быть больше или равно 1 |  |\n| 334 | Суммы в чеке и в платеже не совпадают |  |\n| 335 | OrderId {value} не найден для TerminalKey {value} |  |\n| 381 | Возможна привязка только резидентных карт |  |\n| 382 | Возможна привязка только нерезидентных карт |  |\n| 383 | Поле markProcessingMode должно быть заполнено для маркированных товаров |  |\n| 383 | Поле markCode должно быть заполнено для маркированных товаров |  |\n| 383 | Поле sectoralItemProps должно быть заполнено для маркированных товаров |  |\n| 383 | Поле markQuantity должно быть заполнено для маркированных товаров |  |\n| 383 | Поле {value} для маркированных товаров должно принимать значение: {value} |  |\n| 383 | markCode.value имеет некорректное значение |  |\n| 383 | numerator и denominator должны быть больше 0 |  |\n| 383 | numerator должен быть строго меньше denominator |  |\n| 383 | Для версии кассы ФФД 1.2 объекты AgentData и SupplierInfo должны быть переданы в Items |  |\n| 384 | Для C2C запрещено проводить рекуррент по данной ПС | Для C2C запрещено проводить рекуррент по данной ПС |\n| 385 | Поле markQuantity передается только для маркированных товаров |  |\n| 385 | Поле markProcessingMode передается только для маркированных товаров |  |\n| 386 | markQuantity заполняется только для дробного расчета за штучный маркированный товар |  |\n| 401 | Внутренняя ошибка системы |  |\n| 402 | Повторите попытку позже |  |\n| 403 | Превышен лимит на количество пополнений в месяц |  |\n| 404 | Превышен лимит на сумму пополнения через бесконтактные сервисы |  |\n| 405 | Превышен лимит на сумму пополнения по виртуальной карте |  |\n| 406 | Превышен лимит на сумму пополнения в месяц через мобильное приложение |  |\n| 407 | Не найдено |  |\n| 410 | Данный тип перевода для терминала не доступен |  |\n| 411 | Сертификат не найден |  |\n| 412 | Истек срок действия сертификата |  |\n| 413 | Сертификат заблокирован |  |\n| 414 | Сертификат уже сохранен для данного терминала |  |\n| 415 | Дата начала срока действия сертификата еще не наступила |  |\n| 416 | Некорректное значение параметра SetStatus |  |\n| 417 | Ошибка обработки сертификата |  |\n| 419 | Параметр account объекта DATA должен быть заполнен корректно для MCC: 6050/6051 |  |\n| 500 | Добавление карты к данному терминалу запрещено |  |\n| 501 | Терминал не найден |  |\n| 502 | Карта по requestKey не найдена |  |\n| 503 | CustomerKey не найден |  |\n| 504 | Не удалось провести платеж при привязке карты |  |\n| 505 | Не удалось привязать карту. Внутренняя ошибка |  |\n| 506 | Карта добавлена в черный список |  |\n| 507 | Карта не поддерживает 3DS проверку. Попробуйте другую карту |  |\n| 508 | Неверный номер карты |  |\n| 509 | Не удалось выполнить отмену при привязке карты |  |\n| 510 | Карта уже привязана к переданному CustomerKey |  |\n| 511 | Проверка 3DS не пройдена |  |\n| 512 | Не удалось выполнить запрос на проверку 3DS |  |\n| 513 | Не удалось выполнить платеж после прохождения 3DS |  |\n| 514 | Введена неверная сумма холдирования |  |\n| 515 | Внутренняя ошибка |  |\n| 600 | Карта добавлена в черный список |  |\n| 600 | Интернет-магазин отклонил операцию по данной карте. Обратитесь в интернет-магазин для выяснения причин отказа в платеже |  |\n| 601 | Разрешены операции только по MasterCard |  |\n| 603 | Превышено количество попыток оплаты с данной карты |  |\n| 604 | Обратитесь в поддержку, чтобы уточнить детали |  |\n| 619 | Отсутствуют обязательные данные отправителя | Не переданы персональные данные отправителя для операции emoney2card более 15000 руб. |\n| 620 | Проверьте сумму — она не может быть равна 0 | Сумма операции не может быть равна 0 |\n| 623 | Выплата по этому заказу уже прошла | Запрещено проводить платеж с OrderId для которого уже есть успешный платеж |\n| 632 | Превышен лимит на сумму операции | Лимит на сумму пополнения emoney2card. См. лимиты |\n| 633 | Превышен лимит на количество переводов в день по иностранным картам | Лимит на кол-во пополнений emoney2card для карт эмитированных нерезидентами РФ за 1 отчетный день |\n| 634 | Превышен лимит на сумму переводов по номеру карты в месяц | Лимит на сумму пополнения emoney2card по номеру карты одного получателя в отчетный месяц |\n| 637 | Не хватает данных получателя или отправителя для выплаты на иностранную карту. Проверьте заполнение | Отсутствуют персональные данные получателя/отправителя при переводе на иностранную карту |\n| 642 | Проверьте номер карты | Карта не прошла проверку по алгоритму Луна |\n| 648 | Магазин заблокирован или еще не активирован. Обратитесь в поддержку, чтобы уточнить детали |  |\n| 650 | Сообщите покупателю, чтобы попробовал оплатить еще раз. Если ошибка повторится — обратитесь в поддержку |  |\n| 651 | Не получилось совершить платеж. Свяжитесь с поддержкой | Передаваемый Request_Id не найден |\n| 702 | Поле maid и saav должно быть задано в настройках терминала |  |\n| 703 | Обратитесь в поддержку, чтобы уточнить детали |  |\n| 800 | Комиссия не найдена |  |\n| 903 | Повторите попытку позже |  |\n| 914 | Платеж не найден |  |\n| 926 | Сделка уже закрыта | Сделка уже закрыта |\n| 927 | Сделка не найдена | Сделка не найдена |\n| 991 | Для использования 3dsType необходимо установить 3ds терминал | Для использования TDS роутинга необходимо пользоваться ТДС терминалом |\n| 999 | Попробуйте повторить попытку позже |  |\n| 1001 | Свяжитесь с банком | Свяжитесь с банком, выпустившим карту, чтобы провести платеж |\n| 1003 | Неверный магазин | Неверный номер магазина. Идентификатор магазина недействителен |\n| 1004 | Банк, который выпустил карту, считает платеж подозрительным |  |\n| 1005 | Платеж отклонен банком, выпустившим карту | Платеж отклонен банком, выпустившим карту |\n| 1006 | Платеж не прошел | Свяжитесь с банком, выпустившим карту, чтобы провести платеж |\n| 1007 | Банк, который выпустил карту, считает платеж подозрительным |  |\n| 1008 | Банк, который выпустил карту, отклонил платеж  |  |\n| 1012 | Банк, который выпустил карту, отклонил платеж  |  |\n| 1013 | Банк, который выпустил карту, отклонил платеж — сумма превышает лимит по карте | Сумма превышает лимит платежа вашего банка. Воспользуйтесь другой картой или обратитесь в банк |\n| 1014 | Карта недействительна | Неправильные реквизиты — проверьте их или воспользуйтесь другой картой |\n| 1015 | Неверный номер карты | Неверный номер карты |\n| 1017 | Попробуйте снова или свяжитесь с банком, выпустившим карту | Попробуйте снова или свяжитесь с банком, выпустившим карту |\n| 1018 | Неизвестный статус платежа |  |\n| 1019 | Банк, который выпустил карту, отклонил платеж — сумма превышает лимит по карте |  |\n| 1030 | Повторите попытку позже. | Не получилось оплатить. Попробуйте еще раз |\n| 1033 | Истек срок действия карты |  |\n| 1034 | Попробуйте повторить попытку позже | Не получилось оплатить. Воспользуйтесь другой картой или обратитесь в банк, выпустивший карту |\n| 1038 | Превышено количество попыток ввода ПИН-кода — попробуйте снова или обратитесь в банк, выпустивший карту |  |\n| 1039 | Платеж отклонен — счет не найден |  |\n| 1041 | Карта утеряна | Карта утеряна. Свяжитесь с банком, выпустившим карту |\n| 1043 | Банк, который выпустил карту, считает платеж подозрительным |  |\n| 1051 | Недостаточно средств на карте. | Не получилось оплатить. На карте недостаточно средств |\n| 1053 | Платеж отклонен — счет не найден |  |\n| 1054 | Истек срок действия карты | Неправильные реквизиты — проверьте их или воспользуйтесь другой картой |\n| 1055 | Неверный ПИН |  |\n| 1057 | Покупатель запретил такие операции для своей карты |  |\n| 1058 | Покупатель запретил такие операции для своей карты |  |\n| 1059 | Банк, который выпустил карту, считает платеж подозрительным |  |\n| 1061 | Покупатель превысил лимит платежей по своей карте |  |\n| 1062 | Банк, который выпустил карту, отклонил платеж |  |\n| 1063 | Банк, который выпустил карту, считает платеж подозрительным |  |\n| 1064 | Проверьте сумму |  |\n| 1065 | Покупатель превысил лимит платежей по своей карте |  |\n| 1071 | Токен просрочен | Токен просрочен |\n| 1075 | Покупатель оплатил максимум раз по своей карте за день |  |\n| 1076 | Не получилось отменить резервирование. Обратитесь в поддержку, чтобы уточнить детали |  |\n| 1077 | Коды не совпадают — попробуйте снова |  |\n| 1078 | Данный тип операции не поддерживается картой |  |\n| 1080 | Плательщик ввел неверный срок действия карты |  |\n| 1082 | Неверный CVV | Неправильные реквизиты — проверьте их или воспользуйтесь другой картой |\n| 1085 | Операция успешна | Успех |\n| 1086 | Платеж отклонен — не получилось подтвердить ПИН-код |  |\n| 1088 | Банк, который выпустил карту, отклонил платеж |  |\n| 1089 | Попробуйте повторить попытку позже | Не получилось оплатить. Попробуйте еще раз или обратитесь в банк, выпустивший карту |\n| 1091 | Технические работы в банке, который выпустил карту |  |\n| 1092 | Банк, который выпустил карту, отклонил платеж |  |\n| 1093 | Банк, который выпустил карту, считает платеж подозрительным |  |\n| 1094 | Банк, который выпустил карту, считает платеж подозрительным |  |\n| 1096 | Системная ошибка | Системная ошибка |\n| 1099 | Способ оплаты отключен |  |\n| 1116 | Некорректная сумма выдачи | Сумма баланса меньше суммы переданной в операции выдачи |\n| 1119 | Параметр account объекта DATA должен быть заполнен корректно для MCC: 6050/6051 | Передан некорректный номер кошелька |\n| 1125 | Некорректное значение OperationInitiatorType. Должно быть одно из списка\n| 1126 | Несопоставимые значения rebillId или Recurrent с переданным значением OperationInitiatorType\n| 1201 | Обратитесь в поддержку, чтобы уточнить детали |  |\n| 1202 | Сумма платежа превышает лимит по разовой операции в этом магазине. Обратитесь в поддержку, чтобы уточнить детали |  |\n| 1203 | Сумма платежа превышает лимит по разовой операции или количеству операций в этом магазине. Обратитесь в поддержку, чтобы уточнить детали |  |\n| 1204 | Достигнут лимит по суточному обороту. Чтобы изменить лимит, обратитесь в поддержку |  |\n| 1205 | Магазин не принимает карты этой страны. Обратитесь в поддержку, чтобы уточнить детали |  |\n| 1207 | Сообщите покупателю, чтобы попробовал оплатить еще раз. Если ошибка повторится — обратитесь в поддержку |  |\n| 1217 | Воспользуйтесь другой картой или обратитесь к продавцу | Воспользуйтесь другой картой или обратитесь к продавцу |\n| 1218 | Воспользуйтесь другой картой или обратитесь к продавцу | Воспользуйтесь другой картой или обратитесь к продавцу |\n| 1235 | Для карт «Мир» нужно настроить подтверждение платежей по СМС 3DS 2.0. Обратитесь в поддержку, чтобы уточнить детали |  |\n| 1316 | Запрещено проведение авторизации | Запрещено проведение авторизации с использованием 3DS |\n| 1502 | Недостаточно средств на счете компании | Insufficient funds |\n| 1503 | Некорректный статус счета, обратитесь в поддержку | Invalid account status |\n| 2014 | Не пройдена идентификация 3DS |  |\n| 2015 | Mерчант с таким именем и паролем не найден. |  |\n| 2200 | Превышено допустимое количество запросов авторизации операции |  |\n| 3001 | Оплата через QrPay недоступна | Ошибка возникает, если для терминала не активирован способ оплаты СБП. Сделать это можно в личном кабинете интернет-эквайринга, в настройках магазина, во вкладке Способы оплаты |\n| 3002 | Недостаточный баланс счёта для отмены | Ошибка возникает, если на расчетном счете магазина недостаточно средств для возврата. Пополните счет и повторите попытку |\n| 3003 | Отмена платежа в связи с мошенничеством |  |\n| 3004 | Способ СБП недоступен для магазина |  |\n| 3005 | Оплата через СБП не доступна |  |\n| 3006 | Банк получателя не может принять возврат. Выберите другой банк |  |\n| 3007 | Отказ в проведении операции от СБП |  |\n| 3008 | У получателя нет расчетного счета в этом банке. Выберите другой банк |  |\n| 3009 | Отказ в проведении операции от СБП или банка получателя |  |\n| 3010 | У получателя нет расчетного счета в этом банке. ФИО некорректное |  |\n| 3011 | Оплата через E2C недоступна |  |\n| 3012 | Привязка счета не найдена |  |\n| 3013 | Рекуррентные платежи недоступны |  |\n| 3014 | AccountToken не найден |  |\n| 3015 | Неверный статус AccountToken |  |\n| 3016 | Невозможно создать QR |  |\n| 3017 | Переданное значение RedirectDueDate вне допустимого диапазона |  |\n| 3018 | Список банков не найден |  |\n| 3019 | Не включен СБП в личном кабинете |  |\n| 3020 | К данному телефону и банку уже создана привязка. Выберите другой банк | |\n| 3021 | Привязка по номеру телефона недоступна на данном терминале |  |\n| 3022 | Превышено доступное количество запросов для привязки. Попробуйте позже |  |\n| 3023 | Привязка невозможна |  |\n| 3024 | Не удалось найти банк по номеру телефона. Выберите другой банк |  |\n| 3026 | Запрос по привязке не идентифицирован |  |\n| 3028 | Банк покупателя отклонил возврат. Попросите покупателя обратиться туда или выберите другой его банк |  |\n| 3029 | Слишком много неудачных попыток за час. Попробуйте снова через час или выберите другой банк покупателя | По требованиям НСПК в час допустимо проводить не более 1 попытки возврата по операции |\n| 3030 | Слишком много неудачных попыток за сутки. Попробуйте еще раз завтра или выберите другой банк покупателя | По требованиям НСПК в день допустимо проводить не более 5 попыток возврата по операции |\n| 3031 | Банк покупателя отклонил возврат. Попросите покупателя обратиться туда или выберите другой его банк |  |\n| 3032 | Слишком много неудачных попыток за час. Попробуйте снова через час или выберите другой банк получателя |  |\n| 3033 | Слишком много неудачных попыток за сутки. Попробуйте еще раз завтра или выберите другой банк получателя |  |\n| 3034 | Банк получателя отклонил выплату. Попросите получателя обратиться туда или выберите другой его банк |  |\n| 3035 | Банк получателя отклонил выплату. Попросите получателя обратиться туда или выберите другой его банк |  |\n| 3036 | Возникла ошибка. Не получилось сделать выплату |  |\n| 3038 | Возврат средств через СБП доступен только со счетом в T-Bank. Измените счет в настройках вашего магазина |  |\n| 3101 | Оплата по MirPay недоступна для магазина |  |\n| 3102 | DeepLink для оплаты по MirPay не создан |  |\n| 8001 | Операция запрещена для рассрочки |  |\n| 8002 | Tinkoff Credit Broker недоступен. Повторите попытку позже |  |\n| 8003 | Операция запрещена для покупки долями |  |\n| 8004 | BNPL недоступен. Повторите попытку позже |  |\n| 9001 | Попробуйте повторить попытку позже |  |\n| 9999 | Внутренняя ошибка системы |  |\n| - | Количество товара должно быть больше нуля |  |\n| - | Максимальная длина rawcode 223 символов |  |\n| - | Касса принимает значение markCode только с типом rawcode |  |\n| - | Для данной кассы ожидалось одно из itemCode или markСode |  |\n| - | Для данной кассы ожидалось либо itemCode, либо markCode |  |\n| - | Для данной кассы предусмотрена передача только markСode |  |"
		},
		{
			"name": "Типовые ошибки Онлайн-кассы",
			"description": "| Ошибка | Решение | Онлайн-касса |\n|---|---|---|\n|Состояние чека не найдено. Попробуйте позднее|Данная ошибка возникает на стороне кассы. Нужно обратиться в поддержку Вашей онлайн-кассы и уточнить причины данной ошибки в чеке|На всех кассах|\n|Сервер не смог обработать входной чек|Данная ошибка возникает на стороне кассы. Нужно обратиться в поддержку Вашей онлайн-кассы и уточнить причины данной ошибки в чеке|На всех кассах|\n|Код ошибки, который начинается с \"<!DOCTYPE html\" и так далее|Данная ошибка возникает на стороне кассы. Нужно обратиться в поддержку Вашей онлайн-кассы и уточнить причины данной ошибки в чеке|Orange Data|\n|Произошла ошибка при фискализации, обратитесь в службу технической поддержки|Данная ошибка возникает на стороне кассы. Нужно обратиться в поддержку Вашей онлайн-кассы и уточнить причины данной ошибки в чеке|На всех кассах|\n|Если чек зависает в очереди на фискализацию (С интеграцией через aQsi)|Нужно исправить ошибку самостоятельно или через поддержку Акси.<br>Инструкция:<br>• в личном кабинете Акси вкладка Настройки / Интеграции / Фискализация чеков на aQsi 5 из Оранж Дата / сгенерировать токен (ключ) / скопируйте токен;<br>• открыть ЛК Оранж Дата / раздел Услуги / вставьте токен(ключ) / сформируйте счет без ошибки.<br>Инструкция доступна по [ссылке](https://aqsi.ru/partner-support/vozmozhnyie-oshibki-i-sposobyi-ih-resheniya).|Orange Data|\n|REGISTRATION_REQUEST_FAILED — Ошибка в запросе. Причины могут быть разные|Основные причины такой ошибки в том, что вы не передали версию ФФД 1.2 в своем запросе, при том, что терминал и касса настроены на ФФД 1.2|На всех кассах|\n|Неизвестная организация|Онлайн-касса не зарегистрирована. Вам необходимо обратиться в кассовый сервис и завершить интеграцию|На всех кассах|\n|Сумма не наличных оплат превышает сумму чека|Ошибка заключается в том, что Вы в запросе передаете в одной или нескольких позициях чека такие параметры, как price (Цена) и quantity (Количество), что их произведение не равняется amount (Сумма) в данной позиции. С такой ошибкой необходимо сделать чек коррекции по этой операции в ЛК кассы|На всех кассах|\n|Код товарной номенклатуры имеет неизвестный префикс|Неверный код товара (Параметр — EAN13). Вам нужно исправить параметр \"EAN13\" в своем запросе (Для уточнения можно обратиться в поддержку Вашей кассы). С такой ошибкой необходимо сделать чек коррекции по этой операции в ЛК кассы.|На всех кассах|\n|Указанная версия ФФД не соответствует режиму обработки документов ФФД 1.2|Необходимо проверить версию ФФД на Вашем терминале (В ЛК ИЭ\\Раздел Онлайн-кассы) и в запросе. Если версии не совпадают, нужно исправить версию на актуальную в запросе или в настройках онлайн-кассы в ЛК ИЭ|На всех кассах|\n|Ошибка при закрытии документа: Некорректное значение параметров команды ФН|Исчерпан ресурс ФН (Вам надо обращаться в онлайн-кассу)|На всех кассах|\n|Не удалось перейти в режим регистрации после закрытия смены: Смена превысила 24 часа|Исчерпан ресурс ФН (Вам надо обращаться в онлайн-кассу)|На всех кассах|\n|Если поле статуса чека пустое|Ошибка из-за того, что Вы отправляете запросы на версию ФФД 1.2, а касса и терминал настроены на версию ФФД 1.05. Вам нужно отправлять запросы на версию ФФД 1.05 или переключить настройки кассы и магазина на ФФД 1.2. С такой ошибкой необходимо сделать чек коррекции по этой операции в ЛК кассы.|На всех кассах|\n|AuthWrongUserOrPassword|Данная ошибка возникает на стороне кассы. Нужно обратиться в поддержку Вашей онлайн-кассы и уточнить причины данной ошибки в чеке|Ekomkassa|\n|Неизвестная ошибка обработки|У Вас не доступна онлайн-касса. Рекомендуем обратиться в поддержку онлайн-кассы|Бизнес.Ру|\n|Некорректный запрос. (Ошибка в поле items: Количество элементов в поле receipt.items не может превышать 100.)|Необходимо сделать чек коррекции в личном кабинете кассы.<br>Ошибка из-за того, что Вы передали более 100 позиций в чеке. В таком случае для будущих операций рекомендуем делить платеж на 2 и более|Бизнес.Ру|\n|Не найдена интеграция с платежной системой|Указали неправильные данные для Онлайн-кассы в ЛК T-Банка. Логин и пароль нужно взять из личного кабинета https://check.business.ru/. Раздел \"Интеграции\" — Т‑Банк. Там указан логин и придуманный пользователем пароль. Также данные можно уточнить в поддержке приложения.|Бизнес.Ру|\n|Неизвестная организация|Проблема с настройкой интеграции на стороне кассы. Рекомендуем обратиться в поддержку Вашей кассы|Orange Data и aQsi online|\n|Очередь документов переполнена|Причиной может быть выключенная касса aQsi или отсутствие сети интернет. Именно по этой причине все чеки которые поступают по API, встают в очередь на фискализацию в кассовом аппарате aQsi. Чем дольше касса не в сети, тем больше переполнение чеков на фискализацию.<br>Вам нужно обратиться в поддержку кассы.|Orange Data|\n|В группе нет ни одного устройства|Такая ошибка встречается, если у Вас не прописана/неверно прописана группа касс в настройках кассы в ЛК ИЭ\\Раздел онлайн-кассы. Группу можно узнать в кассовом сервисе и внести изменения в ЛК ИЭ (В 90% случаев надо скорректировать на aQsi)|Orange Data|\n|Нет оплаченных ККМ для обработки чека|Данная ошибка возникает на стороне кассы. Нужно обратиться в поддержку Вашей онлайн-кассы и уточнить причины данной ошибки в чеке|CloudKassir|\n|Терминал заблокирован|Ошибка происходит на стороне кассы. Вам нужно обратиться в поддержку кассы и уточнить причины блокировки|CloudKassir|\n|Нет касс без признака БСО для организации|(У партнера настроена касса с включенным параметром \"Только для печати БСО\"). Чеки, которые направляются на формирование в кассу, должны иметь признак БСО. По чеку, который находится в ошибке, означает, что чек был отправлен без признака БСО.<br>Решение:<br>Нужно отключить передачу БСО на стороне кассы.|CloudKassir|\n|Код группы, указанный в запросе, не соответствует токену|Запрос и терминал настроены на ффд 1.05. Ошибка возникает из-за того, что на стороне кассы настроено ффд 1.2 (Или наоборот. Несоответствие версий). Нужно скорректировать версии ФФД на стороне ИЭ и кассы.|На всех кассах|\n|CLIENT_INFO_EMAIL_AND_PHONE_NOT_FOUND|Ошибка происходит из-за того, что Вы не передаете в запросе ФФД 1.2, при том, что касса и терминал настроены на эту версию|На всех кассах|\n|Неизвестная группа|На терминале установлена некорректная группа касс. Вам нужно уточнить корректную группу касс в поддержке онлайн-кассы и изменить ее в настройках кассы в ЛК ИЭ|Orange Data и aQsi online|\n|Таймаут сообщения в очереди|Данная ошибка возникает на стороне кассы. Нужно обратиться в поддержку Вашей онлайн-кассы и уточнить причины данной ошибки в чеке|АТОЛ|\n|Некорректное значение параметров команды ФН|Вам нужно уточнить причины ошибки в поддержке кассы. Скорее всего Вые передаете некорректно СНО (На стороне кассы в настройках указана другая СНО)|АТОЛ|\n|Во время регистрации чека выяснилось, что в группе нет активных касс|Вам необходимо активировать тариф в ОФД Платформа. Нужно обратиться к тех. поддержке ОФД Платформа или самостоятельно активировать тариф в личном кабинете ОФД|АТОЛ|\n|Пользователь заблокирован|Ошибка возникает на стороне кассы. Скорее всего касса заблокировала Вас из-за того, что их услуги не были оплачены<br>Уточнение можно получить в поддержке кассы|АТОЛ|\n|Ошибка обмена с ФН на уровне интерфейса I2C|Данная ошибка произошла из-за того, что ФН не был доступен, могли возникнуть технические неисправности в самой кассе. С такой ошибкой необходимо сделать чек коррекции по этой операции в ЛК кассы|АТОЛ|\n|Недопустимое сочетание реквизитов|Данная ошибка возникает из-за того, что в запросе передается признак определённого агента, а на кассе данный признак не установлен<br>Клиенту необходимо подать заявку на изменение данных в ЛК АО<br>1. Зайти в ЛК АТОЛ Онлайн => раздел \"Изменение данных\".<br>2. Далее переходите на 3 шаг и поставить галочку \"нужный агент\".<br>3. Сохранить и отправить заявку администратору.|АТОЛ|\n|Операция \"sell\" не поддерживается|У Вас приостановлена услуга фискализации. Необходимо пополнить баланс и продлить действие услуги<br>Вам нужно обращаться в кассу для получения подробностей.|КОМТЕТ Касса|\n|WrongLoginOrPassword|Неправильный логин или пароль<br>Вам нужно уточнить интеграционные данные от кассы и ввести их в нашем ЛК ИЭ\\Магазины\\Онлайн-касса повторно|Ekomkassa|\n|ErrorIncomingMissingToken|Нужно проверить актуальность логина и пароля от кассы, ошибка может возникать либо в случае смены пароля в ЛК кассы, но не поменяли в настройках интеграции (В ЛК ИЭ), либо в случае когда в момент отправки запроса ЛК кассы Вы был заблокированы.  Для уточнений рекомендуем обратиться в поддержку кассы и сделать чек коррекции по этой операции|Ekomkassa|\n|Retry limit equals 20 was exceeded|Данная ошибка может быть вызвана разными причинами, например: недоступность кассы, как правило чеки с данной ошибкой автоматически обрабатываются через какое-то время, буквально означает что API не получает от кассы статус отправленного ранее запроса на чек. Если чек не сформируется в течение суток, Вам нужно сделать чек коррекции в ЛК кассы|Ekomkassa|\n|Kkm is busy at the moment|Ошибка появляется на интегрированных кассах Эвотор, означает что касса перегружена задачами, обычно такие ошибки автоматически исправляет сервер, автоматически делает новый запрос через небольшой интервал времени, до тех пор пока касса не примет чек. Если чек не сформируется в течение суток, Вам нужно сделать чек коррекции в ЛК кассы|Ekomkassa|\n|Операция невозможна, недостаточно питания|Ошибка возникает на интегрированных кассах Эвотор, сервер автоматически перезапускает транзакцию, через определенный период времени, обычно ошибка возникает когда на кассу Эвотора, идет слишком много запросов одновременно. Если чек не сформируется в течение суток, Вам нужно сделать чек коррекции в ЛК кассы|Ekomkassa|\n|Session time expired|Ошибка из-за того, что на кассе не переоткрылась смена. Данная ошибка автоматически исправляется кассовым сервером, запрос на чек перезапускается через определенный интервал времени.​ Если этого не произошло в течение суток, Вам нужно сделать чек коррекции в ЛК кассы.|Ekomkassa|\n|Команда не реализуется в данном режиме ККТ|Ошибка возникает в случае, если касса занята другим процессом, который не дает работать с ФН, в такой ситуации сервер кассы автоматически делает перезапуск чека через определенный интервал времени. Для получения более подробной информации рекомендуем обратиться в поддержку кассы|Ekomkassa|\n|Авторизация невозможна. Неверные учетные данные|По этой ошибке возможны 2 варианта решения:<br>1. Ошибка связана в тем, что при подключении кассы Ferma Вы указали неверные данные в ЛК ИЭ.<br>2. Также такая ошибка возникает, если у Вас версия ФФД 1.2 на терминале и кассе, но Вы не передаете версию ФФД 1.2 в запросе.|Ferma|\n|По кассе Ferma не завершена регистрация в ФНС|Нужно завершить регистрацию кассы в Личном кабинете Ferma или обратиться в поддержку OFD.RU по адресу ofd@ofd.ru или по номеру 84955409911|Ferma|\n|Не оплачена касса Ferma|Вам нужно оплатить кассу для восстановления работы: Продлите услугу в Личном кабинете Ferma или обратитесь в поддержку OFD.RU по адресу ofd@ofd.ru или по номеру 84955409911|Ferma|\n|Таймаут сообщения в очереди|ККТ отключена, или на ПК клиента не запущено приложение для фискализации чеков. Точную причину ошибки рекомендуем уточнить в поддержке кассы|На всех кассах|\n|Нет касс соответствующих переданному типу платежного агента|Ошибка говорит о том, что Вы передаете такой тип агента, который не настроен на стороне кассы или отличается от него. С такой ошибкой необходимо сделать чек коррекции по этой операции в ЛК кассы|На всех кассах|\n|В группе нет ни одного устройства с требуемым признаком агента|Ошибка говорит о том, что Вы передаете такой тип агента, который не настроен на стороне кассы или отличается от него. С такой ошибкой необходимо сделать чек коррекции по этой операции в ЛК кассы|На всех кассах|\n|Неизвестная ошибка|Данная ошибка возникает на стороне кассы. Нужно обратиться в поддержку Вашей онлайн-кассы и уточнить причины данной ошибки в чеке|CloudKassir|\n|Network error|Данная ошибка возникает на стороне кассы. Нужно обратиться в поддержку Вашей онлайн-кассы и уточнить причины данной ошибки в чеке|На всех кассах|\n|Непредвиденная ошибка|Данная ошибка возникает на стороне кассы. Нужно обратиться в поддержку Вашей онлайн-кассы и уточнить причины данной ошибки в чеке|Ferma|"
		},
		{
			"name": "Тестовые карты",
			"description": "Тестовые карты нужны как для прохождения тест-кейсов, так и совершения тестовых платежей. Это два разных процесса, в каждом из которых используются разные данные тестовых карт, а именно:\n\n* для прохождения тест-кейсов используется тестовый терминал (с приставкой DEMO)\n<br> Запросы с него нужно отправлять на боевую среду (https://securepay.tinkoff.ru/v2) и использовать тестовые карты из тест-кейса \n<br> Данные карт для тест-кейсов можно увидеть в личном кабинете. Для этого нужно выбрать раздел «Магазины» — «Терминалы» — «Тестовый» — «Тестировать». При выборе определенного тест-кейса появится информация с данными карты.\n\n* для совершения тестовых платежей используется боевой терминал (без приставки DEMO) \n<br> Запросы с него нужно отправлять на тестовую среду (https://rest-api-test.tinkoff.ru/v2) и использовать тестовые карты, указаные ниже\n\n<details><summary><b>Информация по добавлению IP в WL</b></summary>\n<br>\n\nДля пользования тестовой средой, нужно добавить ваш IP-адрес в White List тестовой среды. Для этого нужно прислать нам:\n1. ИНН.\n2. Наименование организации.\n3. IP-адрес (или пул адресов), с которого планируется обращение.\n4. Тестовый URL, по которому будете обращаться:\n\n* rest-api-test.tinkoff.ru — для запросов по API в рамках обычных WEB оплат/выплат;\n* rest-api-test.tinkoff.ru — для запросов в SDK и использования его API;\n* sm-register-test.tcsbank.ru — для регистрации точек агрегатором/маркетплейсом;\n</details>\n\n<details><summary><b>Информация по прохождению тест-кейсов</b></summary>\n<br>\n\n1. Для прохождения тест-кейса №1 в запросе Init НЕ нужно передавать Reсurrent = Y (recurrent:true), так как флаг рекуррентов не даст системе засчитать платеж как тест-кейс.\n\n2. При получении ошибки \"Ошибка нотификации: не получаем ответ ОК\" при прохождении тест-кейса №2 нужно проверить правильность передачи ответа на нотификацию. Верный ответ — 200:ОК.\n\n3. Для прохождения тест-кейсов в запросе Init нельзя передавать параметры, которые противоречат настройкам терминала\n> Например, на терминале установлена двухстадийная оплата, а в Init был передан pay_type = О (признак одностадийности). \nЕсли нужно поменять тип проведения платежа, то в ЛК ИЭ заходим на вкладку \"Магазины\", переходим в нужный и на вкладке \"Способы оплаты\" выбираем \"Списание средств\". Далее ставим отметку напротив нужного пункта: \"Списывать сразу (одностадийная)\" или \"Блокировать на счету покупателя (двустадийная)\".\n</details>\n\nВы можете использовать любой срок действия для тестовой карты. Можно произвести несколько тестовых привязок с разными сроками действия и потом с помощью метода GetCardList посмотреть, какие карты привязаны. Тестовые карты используются при проведении операций на тестовой среде\n \nОписание параметра **TransStatus** находится в описании параметров ответа cres (JSON/JWE cres объект)\n\nСписок тестовых карт для оплаты через протокол 3ds2.0 \n\n|Поведение карты|TransStatus|Описание|PAN|\n|---|---|---|---|\n|**Ошибка оплаты** <br />Ошибка при списании|Нет|-|2201382000000021 <br /> expDate: 12/25 <br /> cvv: 123|\n|**Ошибка оплаты** <br /> Недостаточно средств|Нет|-|2201382000000831 <br /> expDate: 12/25 <br /> cvv: 123|\n|**Успешная оплата**<br />3ds 2.0<br /> Frictionless Flow|Нет|**AUTHENTICATION_SUCCESSFUL**<br />Успешное прохождение аутентификации без ввода пароля|2201382000000013<br /> expDate: 12/25<br /> cvv: 123|\n|**Успешная оплата**<br />3ds 2.0<br /> Challenge flow|C|**CHALLENGE_REQURIED**<br />Требуется полное прохождение 3DS с редиректом на acsURL. Открытие формы для ввода одноразового пароля (OTP)|2201382000000047<br /> expDate: 12/25<br /> cvv: 123 <br /> Метод аутентификации на ACS: Static Passcode. Ввести верный пароль **1qwezxc**|\n|**Ошибка оплаты**<br /> 3ds2.0<br />Restricted|R |**ACCOUNT_VERIFICATION_REJECTED**<br />Эмитент отклонил аутентификацию|2201382000000005<br />expDate: 12/25<br />cvv: 123|\n**Ошибка оплаты**<br />Frictionless Flow<br /> Not Authenticated|N |**NOT_AUTHENTICATED**<br />Карта не поддерживает 3DS |2201382000000021<br />expDate: 12/25<br />cvv: 123|\n|**Успешная оплата**<br/> Card not Enrolled (Attempt)|A|**ATTEMPTS_PROCESSING_PERFORMED**<br/>Эмитент недоступен или не поддерживает 3DS v2.1. Платежная система разрешает провести Pay, но эмитент мог отклонить авторизацию|2201382000000039<br/>expDate: 12/25<br/>cvv: 123|\n\nСписок тестовых карт для оплаты без 3ds \n\n|Поведение карты|TransStatus|Описание|PAN|\n|---|---|---|---|\n|**Успешная оплата**|Нет|-|2200770239097761 <br /> expDate: 12/25 <br /> cvv: 123|\n\nКарты Mock-сервиса (если не работает тестовая карта)\n\n|Поведение карты|TransStatus|Описание|PAN|\n|---|---|---|---|\n|**Успешная оплата**|Y|**AUTHENTICATION_SUCCESSFUL_REASON_18**<br/>Успешное прохождение аутентификации без ввода пароля c заполненной transStatusReason High confidence, т.е. высокая уверенность в надежности|2201382000000591|"
		},
		{
			"name": "Правила расчета возмещений по операционному реестру",
			"description": "При наличии РКО от Т‑Банка выплаты производятся в календарные дни. При отсутствии – в дни\nработы расчетно-кассового центра по графику Центробанка\n\nВозмещение считается за один календарный день\n\n|Тип операции|Пояснение|Плюс/минус|\n|---|---|---|\n|Debit|Операция оплаты|Плюс|\n|Credit|Операция возврата|Минус|\n|Fee|Комиссия по операции оплаты (в том числе неуспешной)|Минус|\n|CancelRefund|Отмена возврата|Плюс|\n|Chargeback|Опротестование операции эмитентом|Минус|\n|2Chargeback|Арбитражное опротестование эмитентом|Минус|\n|Chargeback_Reversal|Отмена опротестования операции эмитентом|Плюс|\n|2Chargeback_Reversal|Отмена арбитражного опротестования операции эмитентом|Плюс|\n|CR_Chargeback|Возврат операции Refund от эмитента (карта или договор закрыты)|Плюс|\n|Representment|Обратное опротестование Chargeback Т‑Банком|Плюс|\n|Representment_Reversal|Отмена обратного опротестования 2Chargeback Т‑Банком|Минус|\n|AUTH_FAIL|Неуспешная авторизация. Сама операция в расчете не участвует. Участвует только комиссия за них.|-|\n|CreditClientCorrection|FeeColl (Ручное урегулирование операции с банкомэмитентом по договоренности или при списании с Т‑Банка по клирингу)|Минус|\n|DebitClientCorrection|FeeColl (Ручное урегулирование операции с банкомэмитентом по договоренности или при списании с Т‑Банка по клирингу)|Плюс|\n|CreditCorrection|Списание с ТСП претензии клиента Т‑Банка|Минус|\n|DebitCorrection|Зачисление ТСП претензии клиента Т‑Банка|Плюс|"
		},
		{
			"name": "Формат реестра",
			"description": "**Тип файла:** текстовый файл в кодировке Win CP-1251. Разделитель полей — символ «;» (точка с запятой)\n\n**Тело Реестра** состоит из строк. Одна строка — одна Операция. Каждая строка тела Реестра заканчивается знаком конец строки/перевод каретки (CR/LF) и должна содержать информацию из таблицы ниже.\n\n|№ Поля|Наименование/содержание поля|Размерность поля|\n|---|---|---|\n|1|Порядковый номер|Порядковый номер строк и тела реестра|\n|2|Номер карты/телефона|Маскированный номер карты: 1234 56** **** 7890 / Маскированный номер телефона: +7(903)XXX-XX-11|\n|3|ПС|Наименование Платежной Системы:<br>• Visa,<br>• MC,<br>• Мir,<br>• SBP,<br>• Tinkoff Pay,<br>• SberPay.|\n|4|Номер заказа|Цифры, буквы. Кроме спецсимволов, не более 256 знаков|\n|5|Дата операции|DD.MM.YYYY|\n|6|Время операции|HH:MM:SS|\n|7|Временная зона|MSK|\n|8|Код авторизации|Шестизначный буквенно-цифровой код. Уникальный 32-значный номер операции СБ|\n|9|Код терминала|Номер терминала в системах банка|\n|10|Дата обработки операции|DD.MM.YYYY|\n|11|Дата перечисления|DD.MM.YYYY|\n|12|Сумма операции (руб.)|Сумма Операции, разделитель целой и дробной части «.» (123.45)|\n|13|Комиссия Банка (руб.)|Комиссия Банка, разделитель целой и дробной части «.» (123.45)|\n|13.1*|Комиссия за фискализацию (руб.)|Комиссия за фискализацию, разделитель целой и дробной части «.» (123.45)|\n|14|К перечислению (руб.)|Сумма к Возмещению после удержания Комиссии Банка, разделитель целойидробнойчасти «.» (123.45)|\n|15|Тип операции|• Debit,<br>• Chargeback_Fee,<br>• 2Chargeback,<br>• 2Chargeback_Reversal,<br>• DebitCorrection,<br>• CreditCorrection,<br>• DebitClientCorrection,<br>• CR_Chargeback,<br>• CR_Chargeback_Fee,<br>• Chargeback_Reversal,<br>• Representment_Reversal,<br>• CancelRefund,<br>• CreditClientCorrection,<br>• Credit,<br>• Chargeback,<br>• Chargeback_Reversal_Fee,<br>• Representment,<br>• Representment_Fee,<br>• AUTH_FAIL.|\n|16|RRN|Внутренний номер операции в ПС, например, 835508576879, кроме операций по СБП|\n|17|Payment ID|Номер операции, присваиваемый банком|\n|18|Название терминала|От 4 до 20 латинских символов|\n|19|Тип карты|Карта, выпущенная на территории РФ или иностранная карта Dom/Int|\n|20|DATA|Для передачи дополнительных данных в реестр, используется параметр DATA метода Init (передаётся в виде \"ключ\":\"значение\"). Необходимо использовать ключи:<br>• Paymentpurpose,<br>• Order_number,<br>• Email,<br>• Name,<br>• Phone,<br>• S_lastname,<br>• S_firstname,<br>• S_middlename,<br>• Number,<br>• Mfo_agreement.|\n|21|Описание|Description переданный в методе Init|\n"
		},
		{
			"name": "Обратная связь",
			"description": "По техническим вопросам обратитесь на почту acq_help@tbank.ru <br>     Для предоставления обратной связи и по вопросам улучшения обслуживания и предоставляемого сервиса обратитесь к вашему личному менеджеру"
		},
		{
			"name": "История изменений",
			"description": "\n| № | Описание изменений | Дата |\n| ------- | ------ | ------ |\n| 1 | Создан документ | 26.05.2023 |\n| 2 | В описание параметра deviceChannel для метода FinishAuthorize добавлено уточнение, что значение 02 - Browser (BRW) используется по умолчанию | 16.02.2024 |\n| 3 | Раздел \"Рекомендации при интеграции\" переименован в \"Инструкции по безопасности при интеграции\" и дополнен описанием про корректность токена и использование новейших версий CMS  | 19.02.2024 |\n| 4 | Раздел \"Инструкции по безопасности при интеграции\" дополнен описанием про использование ПО для интеграции, полученного не с сайта https://www.tbank.ru/kassa/develop/ | 20.02.2024 | \n| 5 | В раздел \"Тестовые карты\" добавлено пояснение про карты для тест-кейсов и карты для совершения тестовых платежей | 11.03.2024 |\n| 6 | В раздел \"Подпись запроса\" добавлена ссылка на сервис для проверки корректности формирования токена | 11.03.2024 |\n| 7 | Исправлено описание параметра \"Success\" в ответе для всех методов, где он используется | 22.03.2024 |\n| 8 | В раздел \"Подпись запроса\" добавлено уточнение про поддержку UTF-8 (пункт №5) | 25.03.2024 |\n| 9 | В раздел \"Тестирование и обработка ошибок\" добавлены типовые ошибки Онлайн-кассы, исправлен URL для закрывающего чека, добавлены параметры \"MD\", \"PaReq\", \"ACSUrl\" в описание метода \"Привязка карты\" | 04.04.2024 |\n| 10 | В раздел \"Возмещения и реестры\" добавлен подраздел \"Формат реестра\" | 11.04.2024 |\n| 11 | В раздел \"Платежная форма в webview\" были добавлены рекомендации по интеграции | 11.04.2024 |\n| 12 | <li>Исправлено описание параметра \"DATA\" в методе AttachCard</li><li>В раздел \"Подпись запроса\" добавлено описание про проверку токена в ЛК ИЭ</li><li>В раздел \"Какими терминами пользуемся в документации?\" добавлено уточнение по данные тестового терминала</li><li>В описание метода Confirm добавлена ссылка на подробное описание механизма двухстадийного платежа</li><li>В раздел \"Сценарии платежа\" добавлено уточнение про проведение тестовых платежей в тестовом окружении</li><li>В описание параметра OrderId для метода Init добавлено уточнение про егоповторное использование</li><li>Исправлено описание объекта CardData для метода FinishAuthorize по нахождению открытого ключа</li><li>Исправлено описание параметра Description, который теперь имеет максимальную длину в 140 смволов для всех типов оплат</li> | 12.04.2024 |\n| 13 | <li>Дополнено описание параметра Params в методе GetState</li><li>Добавлена информация по прохождению тест-кейсов в раздел \"Тестовые карты\"</li> | 16.04.2024 |\n| 14 | В раздел \"Фискализация\" добавлен подраздел \"Подключение Онлайн-кассы\",  а также в раздел \"Нотификации мерчанта об операциях\" добавлены дпоплнительные параметры массива \"DATA\" | 16.04.2024 |\n| 15 | Обновлено описание пункта №2 дополнительных мер при интеграции с MAPI в разделе \"Инструкции по безопасности при интеграции\" | 18.04.2024 |\n| 16 | Правка ошибок в параметрах \"RebillId\" и \"CardId\" в нотификациях и добавление инсофрмации по проуедению скидок/бонусов в разделе \"Описание дополнительных объектов\" | 26.04.2024 |\n| 17 | Добавление пояснения в ответ на метод подтверждения платежа статуса \"3DS_CHECKING\" | 14.05.2024 |\n| 18 | <li>В раздел \"Тестовые карты\" добавлена информация по добавлению IP а WL</li><li>В раздел \"Сценарии оплаты по карте\" добавлено уточнение про оплату в рублях (блок \"Правила работы\"), про сроки холдирования (блок \"Двухстадийный платеж\") и про частичный возврат при подключенной онлайн-кассе (блок \"Возврат и отмена платежа\")</li> | 16.05.2024 |\n| 19 | <li>Дополнено описание параметра Description в методе Init</li><li>Обновлено описание параметра \"version\" в методе \"Получение ссылки\"</li> | 17.05.2024 |\n| 20 | <li>Дополнено описание формата параметра DATA в ответе на метод NotificationPayment</li><li>В раздел \"Формат реестра\" добавлены используемые ключи для передачи дополнительных параметров в реестр</li> | 30.05.2024 |\n| 21 | <li>Добавление таблицы статусов рекуррентных платежей по СБП</li><li>Обновление URL для метода SberPay/transactions/{paymentId}/QR</li><li>Добавление описания функционала кастомизации платежной формы</li> | 10.06.2024 |\n| 22 | Убрана обязательность параметра ClientInfo в чеках для ФФД 1.2. Добавлено описание для формирования токена методом getConfirmOperation | 13.06.2024 |\n| 23 | Добавлено описание ошибок 3020, 3021, 3022, 3023, 3024, 3026, 3032, 3033, 3034, 3035, 3036 и 3038 в раздел \"Коды ошибок\" | 25.06.2024 |\n| 24 | Добавлен подраздел \"Квитанции\" и описаны ключи для доп. параметров в DATA | 27.06.2024 |\n| 25 | Добавлены теги ФФД к сущностям параметра Receipt для ФФД 1.05 и ФФД 1.2 | 27.06.2024 |\n| 26 | Добавлено примечание к параметру \"Taxation\" в описании доп. объектов | 01.07.2024 |\n| 27 | Убрана обязательность передачи специальных параметров для полей Route и Source в методах \"/cancel\" и \"/confirm\" | 25.07.2024 |\n| 28 | В разделе \"Сценарии оплаты по карте\" добавлено уточнение про частичный возврат при подключенной онлайн-кассе (блок \"Возврат и отмена платежа\") | 26.07.2024 |\n| 29 | В разделе нотификаций исправлен тип параметра PaymentId на \"number\" | 02.08.2024 |"
		}
	],
	"paths": {
		"/v2/Init": {
			"post": {
				"operationId": "Init",
				"tags": ["Стандартный платеж", "Оплата через YandexPay"],
				"summary": "Инициализация платежа",
				"description": "Метод инициирует платежную сессию\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/Init_FULL"
									},
									{
										"$ref": "#/components/schemas/Init_SDK"
									}
								]
							},
							"examples": {
								"Init_FULL": {
									"summary": "Пример запроса (FULL)",
									"value": {
										"TerminalKey": "TinkoffBankTest",
										"Amount": 140000,
										"OrderId": "21090",
										"Description": "Подарочная карта на 1000 рублей",
										"Token": "68711168852240a2f34b6a8b19d2cfbd296c7d2a6dff8b23eda6278985959346",
										"DATA": {
											"Phone": "+71234567890",
											"Email": "a@test.com"
										},
										"Receipt": {
											"Email": "a@test.ru",
											"Phone": "+79031234567",
											"Taxation": "osn",
											"Items": [
												{
													"Name": "Наименование товара 1",
													"Price": 10000,
													"Quantity": 1,
													"Amount": 10000,
													"Tax": "vat10",
													"Ean13": "303130323930303030630333435"
												},
												{
													"Name": "Наименование товара 2",
													"Price": 20000,
													"Quantity": 2,
													"Amount": 40000,
													"Tax": "vat20"
												},
												{
													"Name": "Наименование товара 3",
													"Price": 30000,
													"Quantity": 3,
													"Amount": 90000,
													"Tax": "vat10"
												}
											]
										}
									}
								},
								"Init_SDK": {
									"summary": "Пример запроса (SDK)",
									"value": {
										"TerminalKey": "TinkoffBankTest",
										"Amount": 140000,
										"OrderId": "21090",
										"Token": "c744b9711d978c152fb4546c6cdcec24ebd9870678f9f325a9713ca56d6a6826",
										"Description": "Подарочная карта на 1400.00 рублей",
										"CustomerKey": "string",
										"Recurrent": "Y",
										"PayType": "O",
										"Language": "ru",
										"NotificationURL": "http://example.com",
										"SuccessURL": "http://example.com",
										"FailURL": "http://example.com",
										"DATA": {
											"key": "value"
										},
										"Receipt": {
											"Items": {
												"Name": "Наименование товара 1",
												"Price": 140000,
												"Quantity": 1,
												"Amount": 140000,
												"PaymentMethod": "full_prepayment",
												"PaymentObject": "commodity",
												"Tax": "vat10",
												"Ean13": "123456789",
												"AgentData": {
													"AgentSign": "paying_agent",
													"OperationName": "Позиция чека",
													"Phones": "+790912312398",
													"ReceiverPhones": ["+79221210697", "+79098561231"]
												},
												"SupplierInfo": {
													"Phones": ["+79221210697", "+79098561231"],
													"Name": "OOO Вендор товара",
													"Inn": "7710140679"
												}
											},
											"FfdVersion": "1.05",
											"Email": "a@test.ru",
											"Phone": "79031234567",
											"Taxation": "osn",
											"Payments": {
												"Cash": 0,
												"Electronic": 140000,
												"AdvancePayment": 0,
												"Credit": 0,
												"Provision": 0
											}
										}
									}
								},
								"Init_QR_RECURRENT": {
									"summary": "Пример рекуррентного платежа по СБП",
									"value": {
										"TerminalKey": "TinkoffBankTest",
										"Amount": 140000,
										"OrderId": "21090",
										"Token": "c744b9711d978c152fb4546c6cdcec24ebd9870678f9f325a9713ca56d6a6826",
										"Description": "Подписка на 1400.00 рублей",
										"CustomerKey": "string",
										"Recurrent": "Y",
										"PayType": "O",
										"Language": "ru",
										"NotificationURL": "http://example.com",
										"SuccessURL": "http://example.com",
										"FailURL": "http://example.com",
										"DATA": {
											"QR": true,
											"key": "value"
										},
										"Receipt": {
											"Items": {
												"Name": "Наименование товара 1",
												"Price": 140000,
												"Quantity": 1,
												"Amount": 140000,
												"PaymentMethod": "full_prepayment",
												"PaymentObject": "commodity",
												"Tax": "vat10",
												"Ean13": "123456789",
												"AgentData": {
													"AgentSign": "paying_agent",
													"OperationName": "Позиция чека",
													"Phones": "+790912312398",
													"ReceiverPhones": ["+79221210697", "+79098561231"]
												},
												"SupplierInfo": {
													"Phones": ["+79221210697", "+79098561231"],
													"Name": "OOO Вендор товара",
													"Inn": "7710140679"
												}
											},
											"FfdVersion": "1.05",
											"Email": "a@test.ru",
											"Phone": "79031234567",
											"Taxation": "osn",
											"Payments": {
												"Cash": 0,
												"Electronic": 140000,
												"AdvancePayment": 0,
												"Credit": 0,
												"Provision": 0
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Response"
								},
								"examples": {
									"InitResponseExample": {
										"summary": "Пример ответа",
										"value": {
											"Success": true,
											"ErrorCode": "0",
											"TerminalKey": "TinkoffBankTest",
											"Status": "NEW",
											"PaymentId": "3093639567",
											"OrderId": "21090",
											"Amount": 140000,
											"PaymentURL": "https://securepay.tinkoff.ru/new/fU1ppgqa"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/InitPayments": {
			"post": {
				"operationId": "InitPayments",
				"tags": ["Оплата через T‑Pay", "Оплата через СБП"],
				"summary": "Инициировать платеж в виджете",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InitPayments"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InitPaymentsResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/Check3dsVersion": {
			"post": {
				"operationId": "Check3dsVersion",
				"tags": ["Стандартный платеж"],
				"summary": "Проверка версии 3DS",
				"description": "`Для Мерчантов с PCI DSS`\n <br> Проверяет поддерживаемую версию 3DS протокола по карточным данным из входящих\n параметров \n\n При определении второй версии, возможно в ответе получение данных для прохождения\n дополнительного метода `3DS Method`, который позволяет эмитенту собрать данные браузера\n клиента — это может быть полезно при принятии решения в пользу **Frictionless Flow**\n (аутентификация клиента без редиректа на страницу ACS) <br>\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": ["PaymentId", "TerminalKey", "CardData", "Token"],
								"properties": {
									"PaymentId": {
										"description": "Идентификатор платежа в системе Т‑Кассы\n",
										"type": "string",
										"maxLength": 20,
										"examples": {
											"default": 13660
										}
									},
									"TerminalKey": {
										"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
										"type": "string",
										"maxLength": 20,
										"examples": {
											"default": "testRegressBank"
										}
									},
									"CardData": {
										"description": "Зашифрованные данные карты в формате:\n```\nPAN=4300000000000777;ExpDate=0519;CardHolder=IVAN PETROV;CVV=111\n```\ntype: string\n",
										"examples": {
											"default": "U5jDbwqOVx+2vDApxe/rfACMt+rfWXzPdJ8ZXxNFVIiZaLZrOW72bGe9cKZdIDnekW0nqm88YxRD↵jyfa5Ru0kY5cQV alU+juS1u1zpamSDtaGFeb8sRZfhj72yGw+io+qHGSBeorcfgoKStyKGuBPWfG↵d0PLHuyBE6QgZyIAM1XfdmNlV0UAxOnkTGDsskL pIt3AWhw2e8KOar0vwbgCTDjznDB1/DLgOW01↵Aj/bXyLJoG1BkOrPBm9JURs+f+uyFae0hkRicNKNgXoN5pJTSQxOEauOi6ylsVJ B3WK5MNYXtj6x↵GlxcmTk/LD9kvHcjTeojcAlDzRZ87GdWeY8wgg=="
										}
									},
									"Token": {
										"description": "Подпись запроса\n",
										"type": "string",
										"examples": {
											"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"Version",
										"PaymentSystem",
										"Success",
										"ErrorCode"
									],
									"properties": {
										"Version": {
											"description": "Версия протокола 3DS. \nПример:\n* \"1.0.0” — первая версия,\n* “2.1.0” — вторая версия.\n",
											"type": "string",
											"examples": {
												"default": "2.1.0"
											}
										},
										"TdsServerTransID": {
											"description": "Уникальный идентификатор транзакции,\nгенерируемый 3DS-Server, обязательный\nпараметр для 3DS второй версии\n",
											"type": "string",
											"examples": {
												"default": "17d3791b-5cfa-4318-bc23-3d949e8c4b7e"
											}
										},
										"ThreeDSMethodURL": {
											"description": "Дополнительный параметр для 3DS второй\nверсии, который позволяет пройти этап по\nсбору данных браузера ACS-ом\n",
											"type": "string",
											"format": "uri",
											"examples": {
												"default": "https://acs.vendorcert.mirconnect.ru/ds/6300"
											}
										},
										"PaymentSystem": {
											"description": "Платежная система карты\n",
											"type": "string",
											"examples": {
												"default": "mir"
											}
										},
										"Success": {
											"description": "Успешность прохождения запроса (true/false)\n",
											"type": "boolean",
											"examples": {
												"default": true
											}
										},
										"ErrorCode": {
											"description": "Код ошибки. «0» в случае успеха\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "0"
											}
										},
										"Message": {
											"description": "Краткое описание ошибки\n",
											"type": "string",
											"examples": {
												"default": "None"
											}
										},
										"Details": {
											"description": "Подробное описание ошибки\n",
											"type": "string",
											"examples": {
												"default": "None"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/FinishAuthorize": {
			"post": {
				"operationId": "FinishAuthorize",
				"tags": ["Стандартный платеж"],
				"summary": "Подтверждение платежа",
				"description": "`Для Мерчантов с PCI DSS`\n <br> Метод подтверждает платеж передачей реквизитов, а также списывает средства \n с карты клиента при одностадийной оплате и блокирует указанную сумму при \n двухстадийной. Используется, если у площадки есть сертификация PCI DSS и \n собственная платежная форма\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/FinishAuthorize_FULL"
									},
									{
										"$ref": "#/components/schemas/FinishAuthorize_SDK"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/Without3DS"
										},
										{
											"$ref": "#/components/schemas/With3DS"
										},
										{
											"$ref": "#/components/schemas/With3DSv2APP"
										},
										{
											"$ref": "#/components/schemas/With3DSv2BRW"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/v2/Confirm": {
			"post": {
				"operationId": "Confirm",
				"tags": ["Двухстадийный платеж"],
				"summary": "Подтверждение платежа",
				"description": "Метод для списания заблокированных денежных средств. Используется при двухстадийном проведении платежа. Применим только к платежам в статусе **AUTHORIZED**. Статус транзакции перед разблокировкой\nвыставляется в **CONFIRMING**. Сумма списания может быть меньше или равна сумме авторизации.\n> Подробнее про двухстадийный платеж можно прочитать в разделе [Сценарии платежа](https://www.tbank.ru/kassa/dev/payments/#tag/Scenarii-oplaty-po-karte/Scenarii-platezha) — \"Двухстадийный платеж\"\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Confirm"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Confirm-2"
								}
							}
						}
					}
				}
			}
		},
		"/v2/Cancel": {
			"post": {
				"operationId": "Cancel",
				"tags": ["Отмена платежа"],
				"summary": "Отмена платежа",
				"description": "Отменяет платежную сессию. В зависимости от статуса платежа переводит его в следующие состояния: \n* NEW — CANCELED\n* AUTHORIZED — PARTIAL_REVERSED — если отмена не на полную сумму;\n* AUTHORIZED — REVERSED — если отмена на полную сумму;\n* CONFIRMED — PARTIAL_REFUNDED — если отмена не на полную сумму;\n* CONFIRMED — REFUNDED — если отмена на полную сумму.\n\nДля платежей «в Рассрочку» отмена доступна только из статуса AUTHORIZED <br>\nДля платежей «Долями» если операция в статусе CONFIRMED или PARTIAL_REFUNDED будет осуществлен частичный либо полный возврат <br>\nЕсли платеж находился в статусе **AUTHORIZED** производится отмена холдирования средств на карте\nклиента. При переходе из статуса **CONFIRMED** — возврат денежных средств на карту клиента\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Cancel"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Cancel-2"
								}
							}
						}
					}
				}
			}
		},
		"/v2/Charge": {
			"post": {
				"operationId": "ChargePCI",
				"tags": ["Рекуррентный платеж"],
				"summary": "Автоплатеж",
				"description": "# Схема проведения рекуррентного платежа\n\n## Описание\n\nОсуществляет рекуррентный (повторный) платеж — безакцептное списание денежных средств со счета банковской карты клиента.\nДля возможности его использования клиент должен совершить хотя бы один платеж в пользу Мерчанта, который должен быть указан как рекуррентный (см. параметр Recurrent методе **Init**), фактически являющийся первичным. По завершении оплаты в нотификации на AUTHORIZED или CONFIRMED будет передан параметр `RebillId`.<br>\nВ дальнейшем для совершения рекуррентного платежа Мерчант должен вызвать метод **Init**, указать нужную сумму для списания в параметре `Amount`, а затем без переадресации на PaymentURL вызвать метод **Charge** для оплаты по тем же самым реквизитам и передать параметр `RebillId`, полученный при совершении первичного платежа.<br>\nМетод **Charge** работает по одностадийной и двухстадийной схеме оплаты. Чтобы перейти на двухстадийную схему нужно переключить терминал в [Личном кабинете](https://business.tbank.ru/oplata/main), а также написать обращение на <acq_help@tbank.ru> с просьбой переключить схему рекуррентов.\n\n>По умолчанию метод Charge отключен. Для его включения на DEMO-терминале нужно написать обращение на <acq_help@tbank.ru>, а на боевом терминале — обратиться к своему персональному менеджеру\n\nПри проведении рекуррентного платежа учитывать взаимосвязь атрибута RebillId в методе /Charge с:\n  * Значением атрибута OperationInitiatorType в методе /Init;\n  * Значением атрибута Reccurent в методе /Init;\n  * Типом терминала, используемом для проведения операций (ECOM/AFT).\n    \nНаглядно допустимые сценарии взаимосвязи описаны в таблице:\n|CIT/MIT|Тип операции|OperationInitiator в /Init|RebillId в /Charge|Recurrent в /Init|AFT терминал|ECOM терминал|\n|---|---|---|---|---|---|---|\n|CIT|Credential-Not-Captured|0|null|N|Разрешено|Разрешено|\n|CIT|Credential-Captured|1|null|Y|Разрешено|Разрешено|\n|CIT|Credential-on-File|2|not null|N|Запрещено|Разрешено|\n|MIT|Credential-on-File, Recurring|R|not null|N|Запрещено|Разрешено|\n|MIT|Credential-on-File, Installment|I|not null|N|Разрешено|Запрещено|\n\nВ случае передачи значений атрибутов не соответствующих таблице — MAPI вернет ошибку 1126 \n(Несопоставимые значения rebillId или Recurrent с переданным значением OperationInitiatorType)\n\n## Одностадийная оплата\n\n1. Совершить родительский платеж путем вызова **Init** с указанием дополнительных параметров `Recurrent=Y` и `CustomerKey`.\n2. Переадресовать клиента на `PaymentUrl` (только <span style=\"color:#900C3F\">для Мерчантов без PCI DSS</span>).\n3. После оплаты заказа клиентом в нотификации на статус **AUTHORIZED** или **CONFIRMED** будет передан параметр `RebillId`, который необходимо сохранить.\n4. Спустя некоторое время для совершения рекуррентного платежа необходимо вызвать метод **Init** со стандартным набором параметров (параметры `Recurrent` и `CustomerKey` здесь не нужны).\n5. Получить в ответ на **Init** параметр `PaymentId`.\n6. Вызвать метод **Charge** с параметром `RebillId`, полученным в п.3, и параметром `PaymentId`, полученным в п.5. При успешном сценарии операция перейдет в статус CONFIRMED.\n\n\n## Двухстадийная оплата\n\n1. Совершить родительский платеж путем вызова **Init** с указанием дополнительных параметров `Recurrent=Y` и `CustomerKey`.\n2. Переадресовать клиента на `PaymentUrl` (только <span style=\"color:#900C3F\">для Мерчантов без PCI DSS</span>).\n3. После оплаты заказа клиентом в нотификации на статус **AUTHORIZED** или **CONFIRMED** будет передан параметр RebillId, который необходимо сохранить.\n4. Спустя некоторое время для совершения рекуррентного платежа необходимо вызвать метод **Init** со стандартным набором параметров (параметр `Recurrent` и `CustomerKey` здесь не нужны).\n5. Получить в ответ на **Init** параметр `PaymentId`.\n6. Вызвать метод **Charge** с параметром `RebillId`, полученным в п.3, и параметром `PaymentId`, полученным в п.5. При успешном сценарии операция перейдет в статус **AUTHORIZED**. Денежные средства будут заблокированы на карте клиента.\n7. Вызвать метод **Confirm** для подтверждения платежа.\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/Charge_FULL"
									},
									{
										"$ref": "#/components/schemas/Charge_SDK"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"TerminalKey",
										"Amount",
										"OrderId",
										"Success",
										"PaymentId",
										"ErrorCode",
										"Status"
									],
									"properties": {
										"TerminalKey": {
											"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой \nпри заведении терминала\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "TinkoffBankTest"
											}
										},
										"Amount": {
											"description": "Сумма в копейках\n",
											"type": "number",
											"maxLength": 20,
											"examples": {
												"default": 100000
											}
										},
										"OrderId": {
											"description": "Идентификатор заказа в системе Мерчанта\n",
											"type": "string",
											"maxLength": 36,
											"examples": {
												"default": "21050"
											}
										},
										"Success": {
											"description": "Успешность прохождения запроса (true/false)\n",
											"type": "boolean",
											"examples": {
												"default": true
											}
										},
										"Status": {
											"description": "Статус платежа \n\nПолучает в ответе 1 из 2 статусов:\n* CONFIRMED — если платеж выполнен,\n* REJECTED — если платеж не выполнен.\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "NEW"
											}
										},
										"PaymentId": {
											"description": "Идентификатор платежа в системе Т‑Кассы\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "13660"
											}
										},
										"ErrorCode": {
											"description": "Код ошибки. «0» в случае успеха\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "0"
											}
										},
										"Message": {
											"description": "Краткое описание ошибки\n",
											"type": "string"
										},
										"Details": {
											"description": "Подробное описание ошибки\n",
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/GetState": {
			"post": {
				"operationId": "GetState",
				"tags": ["Стандартный платеж"],
				"summary": "Получение статуса платежа",
				"description": "Метод возвращает статус платежа\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/GetState_FULL"
									},
									{
										"$ref": "#/components/schemas/GetState_SDK"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"TerminalKey",
										"Amount",
										"OrderId",
										"Success",
										"PaymentId",
										"ErrorCode",
										"Status"
									],
									"properties": {
										"TerminalKey": {
											"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "TinkoffBankTest"
											}
										},
										"Amount": {
											"description": "Сумма в копейках\n",
											"type": "number",
											"maxLength": 20,
											"examples": {
												"default": 100000
											}
										},
										"OrderId": {
											"description": "Идентификатор заказа в системе Мерчанта\n",
											"type": "string",
											"maxLength": 36,
											"examples": {
												"default": "21050"
											}
										},
										"Success": {
											"description": "Успешность прохождения запроса (true/false)\n",
											"type": "boolean",
											"examples": {
												"default": true
											}
										},
										"Status": {
											"description": "Статус платежа. Подробнее см. в разделе [Статусная модель платежа](#tag/Scenarii-oplaty-po-karte/Statusnaya-model-platezha)\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "NEW"
											}
										},
										"PaymentId": {
											"description": "Идентификатор платежа в системе Т‑Кассы\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "13660"
											}
										},
										"ErrorCode": {
											"description": "Код ошибки. «0» в случае успеха\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "0"
											}
										},
										"Message": {
											"description": "Краткое описание ошибки\n",
											"type": "string",
											"examples": {
												"default": "OK"
											}
										},
										"Details": {
											"description": "Подробное описание ошибки\n",
											"type": "string",
											"examples": {
												"default": "0"
											}
										},
										"Params": {
											"description": "Информация по способу оплаты/деталям для платежей в рассрочку\n",
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Items_Params"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/AddCustomer": {
			"post": {
				"operationId": "AddCustomer",
				"tags": ["Методы работы с клиентами"],
				"summary": "Регистрация клиента",
				"description": "Регистрирует клиента в связке с терминалом\n\n> Возможна автоматическая привязка клиента и карты, по которой был совершен платеж, при\nпередаче параметра `CustomerKey` в методе **Init**. Это можно использовать для сохранения и\nпоследующего отображения клиенту замаскированного номера карты, по которой будет совершен\nрекуррентный платеж\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddCustomer"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddCustomerResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/GetCustomer": {
			"post": {
				"operationId": "GetCustomer",
				"tags": ["Методы работы с клиентами"],
				"summary": "Получение данных клиента",
				"description": "Возвращает данные клиента, сохраненные в связке с терминалом \n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetOrRemoveCustomer"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetCustomerResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/RemoveCustomer": {
			"post": {
				"operationId": "RemoveCustomer",
				"tags": ["Методы работы с клиентами"],
				"summary": "Удаление данных клиента",
				"description": "Удаляет сохраненные данные клиента\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetOrRemoveCustomer"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RemoveCustomerResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/AddCard": {
			"post": {
				"operationId": "AddCard",
				"tags": ["Методы работы с картами"],
				"summary": "Инициализация привязки карты к клиенту",
				"description": "`Для Мерчантов с PCI DSS`\n <br> Метод инициирует привязку карты к клиенту. \n В случае успешной привязки переадресует клиента на `Success Add Card URL`, \n в противном случае на `Fail Add Card URL`. \n Можно использовать форму Т‑Кассы, возможно заменить на кастомную форму.\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/AddCard_FULL"
									},
									{
										"$ref": "#/components/schemas/AddCard_SDK"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/AddCardResponse_FULL"
										},
										{
											"$ref": "#/components/schemas/AddCardResponse_SDK"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/v2/AttachCard": {
			"post": {
				"operationId": "AttachCard",
				"tags": ["Методы работы с картами"],
				"summary": "Привязка карты",
				"description": "`Для Мерчантов с PCI DSS`\n <br> Завершает привязку карты к клиенту.  \n В случае успешной привязки переадресует клиента на **Success Add Card URL**\n в противном случае на **Fail Add Card URL**.  \n Для прохождения 3DS второй версии перед вызовом метода должен быть вызван **/v2/check3dsVersion**\n и выполнен **3DS Method**, который является обязательным при прохождении **3DS** по протоколу версии\n 2.0.\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AttachCard"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttachCardResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/GetAddCardState": {
			"post": {
				"operationId": "GetAddCardState",
				"tags": ["Методы работы с картами"],
				"summary": "Статус привязки карты",
				"description": "`Для мерчантов с PCI DSS`\n <br> Метод возвращает статус привязки карты\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetAddCardState"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAddCardStateResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/GetCardList": {
			"post": {
				"operationId": "GetCardList",
				"tags": ["Методы работы с картами"],
				"summary": "Список карт клиента",
				"description": "Возвращает список всех привязанных карт клиента, включая удаленные\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/GetCardList_FULL"
									},
									{
										"$ref": "#/components/schemas/GetCardList_SDK"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"required": ["CardId", "Pan", "Status", "CardType"],
										"properties": {
											"CardId": {
												"description": "Идентификатор карты в системе Т‑Кассы\n",
												"type": "string",
												"examples": {
													"default": "881900"
												}
											},
											"Pan": {
												"description": "Номер карты\n",
												"type": "string",
												"examples": {
													"default": "518223******0036"
												}
											},
											"Status": {
												"description": "Статус карты:\n* A — активная,  \n* D — удаленная.\n",
												"type": "string",
												"enum": ["A", "D"],
												"examples": {
													"default": "D"
												}
											},
											"RebillId": {
												"description": "Идентификатор рекуррентного платежа\n",
												"type": "string",
												"examples": {
													"default": "6155312073"
												}
											},
											"CardType": {
												"description": "Тип карты:\n* карта списания (0),\n* карта пополнения (1),\n* карта пополнения и списания (2).\n",
												"type": "number",
												"enum": [0, 1, 2],
												"examples": {
													"default": 0
												}
											},
											"ExpDate": {
												"description": "Срок действия карты\n",
												"type": "string",
												"examples": {
													"default": "1122"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/RemoveCard": {
			"post": {
				"operationId": "RemoveCard",
				"tags": ["Методы работы с картами"],
				"summary": "Удаление привязанной карты клиента",
				"description": "Метод удаляет привязанную карту клиента\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RemoveCard"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RemoveCardResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/GetQr": {
			"servers": [
				{
					"url": "https://securepay.tinkoff.ru",
					"description": "production"
				}
			],
			"post": {
				"operationId": "GetQr",
				"tags": ["Оплата через СБП"],
				"summary": "Формирование QR",
				"description": "Метод регистрирует QR и возвращает информацию о нем. \nДолжен быть вызван после вызова метода **Init**\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetQr"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/QrResponse_FULL"
										},
										{
											"$ref": "#/components/schemas/QrResponse_SDK"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/v2/SubmitRandomAmount": {
			"post": {
				"operationId": "SubmitRandomAmount",
				"deprecated": true,
				"tags": ["Методы работы с привязанными картами и клиентами"],
				"summary": "SubmitRandomAmount",
				"description": "Метод предназначен для подтверждения карты путем блокировки случайной суммы",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": ["TerminalKey", "RequestKey", "Amount", "Token"],
								"properties": {
									"TerminalKey": {
										"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
										"type": "string",
										"maxLength": 20,
										"examples": {
											"default": "testRegressBank"
										}
									},
									"RequestKey": {
										"description": "Идентификатор запроса на привязку карты\n",
										"type": "string",
										"examples": {
											"default": "13021e10-a3ed-4f14-bcd1-823b5ac37390"
										}
									},
									"Amount": {
										"description": "Сумма в копейках\n",
										"type": "number",
										"maxLength": 20,
										"examples": {
											"default": 100000
										}
									},
									"Token": {
										"description": "Подпись запроса\n",
										"type": "string",
										"examples": {
											"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"TerminalKey",
										"CustomerKey",
										"RequestKey",
										"CardId",
										"ErrorCode",
										"Success"
									],
									"properties": {
										"TerminalKey": {
											"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой \nпри заведении терминала\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "TinkoffBankTest"
											}
										},
										"CustomerKey": {
											"description": "Идентификатор клиента в системе Мерчанта\n",
											"type": "string",
											"maxLength": 36,
											"examples": {
												"default": "testCustomer1234"
											}
										},
										"RequestKey": {
											"description": "Идентификатор запроса на привязку карты\n",
											"type": "string",
											"examples": {
												"default": "13021e10-a3ed-4f14-bcd1-823b5ac37390"
											}
										},
										"RebillId": {
											"description": "Идентификатор рекуррентного платежа\n",
											"type": "string"
										},
										"CardId": {
											"description": "Идентификатор карты в системе Т‑Кассы\n",
											"type": "string",
											"maxLength": 40,
											"examples": {
												"default": "156516516"
											}
										},
										"Success": {
											"description": "Успешность прохождения запроса (true/false)\n",
											"type": "boolean",
											"examples": {
												"default": true
											}
										},
										"ErrorCode": {
											"description": "Код ошибки. «0» в случае успеха\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "0"
											}
										},
										"Message": {
											"description": "Краткое описание ошибки\n",
											"type": "string"
										},
										"Details": {
											"description": "Подробное описание ошибки\n",
											"type": "string"
										},
										"Status": {
											"description": "Статус платежа\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "NEW"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/Submit3DSAuthorization": {
			"post": {
				"operationId": "Submit3DSAuthorization",
				"tags": ["Прохождение 3DS"],
				"summary": "Подтверждение прохождения 3DS v1.0",
				"description": "`Для Мерчантов с PCI DSS`\n <br> Осуществляет проверку результатов прохождения 3-D Secure и при успешном результате\n прохождения 3-D Secure подтверждает инициированный платеж.\n При использовании одностадийной оплаты осуществляет списание денежных средств с карты\n клиента. <br>\n При двухстадийной оплате осуществляет блокировку указанной суммы на карте клиента<br> \n\n *Формат запроса*: `x-www-form-urlencoded` <br>\n\n После получения на `TermUrl` мерчанта ответа ACS с результатами прохождения 3-D Secure необходимо\n сформировать запрос к методу **Submit3DSAuthorization**\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/x-www-form-urlencoded": {
							"schema": {
								"type": "object",
								"required": ["MD", "PaRes"],
								"properties": {
									"MD": {
										"description": "Уникальный идентификатор транзакции в системе\nТ‑Кассы (возвращается в ответе от ACS)\n",
										"type": "string",
										"examples": {
											"default": "2561504"
										}
									},
									"PaRes": {
										"description": "Шифрованная строка, содержащая результаты 3-D Secure аутентификации (возвращается в ответе от ACS)\n",
										"type": "string",
										"examples": {
											"default": "eJxVUttygjAU/BWG1w4mXKXOMY5WOrVTrOOtl7cAqeJI1AAO+vVNFKrlaffkZM9mD9Crsq12ZCJPd7yrmy2sa4zHuyTlq66+mD8bvt4jMF8LxoYzFpeCEQhZntMV09JE3vC8Hx9j27A8LzEcN7aNCPu24VIrihKXetiPdAKT/pQdCNSDiJzTsgA1VCqKeE15QYDGh8FoTBy73fZtQDWFjInRkFi4+Uz82JbH1zJwmjEyHcwAXRDEu5IX4kQ8R/Y0BEqxJeui2HcQOlGesKolSkCqCuhmYFIqlEuVKk3IDL8uPwI3jDaBGZ4XeLxZVeFw5I7nX11AqgMSWjDpzPSxb/ma6XRct4Pl4y51oJkar5zLx1wx7NWI/t3BfQFkxkKuoHHfMGDVfseZugLoDwO6+X16UfHFhUyk/32OMH3vZ5+nYBu/2d4xcMTDsn04j19VqJcmpZjKYKT3q6QigJQMqveF6lVL9O8X+AWMIbbt"
										}
									},
									"PaymentId": {
										"description": "Уникальный идентификатор транзакции в системе Т‑Кассы\n",
										"type": "string",
										"examples": {
											"default": "10063"
										}
									},
									"TerminalKey": {
										"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
										"type": "string",
										"maxLength": 20,
										"examples": {
											"default": "testRegressBank"
										}
									},
									"Token": {
										"description": "Подпись запроса\n",
										"type": "string",
										"examples": {
											"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
										}
									}
								}
							}
						}
					}
				},
				"x-codeSamples": [
					{
						"lang": "Payload",
						"source": "<body onload=\"document.form.submit()\">\n<form name=\"form\" action=\"https://rest-api-test.tinkoff.ru/v2/Submit3DSAuthorization\" method=\"post\">\n  <input type=\"hidden\" name=\"MD\" value=\"2561504\">\n  <input type=\"hidden\" name=\"PaRes\" value=\"eJxVUttygjAU/BWG1w4mXKXOMY5WOrVTrOOtl7cAqeJI1AAO+vVNFKrlaffkZM9mD9Crsq12ZCJPd7yrmy2sa4zHuyTlq66+mD8bvt4jMF8LxoYzFpeCEQhZntMV09JE3vC8Hx9j27A8LzEcN7aNCPu24VIrihKXetiPdAKT/pQdCNSDiJzTsgA1VCqKeE15QYDGh8FoTBy73fZtQDWFjInRkFi4+Uz82JbH1zJwmjEyHcwAXRDEu5IX4kQ8R/Y0BEqxJeui2HcQOlGesKolSkCqCuhmYFIqlEuVKk3IDL8uPwI3jDaBGZ4XeLxZVeFw5I7nX11AqgMSWjDpzPSxb/ma6XRct4Pl4y51oJkar5zLx1wx7NWI/t3BfQFkxkKuoHHfMGDVfseZugLoDwO6+X16UfHFhUyk/32OMH3vZ5+nYBu/2d4xcMTDsn04j19VqJcmpZjKYKT3q6QigJQMqveF6lVL9O8X+AWMIbbt\">\n  <input type=\"hidden\" name=\"PaymentId\" value=\"10063\">\n  <input type=\"hidden\" name=\"TerminalKey\" value=\"TinkoffBankTest\">\n  <input type=\"hidden\" name=\"Token\" value=\"871199b37f207f0c4f721a37cdcc71dfcea880b4a4b85e3cf852c5dc1e99a8d6\" >\n</form>\n"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"TerminalKey",
										"OrderId",
										"Success",
										"Status",
										"PaymentId",
										"ErrorCode"
									],
									"properties": {
										"TerminalKey": {
											"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
											"type": "string",
											"examples": {
												"default": "TinkoffBankTest"
											}
										},
										"OrderId": {
											"description": "Номер заказа в системе Мерчанта\n",
											"type": "string",
											"examples": {
												"default": "21050"
											}
										},
										"Success": {
											"description": "Успешность прохождения запроса (true/false)\n",
											"type": "boolean",
											"examples": {
												"default": true
											}
										},
										"Status": {
											"description": "Статус транзакции\n- CONFIRMED при успешном сценарии и одностадийном проведении платежа;\n- AUTHORIZED при успешном сценарии и двухстадийном проведении платежа; \n- REJECTED при неуспешном.\n",
											"type": "string",
											"examples": {
												"default": "CONFIRMED"
											}
										},
										"PaymentId": {
											"description": "Уникальный идентификатор транзакции в системе Т‑Кассы\n",
											"type": "string",
											"examples": {
												"default": "10063"
											}
										},
										"ErrorCode": {
											"description": "Код ошибки. «0» в случае успеха\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "0"
											}
										},
										"Message": {
											"description": "Краткое описание ошибки\n",
											"type": "string"
										},
										"Details": {
											"description": "Подробное описание ошибки\n",
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/Submit3DSAuthorizationV2": {
			"post": {
				"operationId": "Submit3DSAuthorizationV2",
				"tags": ["Прохождение 3DS"],
				"summary": "Подтверждение прохождения 3DS v2.1",
				"description": "`Для Мерчантов с PCI DSS`\n <br> Осуществляет проверку результатов прохождения 3-D Secure v2 и при успешном результате\n прохождения 3-D Secure v2 подтверждает инициированный платеж.\n При использовании одностадийной оплаты осуществляет списание денежных средств с карты\n клиента.\n При двухстадийной оплате осуществляет блокировку указанной суммы на карте клиента. \n\n *Формат запроса*: `x-www-form-urlencoded` <br>\n\n После получения на `cresCallbackUrl` Мерчанта ответа ACS с результатами прохождения 3-D Secure необходимо\n сформировать запрос к методу **Submit3DSAuthorizationV2**\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/x-www-form-urlencoded": {
							"schema": {
								"type": "object",
								"required": ["PaymentId", "TerminalKey", "Token"],
								"properties": {
									"PaymentId": {
										"description": "Уникальный идентификатор транзакции в системе Т‑Кассы\n",
										"type": "string",
										"examples": {
											"default": "10063"
										}
									},
									"TerminalKey": {
										"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
										"type": "string",
										"maxLength": 20,
										"examples": {
											"default": "testRegressBank"
										}
									},
									"Token": {
										"description": "Подпись запроса\n",
										"type": "string",
										"examples": {
											"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
										}
									}
								}
							}
						}
					}
				},
				"x-codeSamples": [
					{
						"lang": "Payload",
						"source": "<body onload=\"document.form.submit()\">\n<form name=\"form\" action=\"https://rest-api-test.tinkoff.ru/v2/Submit3DSAuthorizationV2\" method=\"post\">\n  <input type=\"hidden\" name=\"PaymentId\" value=\"10063\">\n  <input type=\"hidden\" name=\"TerminalKey\" value=\"TinkoffBankTest\">\n  <input type=\"hidden\" name=\"Token\" value=\"871199b37f207f0c4f721a37cdcc71dfcea880b4a4b85e3cf852c5dc1e99a8d6\" >\n</form>\n"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"OrderId",
										"Status",
										"TerminalKey",
										"Success",
										"ErrorCode",
										"PaymentId"
									],
									"properties": {
										"OrderId": {
											"description": "Номер заказа в системе Мерчанта\n",
											"type": "string",
											"examples": {
												"default": "21050"
											}
										},
										"TerminalKey": {
											"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
											"type": "string",
											"examples": {
												"default": "TinkoffBankTest"
											}
										},
										"Status": {
											"description": "Статус транзакции\n",
											"type": "string",
											"examples": {
												"default": "CONFIRMED"
											}
										},
										"PaymentId": {
											"description": "Уникальный идентификатор транзакции в системе Т‑Кассы\n",
											"type": "string",
											"examples": {
												"default": "10063"
											}
										},
										"Success": {
											"description": "Успешность прохождения запроса (true/false)\n",
											"type": "boolean",
											"examples": {
												"default": true
											}
										},
										"ErrorCode": {
											"description": "Код ошибки. «0» в случае успеха\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "0"
											}
										},
										"Message": {
											"description": "Краткое описание ошибки\n",
											"type": "string"
										},
										"Details": {
											"description": "Подробное описание ошибки\n",
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/TinkoffPay/terminals/{TerminalKey}/status": {
			"get": {
				"operationId": "Status",
				"tags": ["Оплата через T‑Pay"],
				"summary": "Статус",
				"description": "Метод определения возможности проведения платежа T‑Pay на терминале и устройстве\n",
				"parameters": [
					{
						"in": "path",
						"name": "TerminalKey",
						"schema": {
							"type": "string",
							"maxLength": 20,
							"examples": {
								"default": "testRegress"
							}
						},
						"required": true,
						"description": "Платежный ключ, выдается Мерчанту при заведении\nтерминала\n"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["Params", "Success", "ErrorCode"],
									"properties": {
										"Params": {
											"description": "Параметры ответа\n",
											"type": "object",
											"required": ["Allowed"],
											"properties": {
												"Allowed": {
													"description": "Наличие возможности проведения оплаты\nT‑Pay по API, SDK\n",
													"type": "boolean",
													"examples": {
														"default": true
													}
												},
												"Version": {
													"description": "Версия T‑Pay, доступная на терминале:\n* 1.0 (e-invoice),\n* 2.0 (T‑Pay).\n",
													"type": "string",
													"examples": {
														"default": "1.0"
													}
												}
											}
										},
										"Success": {
											"description": "Успешность прохождения запроса (true/false)\n",
											"type": "boolean",
											"examples": {
												"default": true
											}
										},
										"ErrorCode": {
											"description": "Код ошибки. «0» в случае успеха\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "0"
											}
										},
										"Message": {
											"description": "Краткое описание ошибки\n",
											"type": "string"
										},
										"Details": {
											"description": "Подробное описание ошибки\n",
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/TinkoffPay/transactions/{paymentId}/versions/{version}/link": {
			"get": {
				"operationId": "Link",
				"tags": ["Оплата через T‑Pay"],
				"summary": "Получение ссылки",
				"description": "Метод получения Link для безусловного редиректа на мобильных устройствах\n",
				"parameters": [
					{
						"in": "path",
						"name": "paymentId",
						"schema": {
							"type": "number",
							"maxLength": 20,
							"examples": {
								"default": 13660
							}
						},
						"required": true,
						"description": "Идентификатор платежа в системе Т‑Кассы\n"
					},
					{
						"in": "path",
						"name": "version",
						"required": true,
						"schema": {
							"type": "string",
							"examples": {
								"default": "2.0"
							}
						},
						"description": "Версия T‑Pay, доступная на терминале:\n* 2.0 (T‑Pay)\n"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["Params", "Success", "ErrorCode"],
									"properties": {
										"Params": {
											"description": "Параметры ответа\n",
											"type": "object",
											"required": ["RedirectUrl"],
											"properties": {
												"RedirectUrl": {
													"description": "Link для перехода в приложение MB на мобильных\nустройствах\n",
													"type": "string",
													"format": "uri",
													"examples": {
														"default": "tinkoffbank://Main/EInvoicing?billId=5000015507&providerId=e-invoicing"
													}
												},
												"WebQR": {
													"description": "URL для получения QR\n",
													"type": "string",
													"format": "uri"
												}
											}
										},
										"Success": {
											"description": "Успешность прохождения запроса (true/false)\n",
											"type": "boolean",
											"examples": {
												"default": true
											}
										},
										"ErrorCode": {
											"description": "Код ошибки. «0» в случае успеха\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "0"
											}
										},
										"Message": {
											"description": "Краткое описание ошибки\n",
											"type": "string"
										},
										"Details": {
											"description": "Подробное описание ошибки\n",
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/TinkoffPay/{paymentId}/QR": {
			"get": {
				"operationId": "QR",
				"deprecated": false,
				"tags": ["Оплата через T‑Pay"],
				"summary": "Получение QR",
				"description": "Метод получения QR для десктопов\n",
				"parameters": [
					{
						"in": "path",
						"name": "paymentId",
						"schema": {
							"type": "number",
							"examples": {
								"default": 700001702044
							}
						},
						"required": true,
						"description": "Уникальный идентификатор транзакции в\nсистеме Т‑Кассы\n"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"image/svg": {}
						}
					}
				}
			}
		},
		"/v2/SberPay/{paymentId}/QR": {
			"get": {
				"operationId": "SberPayQR",
				"deprecated": false,
				"tags": ["Оплата через SberPay"],
				"summary": "Получение QR",
				"description": "Метод получения QR для десктопов\n",
				"parameters": [
					{
						"in": "path",
						"name": "paymentId",
						"schema": {
							"type": "string",
							"examples": {
								"default": "700001702044"
							}
						},
						"required": true,
						"description": "Уникальный идентификатор транзакции в\nсистеме Т‑Кассы\n"
					}
				],
				"responses": {
					"200": {
						"description": "SVG QR, размером 124*124",
						"content": {
							"image/svg": {}
						}
					}
				}
			}
		},
		"/v2/SberPay/transactions/{paymentId}/link": {
			"get": {
				"operationId": "SberPaylink",
				"deprecated": false,
				"tags": ["Оплата через SberPay"],
				"summary": "Получение ссылки",
				"description": "Получение ссылки\n",
				"parameters": [
					{
						"in": "path",
						"name": "paymentId",
						"schema": {
							"type": "number",
							"examples": {
								"default": 700001702044
							}
						},
						"required": true,
						"description": "Уникальный идентификатор транзакции в\nсистеме Т‑Кассы\n"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["Params", "Success", "ErrorCode"],
									"properties": {
										"Params": {
											"description": "Параметры ответа\n",
											"type": "object",
											"required": ["RedirectUrl"],
											"properties": {
												"RedirectUrl": {
													"description": "URL для перехода \n",
													"type": "string",
													"format": "uri",
													"examples": {
														"default": "tinkoffbank://Main/EInvoicing?billId=5000015507&providerId=e-invoicing"
													}
												}
											}
										},
										"Success": {
											"description": "Успешность прохождения запроса (true/false)\n",
											"type": "boolean",
											"examples": {
												"default": true
											}
										},
										"ErrorCode": {
											"description": "Код ошибки. «0» в случае успеха\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "0"
											}
										},
										"Message": {
											"description": "Краткое описание ошибки\n",
											"type": "string"
										},
										"Details": {
											"description": "Подробное описание ошибки\n",
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/TinkoffPayEvent": {
			"post": {
				"operationId": "T-PayEvent",
				"tags": ["Оплата через T‑Pay"],
				"summary": "Передача уведомления о событии",
				"description": "Передача уведомления о событии платежного виджета T‑Pay + T‑ID",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/T-PayEvent"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["Success", "ErrorCode"],
									"properties": {
										"Success": {
											"type": "boolean",
											"description": "Успешность прохождения запроса (true/false)",
											"enum": [true, false],
											"examples": {
												"default": "true"
											}
										},
										"ErrorCode": {
											"type": "string",
											"description": "Код ошибки. «0» — если успешно",
											"examples": {
												"default": 0
											}
										},
										"Message": {
											"type": "string",
											"description": "Краткое описание ошибки"
										},
										"Details": {
											"type": "string",
											"description": "Подробное описание ошибки"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/QrMembersList": {
			"servers": [
				{
					"url": "https://securepay.tinkoff.ru",
					"description": "production"
				}
			],
			"post": {
				"operationId": "QrMembersList",
				"tags": ["Оплата через СБП"],
				"summary": "Список банков-пользователей QR",
				"description": "Метод возвращает список участников куда может быть осуществлен возврат платежа, совершенного\nпо QR\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": ["TerminalKey", "PaymentId", "Token"],
								"properties": {
									"TerminalKey": {
										"type": "string",
										"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
										"examples": {
											"default": "TinkoffBankTest"
										}
									},
									"PaymentId": {
										"type": "string",
										"description": "Уникальный идентификатор транзакции в системе\nТ‑Кассы\n",
										"examples": {
											"default": "10063"
										}
									},
									"Token": {
										"type": "string",
										"description": "Подпись запроса",
										"examples": {
											"default": "871199b37f207f0c4f721a37cdcc71dfcea880b4a4b85e3cf852c5dc1e99a8d6"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["OrderId", "Success", "ErrorCode"],
									"properties": {
										"Members": {
											"type": "array",
											"description": "Массив списка участников. Возвращается\nтолько если возврат возможен\n",
											"items": {
												"$ref": "#/components/schemas/Member"
											}
										},
										"OrderId": {
											"description": "Идентификатор заказа в системе Мерчанта\n",
											"type": "string",
											"maxLength": 36,
											"examples": {
												"default": "21050"
											}
										},
										"Success": {
											"description": "Успешность прохождения запроса (true/false)\n",
											"type": "boolean",
											"examples": {
												"default": true
											}
										},
										"ErrorCode": {
											"description": "Код ошибки. «0» в случае успеха\n",
											"type": "string",
											"maxLength": 20,
											"examples": {
												"default": "0"
											}
										},
										"Message": {
											"description": "Краткое описание ошибки\n",
											"type": "string",
											"examples": {
												"default": "OK"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v2/AddAccountQr": {
			"servers": [
				{
					"url": "https://securepay.tinkoff.ru",
					"description": "production"
				}
			],
			"post": {
				"operationId": "AddAccountQr",
				"tags": ["Оплата через СБП"],
				"summary": "Привязка счёта к магазину",
				"description": "Метод инициирует привязку счета клиента к магазину\nи возвращает информацию о нем\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddAccountQr"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddAccountQrResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/GetAddAccountQrState": {
			"servers": [
				{
					"url": "https://securepay.tinkoff.ru",
					"description": "production"
				}
			],
			"post": {
				"operationId": "GetAddAccountQrState",
				"summary": "Получение статуса привязки счета к магазину",
				"tags": ["Оплата через СБП"],
				"description": "Метод возвращает статус привязки счета клиента по магазину\n",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetAddAccountQrState"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAddAccountQrStateResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/GetAccountQrList": {
			"servers": [
				{
					"url": "https://securepay.tinkoff.ru",
					"description": "production"
				}
			],
			"post": {
				"operationId": "GetAccountQrList",
				"summary": "Получение списка счетов, привязанных к магазину",
				"tags": ["Оплата через СБП"],
				"description": "Метод возвращает список привязанных счетов клиента по магазину",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetAccountQrList"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAccountQrListResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/ChargeQr": {
			"servers": [
				{
					"url": "https://securepay.tinkoff.ru",
					"description": "production"
				}
			],
			"post": {
				"operationId": "ChargeQr",
				"tags": ["Оплата через СБП"],
				"summary": "Автоплатеж по QR",
				"description": "Проведение платежа по привязанному счету по QR через СБП.\nДля возможности его использования клиент должен совершить успешную привязку счета с \nпомощью метода **AddAccountQr**. После вызова метода будет отправлена нотификация на Notification\nURL о привязке счета , в которой будет указан AccountToken.\nДля совершения платежа по привязанному счету Мерчант должен вызвать метод **Init**, в котором поля \n**Recurrent= Y** и **DATA= {“QR”:“true”}**, а затем вызвать метод **ChargeQr** для оплаты по тем же самым \nреквизитам и передать параметр **AccountToken**, полученный после привязки счета по QR в \nнотификации.\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChargeQr"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChargeQrResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/SbpPayTest": {
			"servers": [
				{
					"url": "https://securepay.tinkoff.ru",
					"description": "production"
				}
			],
			"post": {
				"operationId": "SbpPayTest",
				"tags": ["Оплата через СБП"],
				"summary": "Создание тестовой платежной сессии",
				"description": "Тестовая платежная сессия с предопределенным статусом по СБП",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SbpPayTest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SbpPayTestResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/GetQrState": {
			"servers": [
				{
					"url": "https://securepay.tinkoff.ru",
					"description": "production"
				}
			],
			"post": {
				"operationId": "GetQrState",
				"tags": ["Оплата через СБП"],
				"summary": "Получение статуса возврата",
				"description": "Возвращает статус возврата платежа по СБП\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": ["TerminalKey", "PaymentId", "Token"],
								"properties": {
									"TerminalKey": {
										"type": "string",
										"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
										"examples": {
											"default": "TinkoffBankTest"
										}
									},
									"PaymentId": {
										"type": "string",
										"description": "Уникальный идентификатор транзакции в системе\nТ‑Кассы, полученный в ответе на вызов метода Init\n",
										"examples": {
											"default": "700031849"
										}
									},
									"Token": {
										"type": "string",
										"description": "Подпись запроса\n",
										"examples": {
											"default": "l43kb4hyi6lknb23bv4gdfskjn238fsllsdf8"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/GetQRStateResponse_FULL"
										},
										{
											"$ref": "#/components/schemas/GetQRStateResponse_SDK"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/v2/CheckOrder": {
			"post": {
				"operationId": "CheckOrder",
				"tags": ["Стандартный платеж"],
				"summary": "Получение статуса заказа",
				"description": "Метод возвращает статус заказа\n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CheckOrder"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CheckOrder-2"
								}
							}
						}
					}
				}
			}
		},
		"/cashbox/SendClosingReceipt": {
			"post": {
				"operationId": "SendClosingReceipt",
				"tags": ["Методы работы с чеками"],
				"summary": "Закрывающий чек в кассу",
				"description": "Метод позволяет отправить закрывающий чек в кассу.\nУсловия работы метода:\n1. Закрывающий чек может быть отправлен если платежная сессия по первому чеку находится в\n  статусе **CONFIRMED**.\n2. В платежной сессии был передан объект `Receipt`.\n3. В объекте `Receipt` был передан хотя бы один объект `Receipt.Items.PaymentMethod` =\n  `full_prepayment` или `prepayment` или `advance`.      \n",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SendClosingReceipt"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SendClosingReceipt-2"
								}
							}
						}
					}
				}
			}
		},
		"/v2/GetDeepLink": {
			"post": {
				"operationId": "GetDeepLink",
				"tags": ["Оплата через MirPay"],
				"summary": "Получить DeepLink",
				"description": "Получение deeplink с включенным подписанным JWT-токеном. Предназначен для запроса по API",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetDeepLink"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetDeepLinkResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/GetTerminalPayMethods": {
			"get": {
				"operationId": "GetTerminalPayMethods",
				"tags": ["Оплата через MirPay"],
				"summary": "Проверить доступность методов на SDK",
				"description": "Метод определяет доступность методов оплаты на терминале для SDK и API. Запрос не шифруется токеном",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetTerminalPayMethods"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetTerminalPayMethodsResponse"
								}
							}
						}
					}
				}
			}
		},
		"/v2/getConfirmOperation": {
			"post": {
				"operationId": "GetConfirmOperation",
				"tags": ["Стандартный платеж"],
				"description": "Справку по конкретной операции можно получить на: <br> 1. URL-сервиса, развернутого на своей стороне. <br> 2. Электронную почту. <br> Для формирования токена необходимо использовать только <b>PASSWORD</b> и <b>TERMINAL_KEY</b>",
				"summary": "Получение справки по операции",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/by_url"
									},
									{
										"$ref": "#/components/schemas/by_email"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/response_by_url"
										},
										{
											"$ref": "#/components/schemas/response_by_email"
										}
									]
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"Common": {
				"type": "object",
				"properties": {
					"additionalProperties": {
						"type": "string"
					},
					"OperationInitiatorType": {
						"type": "string",
						"description": "Признак инициатора операции\n* '0' — оплата без сохранения реквизитов карты для последующего использования. Cценарий \"0 — CIT, Credential-Not-Captured\"\n* '1' — используется, если Мерчант сохраняет карту. Cценарий — \"1 — Consumer-Initiated, Credential-Captured\"\n* '2' — операция по ранее сохранённой карте, инициирована клиентом. Cценарий — \"2 — Consumer-Initiated, Credential-on-File\"\n* 'R' — повторяющаяся операция по сохранённой карте без графика. Является Merchant Initiated сценарием (\"R = Merchant-Initiated, Credential-on-File, Recurring\")\n* 'I' — повторяющаяся операция по сохраненной карте в соответствии с графиком платежей для погашения кредита. Является Merchant Initiated сценарием (\"I = Merchant-Initiated, Credential-on-File, Installment\") \n\nПри передаче в объекте DATA атрибута OperationInitiatorType учитывать взаимосвязь его значений с:\n  * значением атрибута Reccurent в методе /Init;\n  * значением атрибута RebillId в методе /Charge;\n  * типом терминала, используемом для проведения операций (ECOM/AFT).\n \n  Подробную таблицу см. в разделе [Передача признака инициатора операции](#section/Peredacha-priznaka-iniciatora-operacii)\n\n  В случае передачи значений атрибутов не соответствующих таблице — MAPI вернет ошибку 1126 \n  (Несопоставимые значения rebillId или Recurrent с переданным значением OperationInitiatorType)\n",
						"enum": ["0", "1", "2", "R", "I"]
					}
				}
			},
			"T-Pay": {
				"type": "object",
				"properties": {
					"Device": {
						"description": "Тип устройства\n* SDK (вызов из мобильных приложений);\n* Desktop (вызов из браузера с десктопа);\n* MobileWeb (вызов из браузера с мобильных устройств).\n",
						"type": "string",
						"enum": ["SDK", "Desktop", "MobileWeb"],
						"examples": {
							"default": "Desktop"
						}
					},
					"DeviceOs": {
						"description": "ОС устройства",
						"type": "string",
						"examples": {
							"default": "iOS"
						}
					},
					"DeviceWebView": {
						"description": "Признак открытия в WebView",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"DeviceBrowser": {
						"description": "Браузер",
						"type": "string",
						"examples": {
							"default": "Safari"
						}
					},
					"TinkoffPayWeb": {
						"description": "Признак проведения операции через T‑Pay по API",
						"type": "boolean",
						"examples": {
							"default": true
						}
					}
				}
			},
			"YandexPay": {
				"type": "object",
				"required": ["YandexPayWeb"],
				"properties": {
					"YandexPayWeb": {
						"description": "Признак проведения операции через Yandex Pay",
						"type": "boolean",
						"examples": {
							"default": true
						}
					}
				}
			},
			"LongPay1": {
				"properties": {
					"ticketNumber": {
						"description": "Номера билетов (с контрольной цифрой) для всех пассажиров, летящих по одному маршруту. В качестве разделителя используйте ';'<br>Необязателен, если передан параметр ticketReservationNumber\n",
						"type": "string"
					},
					"ticketReservationNumber": {
						"description": "Номера билетов (с контрольной цифрой) для всех пассажиров, летящих по одному маршруту. В качестве разделителя используйте ';'<br>Необязателен, если передан параметр ticketNumber\n",
						"type": "string"
					},
					"ticketSystem": {
						"description": "Код системы продажи",
						"type": "string"
					},
					"ticketAgencyCode": {
						"description": "Код агентства",
						"type": "string"
					},
					"ticketAgencyName": {
						"description": "Название агентства",
						"type": "string"
					},
					"ticketRestricted": {
						"description": "Ограничения билета:\n        * 0 — без ограничений,\n        * 1 — невозвратный.\n",
						"type": "string"
					}
				}
			},
			"LongPay2": {
				"description": "% — порядковый номер пассажира от 1 до 4\n",
				"required": ["ticketPassengerSurname%", "ticketPassengerFirstname%"],
				"properties": {
					"ticketPassengerSurname%": {
						"description": "Фамилия латиницей",
						"type": "string"
					},
					"ticketPassengerFirstname%": {
						"description": "Имя латиницей",
						"type": "string"
					},
					"passengerPassport%": {
						"description": "Серия и номер паспорта",
						"type": "string"
					},
					"passengerCountry%": {
						"description": "Гражданство. По стандарту ISO 3166-1 alpha-3",
						"type": "string"
					},
					"ticketPassengerBirthDate%": {
						"description": "Дата рождения. В формате YYYY-DD-MM",
						"type": "string"
					}
				}
			},
			"LongPay3": {
				"description": "\\# — порядковый номер пассажира от 1 до 4",
				"required": [
					"triplegDate#",
					"triplegCarrier#",
					"triplegDestinationFrom#",
					"triplegDestinationTo#"
				],
				"properties": {
					"triplegDate#": {
						"description": "Дата вылета. В формате YYYY-DD-MM",
						"type": "string"
					},
					"triplegTime#": {
						"description": "Время вылета. В формате hh24:mm:ss",
						"type": "string"
					},
					"triplegCarrier#": {
						"description": "Код перевозчика ИАТА",
						"type": "string"
					},
					"triplegFlightNumber#": {
						"description": "Номер рейса",
						"type": "string"
					},
					"triplegClass#": {
						"description": "Класс перелета",
						"type": "string"
					},
					"triplegDestinationFrom#": {
						"description": "Код аэропорта вылета ИАТА",
						"type": "string"
					},
					"triplegDestinationTo#": {
						"description": "Код аэропорта прилета ИАТА",
						"type": "string"
					},
					"triplegCountryFrom#": {
						"description": "Код страны вылета. По стандарту ISO 3166-1 numeric",
						"type": "string"
					},
					"triplegCountryTo#": {
						"description": "Код страны прилета. По стандарту ISO 3166-1 numeric",
						"type": "string"
					},
					"triplegStopover#": {
						"description": "Остановка при пересадке:\n* 0 — разрешена,\n* X — запрещена.        \n",
						"type": "string"
					},
					"triplegFareBasisCode#": {
						"description": "Код тарифа",
						"type": "string"
					}
				}
			},
			"LongPay": {
				"description": "Расширенный набор параметров авиабилета передается при создании платежа (метод Init) в параметре DATA",
				"type": "object",
				"properties": {
					"Параметры билета": {
						"type": "array",
						"$ref": "#/components/schemas/LongPay1"
					},
					"Параметры пассажира": {
						"type": "array",
						"$ref": "#/components/schemas/LongPay2"
					},
					"Параметры перелета": {
						"type": "array",
						"$ref": "#/components/schemas/LongPay3"
					}
				}
			},
			"AgentData": {
				"type": "object",
				"description": "Данные агента. Обязателен, если используется агентская схема.\n",
				"properties": {
					"AgentSign": {
						"description": "`Тег ФФД: 1222`<br>\nПризнак агента. Возможные значения:\n* bank_paying_agent — банковский платежный агент,\n* bank_paying_subagent — банковский платежный субагент,\n* paying_agent — платежный агент,\n* paying_subagent — платежный субагент,\n* attorney — поверенный,\n* commission_agent — комиссионер,\n* another — другой тип агента.\n",
						"type": "string",
						"examples": {
							"default": "paying_agent"
						}
					},
					"OperationName": {
						"description": "`Тег ФФД: 1044`<br>\nНаименование операции.\nАтрибут обязателен, если AgentSign передан в значениях:\n* bank_paying_agent,\n* bank_paying_subagent.\n",
						"type": "string",
						"maxLength": 64,
						"examples": {
							"default": "Позиция чека"
						}
					},
					"Phones": {
						"description": "`Тег ФФД: 1073`<br>\nТелефоны платежного агента, в формате +{Ц}.\nАтрибут обязателен, если в AgentSign передан в значениях:\n* bank_paying_agent,\n* bank_paying_subagent,\n* paying_agent,\n* paying_subagent.\n",
						"type": "array",
						"items": {
							"type": "string",
							"minLength": 1,
							"maxLength": 19
						},
						"examples": {
							"default": ["+790912312398"]
						}
					},
					"ReceiverPhones": {
						"description": "`Тег ФФД: 1074`<br>\nТелефоны оператора по приему платежей, в формате +{Ц}.\nАтрибут обязателен, если в AgentSign передан в значениях:\n* paying_agent,\n* paying_subagent.\n",
						"items": {
							"type": "string",
							"minLength": 1,
							"maxLength": 19
						},
						"examples": {
							"default": ["+79221210697", "+79098561231"]
						}
					},
					"TransferPhones": {
						"description": "`Тег ФФД: 1075`<br>\nТелефоны оператора перевода, в формате +{Ц}.\nАтрибут обязателен, если в AgentSign передан в значениях:\n* bank_paying_agent,\n* bank_paying_subagent.\n",
						"items": {
							"type": "string",
							"minLength": 1,
							"maxLength": 19
						},
						"examples": {
							"default": ["+79221210697"]
						}
					},
					"OperatorName": {
						"description": "`Тег ФФД: 1026`<br>\nНаименование оператора перевода.\nАтрибут обязателен, если в AgentSign передан в значениях:\n* bank_paying_agent,\n* bank_paying_subagent.\n",
						"type": "string",
						"maxLength": 64,
						"examples": {
							"default": "Tinkoff"
						}
					},
					"OperatorAddress": {
						"description": "`Тег ФФД: 1005`<br>\nАдрес оператора перевода.\nАтрибут обязателен, если в AgentSign передан в значениях:\n* bank_paying_agent,\n* bank_paying_subagent.\n",
						"type": "string",
						"maxLength": 243,
						"examples": {
							"default": "г. Тольятти"
						}
					},
					"OperatorInn": {
						"description": "`Тег ФФД: 1016`<br>\nИНН оператора перевода.\nАтрибут обязателен, если в AgentSign передан в значениях:\n* bank_paying_agent,\n* bank_paying_subagent.\n",
						"type": "string",
						"maxLength": 12,
						"examples": {
							"default": "7710140679"
						}
					}
				}
			},
			"SupplierInfo": {
				"type": "object",
				"description": "Данные поставщика платежного агента. \nОбязателен, если передается значение AgentSign в объекте AgentData\n",
				"properties": {
					"Phones": {
						"description": "`Тег ФФД: 1171`<br>\nТелефон поставщика, в формате +{Ц}.\nАтрибут обязателен, если передается значение `AgentSign`\nв объекте `AgentData`\n",
						"type": "array",
						"items": {
							"type": "string",
							"minLength": 1,
							"maxLength": 19
						},
						"examples": {
							"default": ["+79221210697", "+79098561231"]
						}
					},
					"Name": {
						"description": "`Тег ФФД: 1225`<br>\nНаименование поставщика.\nАтрибут обязателен, если передается значение `AgentSign` \nв объекте `AgentData`.\nВнимание: в данные 239 символов включаются телефоны поставщика \n+ 4 символа на каждый телефон.\nНапример, если передано два телефона поставщика длиной 12 и 14 символов, \nто максимальная длина наименования поставщика будет \n239 – (12 + 4) – (14 + 4) = 205 символов\n",
						"type": "string",
						"maxLength": 239,
						"examples": {
							"default": "ООО Вендор товара"
						}
					},
					"Inn": {
						"description": "`Тег ФФД: 1226`<br>\nИНН поставщика, в формате ЦЦЦЦЦЦЦЦЦЦ.\nАтрибут обязателен, если передается значение `AgentSign` \nв объекте `AgentData`\n",
						"type": "string",
						"minLength": 10,
						"maxLength": 12,
						"examples": {
							"default": "7710140679"
						}
					}
				}
			},
			"Items_FFD_105": {
				"type": "object",
				"required": ["Name", "Price", "Quantity", "Amount", "Tax"],
				"properties": {
					"Name": {
						"description": "`Тег ФФД: 1030`<br>\nНаименование товара\n",
						"type": "string",
						"maxLength": 128,
						"examples": {
							"default": "Наименование товара 1"
						}
					},
					"Price": {
						"description": "`Тег ФФД: 1078`<br>\nЦена в копейках\n",
						"type": "number",
						"examples": {
							"default": 10000
						}
					},
					"Quantity": {
						"description": "`Тег ФФД: 1023`<br>\nКоличество или вес товара\n* Максимальное количество символов — 8, где целая часть не более 5 знаков, а дробная часть не более 3 знаков для АТОЛ, не более 2 знаков для CloudPayments\n",
						"type": "number",
						"maxLength": 8,
						"examples": {
							"default": 1
						}
					},
					"Amount": {
						"description": "`Тег ФФД: 1043`<br>\nСтоимость товара в копейках.\nПроизведение Quantity и Price\n",
						"type": "number",
						"maxLength": 10,
						"examples": {
							"default": 10000
						}
					},
					"PaymentMethod": {
						"description": "`Тег ФФД: 1214`<br>\nПризнак способа расчета \nВозможные значения:\n* «full_prepayment» — предоплата 100%,\n* «prepayment» — предоплата,\n* «advance» — аванс,\n* «full_payment» — полный расчет,\n* «partial_payment» — частичный расчет и кредит,\n* «credit» — передача в кредит,\n* «credit_payment» — оплата кредита.\n<br>Если значение не\nпередано, по умолчанию в онлайн-кассу\nпередается признак способа расчёта\n\"full_payment\"\n",
						"type": "string",
						"enum": [
							"full_prepayment",
							"prepayment",
							"advance",
							"full_payment",
							"partial_payment",
							"credit",
							"credit_payment"
						],
						"default": "full_payment"
					},
					"PaymentObject": {
						"description": "`Тег ФФД: 1212`<br>\nПризнак предмета расчета\nВозможные значения:\n* commodity — товар,\n* excise — подакцизный товар,\n* job — работа,\n* service — услуга,\n* gambling_bet — ставка азартной игры,\n* gambling_prize — выигрыш азартной игры,\n* lottery — лотерейный билет,\n* lottery_prize — выигрыш лотереи,\n* intellectual_activity — предоставление результатов интеллектуальной деятельности,\n* payment — платеж,\n* agent_commission — агентское вознаграждение,\n* composite — составной предмет расчета,\n* another — иной предмет расчета,\n<br>Если значение не передано, по умолчанию в онлайн-кассу\nотправляется признак предмета расчёта \"commodity\"\n",
						"type": "string",
						"enum": [
							"commodity",
							"excise",
							"job",
							"service",
							"gambling_bet",
							"gambling_prize",
							"lottery",
							"lottery_prize",
							"intellectual_activity",
							"payment",
							"agent_commission",
							"composite",
							"another"
						],
						"default": "commodity"
					},
					"Tax": {
						"description": "`Тег ФФД: 1199`<br>\nСтавка НДС\nПеречисление со значениями:\n* none — без НДС,\n* vat0 — НДС по ставке 0%,\n* vat10 — НДС по ставке 10%,\n* vat20 — НДС по ставке 20%,\n* vat110 — НДС чека по расчетной ставке 10/110,\n* vat120 — НДС чека по расчетной ставке 20/120.\n",
						"type": "string",
						"enum": ["none", "vat0", "vat10", "vat20", "vat110", "vat120"],
						"examples": {
							"default": "vat10"
						}
					},
					"Ean13": {
						"description": "`Тег ФФД: 1162`<br>\nШтрих-код в требуемом формате. В зависимости от\nтипа кассы требования могут отличаться:\n* АТОЛ Онлайн — шестнадцатеричное\nпредставление с пробелами. Максимальная\nдлина – 32 байта (^[a-fA-F0-9]{2}$)|(^([afA-F0-9]{2}\\\\s){1,31}[a-fA-F0-9]{2}$).\nПример:\n00 00 00 01 00 21 FA 41 00 23 05 41 00\n00 00 00 00 00 00 00 00 00 00 00 00 00\n00 00 12 00 AB 00\n* CloudKassir — длина строки: четная, от 8 до\n150 байт, т.е. от 16 до 300 ASCII символов\n['0' - '9' , 'A' - 'F' ] шестнадцатеричного\nпредставления кода маркировки товара.\nПример:\n303130323930303030630333435\n* OrangeData — строка, содержащая base64\nкодированный массив от 8 до 32 байт.\nПример:\nigQVAAADMTIzNDU2Nzg5MDEyMwAAAAAAAQ==\n<br>В случае передачи в запросе параметра Ean13 не\nпрошедшего валидацию, возвращается неуспешный\nответ с текстом ошибки в параметре message =\n\"Неверный параметр Ean13\"\n",
						"type": "string",
						"maxLength": 300,
						"examples": {
							"default": "0123456789"
						}
					},
					"ShopCode": {
						"description": "Код магазина. Для параметра ShopСode\nнеобходимо использовать значение параметра\nSubmerchant_ID, полученного в ответ при\nрегистрации магазинов через xml. Если xml не\nиспользуется, передавать поле не нужно.\n",
						"type": "string",
						"examples": {
							"default": "12345"
						}
					},
					"AgentData": {
						"description": "Данные агента.\nИспользуется при работе по агентской схеме\n",
						"$ref": "#/components/schemas/AgentData"
					},
					"SupplierInfo": {
						"description": "Данные поставщика платежного агента\nОбязателен, если передается значение AgentSign в объекте AgentData\n",
						"$ref": "#/components/schemas/SupplierInfo"
					}
				}
			},
			"Payments": {
				"type": "object",
				"description": "Детали платежа.\nЕсли объект не передан, будет автоматически указана итоговая сумма чека с видом оплаты \"Безналичный\". \nЕсли передан объект receipt.Payments, то значение в Electronic должно быть равно итоговому значению\nAmount в методе Init. При этом сумма введенных значений по всем видам оплат, включая Electronic,\nдолжна быть равна сумме (Amount) всех товаров, переданных в объекте receipt.Items.\n",
				"required": ["Electronic"],
				"properties": {
					"Cash": {
						"description": "`Тег ФФД: 1031`<br>\nВид оплаты \"Наличные\"\nСумма к оплате в копейках\n",
						"type": "number",
						"maxLength": 14,
						"examples": {
							"default": 90000
						}
					},
					"Electronic": {
						"description": "`Тег ФФД: 1081`<br>\nВид оплаты \"Безналичный\"\n",
						"type": "number",
						"maxLength": 14,
						"examples": {
							"default": 50000
						}
					},
					"AdvancePayment": {
						"description": "`Тег ФФД: 1215`<br>\nВид оплаты \"Предварительная оплата (Аванс)\"\n",
						"type": "number",
						"maxLength": 14,
						"examples": {
							"default": 0
						}
					},
					"Credit": {
						"description": "`Тег ФФД: 1216`<br>\nВид оплаты \"Постоплата (Кредит)\"\n",
						"type": "number",
						"maxLength": 14,
						"examples": {
							"default": 0
						}
					},
					"Provision": {
						"description": "`Тег ФФД: 1217`<br>\nВид оплаты \"Иная форма оплаты\"\n",
						"type": "number",
						"maxLength": 14,
						"examples": {
							"default": 0
						}
					}
				}
			},
			"Receipt_FFD_105": {
				"type": "object",
				"description": "Объект с информацией о видах суммы платежа. Если объект не передан, то будет автоматически указана итоговая сумма чека с видом оплаты \"Безналичная\"",
				"required": ["Items", "Taxation"],
				"properties": {
					"Items": {
						"description": "Массив позиций чека с информацией о товарах",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Items_FFD_105"
						}
					},
					"FfdVersion": {
						"description": "Версия ФФД.\nВозможные значения:\n* \"FfdVersion\": \"1.2\",\n* \"FfdVersion\": \"1.05\".\nПо умолчанию версия ФФД - 1.05\n",
						"type": "string",
						"default": "1.05"
					},
					"Email": {
						"description": "`Тег ФФД: 1008`<br>\nЭлектронная почта клиента.\nАтрибут должен быть заполнен, если не передано значение \nв атрибуте “Phone” \n",
						"type": "string",
						"format": "email",
						"maxLength": 64,
						"examples": {
							"default": "a@test.ru"
						}
					},
					"Phone": {
						"description": "`Тег ФФД: 1008`<br>\nТелефон клиента в формате +{Ц}.\nАтрибут должен быть заполнен, если не передано значение \nв атрибуте “Email” \n",
						"type": "string",
						"maxLength": 64,
						"examples": {
							"default": "+79031234567"
						}
					},
					"Taxation": {
						"description": "`Тег ФФД: 1055`<br>\nСистема налогообложения. Перечисление с\nвозможными значениями:\n* \"osn\" — общая СН,\n* \"usn_income\" — упрощенная СН (доходы),\n* \"usn_income_outcome\" — упрощенная СН (доходы минус расходы),\n* \"envd\" — единый налог на вмененный доход,\n* \"esn\" — единый сельскохозяйственный налог,\n* \"patent\" — патентная СН.\n",
						"type": "string",
						"enum": [
							"osn",
							"usn_income",
							"usn_income_outcome",
							"envd",
							"esn",
							"patent"
						],
						"examples": {
							"default": "osn"
						}
					},
					"Payments": {
						"description": "Объект c информацией о видах суммы платежа.\nСм. структура объекта `Payments`\n1. Если объект не передан, будет автоматически указана итоговая \nсумма чека с видом оплаты \"Безналичный\";\n2. Если передан объект `receipt.Payments`, то значение в `Electronic`\nдолжно быть равно итоговому значению `Amount` в методе **Init**. \nПри этом сумма введенных значений по всем видам оплат, \nвключая `Electronic`, должна быть равна сумме (**Amount**) всех товаров, \nпереданных в объекте `receipt.Items`\n",
						"$ref": "#/components/schemas/Payments"
					}
				}
			},
			"ClientInfo": {
				"type": "object",
				"description": "Информация по клиенту.\n",
				"properties": {
					"Birthdate": {
						"description": "`Тег ФФД: 1243`<br>\nДата рождения клиента в формате ДД.ММ.ГГГГ \n",
						"type": "string"
					},
					"Citizenship": {
						"description": "`Тег ФФД: 1244`<br>\nЧисловой код страны, гражданином которой является\nклиент. Код страны указывается в соответствии с\nОбщероссийским классификатором стран мира [ОКСМ](https://classifikators.ru/oksm)\n",
						"type": "string"
					},
					"DocumentСode": {
						"description": "`Тег ФФД: 1245`<br>\nЧисловой код вида документа, удостоверяющего\nличность.\nМожет принимать только значения\n|Код|Описание|\n|---|---|\n| 21 | Паспорт гражданина Российской Федерации|\n| 22 | Паспорт гражданина Российской Федерации, дипломатический паспорт, служебный паспорт, удостоверяющие личность гражданина Российской Федерации за пределами Российской Федерации|\n| 26 | Временное удостоверение личности гражданина Российской Федерации, выдаваемое на период оформления паспорта гражданина Российской Федерации|\n| 27 | Свидетельство о рождении гражданина Российской Федерации (для граждан Российской Федерации в возрасте до 14 лет)|\n| 28 | Иные документы, признаваемые документами, удостоверяющими личность гражданина Российской Федерации в соответствии с законодательством Российской Федерации|\n| 31 | Паспорт иностранного гражданина|\n| 32 | Иные документы, признаваемые документами, удостоверяющими личность иностранного гражданина в соответствии с законодательством Российской Федерации и международным договором Российской Федерации|\n| 33 | Документ, выданный иностранным государством и признаваемый в соответствии с международным договором Российской Федерации в качестве документа, удостоверяющего личность лица безгражданства.|\n| 34 | Вид на жительство (для лиц без гражданства)|\n| 35 | Разрешение на временное проживание (для лиц без гражданства)|\n| 36 | Свидетельство о рассмотрении ходатайства о признании лица без гражданства беженцем на территории Российской Федерации по существу|\n| 37 | Удостоверение беженца|\n| 38 | Иные документы, признаваемые документами, удостоверяющими личность лиц без гражданства в соответствии с законодательством Российской Федерации и международным договором Российской Федерации|\n| 40 | Документ, удостоверяющий личность лица, не имеющего действительного документа, удостоверяющего личность, на период рассмотрения заявления о признании гражданином Российской Федерации или о приеме в гражданство Российской Федерации|\n",
						"type": "string",
						"examples": {
							"default": "21"
						}
					},
					"DocumentData": {
						"description": "`Тег ФФД: 1246`<br>\nРеквизиты документа, удостоверяющего личность\n(например: серия и номер паспорта)\n",
						"type": "string"
					},
					"Address": {
						"description": "`Тег ФФД: 1254`<br>\nАдрес клиента, грузополучателя\n",
						"type": "string",
						"maxLength": 256
					}
				}
			},
			"MarkCode": {
				"type": "object",
				"description": "Код маркировки в машиночитаемой форме,\nпредставленный в виде одного из видов кодов,\nформируемых в соответствии с требованиями,\nпредусмотренными правилами, для нанесения\nна потребительскую упаковку, или на товары,\nили на товарный ярлык\n* Включается в чек в случае, если предметом расчета является товар, подлежащий обязательной маркировке средством идентификации (соответствующий код в поле paymentObject)\n",
				"required": ["MarkCodeType", "Value"],
				"properties": {
					"MarkCodeType": {
						"description": "Тип штрих кода.\nВозможные значения:\n* UNKNOWN — код товара, формат которого не\nидентифицирован, как один из реквизитов;\n* EAN8 — код товара в формате EAN-8;\n* EAN13 — код товара в формате EAN-13;\n* ITF14 — код товара в формате ITF-14;\n* GS10 — код товара в формате GS1,\nнанесенный на товар, не подлежащий\nмаркировке;\n* GS1M — код товара в формате GS1,\nнанесенный на товар, подлежащий\nмаркировке;\n* SHORT — код товара в формате короткого кода\nмаркировки, нанесенный на товар;\n* FUR — контрольно-идентификационный знак\nмехового изделия;\n* EGAIS20 — код товара в формате ЕГАИС-2.0;\n* EGAIS30 — код товара в формате ЕГАИС-3.0;\n* RAWCODE — код маркировки, как он был прочитан сканером.\n",
						"type": "string",
						"examples": {
							"default": "EAN8"
						}
					},
					"Value": {
						"description": "Код маркировки\n",
						"type": "string",
						"examples": {
							"default": "12345678"
						}
					}
				}
			},
			"MarkQuantity": {
				"type": "object",
				"description": "Реквизит «дробное количество маркированного товара».\nПередается только в случае, если расчет осуществляется \nза маркированный товар (соответствующий код в поле \npaymentObject) и значение в поле measurementUnit \nравно «0» <br> MarkQuantity не является обязательным объектом, в том числе для товаров с маркировкой. Этот объект МОЖНО передавать, если товар с маркировкой. То есть даже при ФФД 1.2 этот объект не является обязательным.\nПример: \n```\n      {\n      \"numenator\": \"1\"\n      \"denominator\" \"2\"  \n      }\n```\n",
				"properties": {
					"Numerator": {
						"description": "`Тег ФФД: 1293`<br>\nЧислитель дробной части предмета расчета. \nЗначение должно быть строго меньше\nзначения реквизита «знаменатель»\n",
						"type": "number",
						"examples": {
							"default": 1
						}
					},
					"Denominator": {
						"description": "`Тег ФФД: 1294`<br>\nЗнаменатель дробной части предмета расчета. \nЗначение равно количеству товара в партии (упаковке), \nимеющей общий код маркировки товара\n",
						"type": "number",
						"examples": {
							"default": 2
						}
					}
				}
			},
			"SectoralItemProps": {
				"type": "object",
				"description": "Отраслевой реквизит предмета расчета. Необходимо указывать только для товаров подлежащих обязательной маркировке средством\nидентификации и включение данного реквизита предусмотрено НПА отраслевого регулирования для\nсоответствующей товарной группы\n",
				"required": ["FederalId", "Date", "Number", "Value"],
				"properties": {
					"FederalId": {
						"description": "`Тег ФФД: 1262`<br>\nИдентификатор ФОИВ (федеральный орган\nисполнительной власти)\n",
						"type": "string",
						"examples": {
							"default": "001"
						}
					},
					"Date": {
						"description": "`Тег ФФД: 1263`<br>\nДата нормативного акта ФОИВ\n",
						"type": "string",
						"format": "date",
						"examples": {
							"default": "21.11.2020"
						}
					},
					"Number": {
						"description": "`Тег ФФД: 1264`<br>\nНомер нормативного акта ФОИВ\n",
						"type": "string",
						"examples": {
							"default": "123/43"
						}
					},
					"Value": {
						"description": "`Тег ФФД: 1265`<br>\nСостав значений, определенных нормативным актом ФОИВ\n",
						"type": "string",
						"examples": {
							"default": "test value SectoralItemProps"
						}
					}
				}
			},
			"Items_FFD_12": {
				"type": "object",
				"description": "Массив, содержащий в себе информацию о товарах. <br>\nАтрибуты, предусмотренные в протоколе для отправки чеков по маркируемым товарам, не являются\nобязательными для товаров без маркировки. Если используется ФФД 1.2, но реализуемый товар — не\nподлежит маркировке, то поля можно не отправлять или отправить со значением null.\n",
				"required": [
					"Name",
					"Price",
					"Quantity",
					"Amount",
					"Tax",
					"PaymentMethod",
					"PaymentObject",
					"MeasurementUnit"
				],
				"properties": {
					"AgentData": {
						"type": "object",
						"$ref": "#/components/schemas/AgentData"
					},
					"SupplierInfo": {
						"type": "object",
						"$ref": "#/components/schemas/SupplierInfo"
					},
					"Name": {
						"description": "`Тег ФФД: 1030`<br>\nНаименование товара\n",
						"type": "string",
						"maxLength": 128,
						"examples": {
							"default": "Наименование товара 1"
						}
					},
					"Price": {
						"description": "`Тег ФФД: 1079`<br>\nЦена в копейках\n",
						"type": "number",
						"examples": {
							"default": 10000
						}
					},
					"Quantity": {
						"description": "`Тег ФФД: 1023`<br>\nКоличество или вес товара\n* Максимальное количество символов — 8, где целая часть не более 5 знаков, а дробная часть не более 3 знаков для Атол, не более 2 знаков для CloudPayments;\n* Значение «1», если передан объект MarkCode.\n",
						"type": "number",
						"maxLength": 8,
						"examples": {
							"default": 1
						}
					},
					"Amount": {
						"description": "`Тег ФФД: 1043`<br>\nСтоимость товара в копейках.\nПроизведение Quantity и Price\n",
						"type": "number",
						"maxLength": 10,
						"examples": {
							"default": 10000
						}
					},
					"Tax": {
						"description": "`Тег ФФД: 1199`<br>\nСтавка НДС.\nПеречисление со значениями:\n* none — без НДС,\n* vat0 — НДС по ставке 0%;\n* vat10 — НДС по ставке 10%;\n* vat20 — НДС по ставке 20%;\n* vat110 — НДС чека по расчетной ставке 10/110;\n* vat120 — НДС чека по расчетной ставке 20/120.\n",
						"type": "string",
						"enum": ["none", "vat0", "vat10", "vat20", "vat110", "vat120"],
						"examples": {
							"default": "vat10"
						}
					},
					"PaymentMethod": {
						"description": "`Тег ФФД: 1214`<br>\nПризнак способа расчёта. \nВозможные значения:\n * «full_prepayment» — предоплата 100%,\n * «prepayment» — предоплата,\n * «advance» — аванс,\n * «full_payment» — полный расчет,\n * «partial_payment» — частичный расчет и кредит,\n * «credit» — передача в кредит,\n * «credit_payment» — оплата кредита. <br>\nЕсли значение не\nпередано, по умолчанию в онлайн-кассу\nпередается признак способа расчёта\n\"full_payment\"\n",
						"type": "string",
						"enum": [
							"full_prepayment",
							"prepayment",
							"advance",
							"full_payment",
							"partial_payment",
							"credit",
							"credit_payment"
						],
						"examples": {
							"default": "full_prepayment"
						}
					},
					"PaymentObject": {
						"description": "`Тег ФФД: 1212`<br>\nЗначения реквизита \"признак предмета расчета\"\n(тег 1212) таблица 101\nВозможные значения:\n* «commodity» — товар,\n* «excise» — подакцизный товар\n* «job» — работа\n* «service» — услуга\n* «gambling_bet» — ставка азартной игры\n* «gambling_prize» — выигрыш азартной игры\n* «lottery» — лотерейный билет\n* «lottery_prize» — выигрыш лотереи\n* «intellectual_activity» — предоставление\n  результатов интеллектуальной деятельности\n* «payment» — платеж\n* «agent_commission» — агентское\n  вознаграждение\n* «contribution» — выплата\n* «property_rights» — имущественное право\n* «unrealization» — внереализационный доход\n* «tax_reduction» — иные платежи и взносы\n* «trade_fee» — торговый сбор\n* «resort_tax» — курортный сбор\n* «pledge» — залог\n* «income_decrease» — расход\n* «ie_pension_insurance_without_payments» — взносы на ОПС ИП\n* «ie_pension_insurance_with_payments» — взносы на ОПС\n* «ie_medical_insurance_without_payments» — взносы на ОМС ИП\n* «ie_medical_insurance_with_payments» — взносы на ОМС\n* «social_insurance» — взносы на ОСС\n* «casino_chips» — платеж казино\n* «agent_payment» — выдача ДС\n* «excisable_goods_without_marking_code» — АТНМ,\n* «excisable_goods_with_marking_code» — АТМ,\n* «goods_without_marking_code» — ТНМ,\n* «goods_with_marking_code» — ТМ,\n* «another» — иной предмет расчета.\n",
						"type": "string",
						"enum": [
							"commodity",
							"excise",
							"job",
							"service",
							"gambling_bet",
							"gambling_prize",
							"lottery",
							"lottery_prize",
							"intellectual_activity",
							"payment",
							"agent_commission",
							"contribution",
							"property_rights",
							"unrealization",
							"tax_reduction",
							"trade_fee",
							"resort_tax",
							"pledge",
							"income_decrease",
							"ie_pension_insurance_without_payments",
							"ie_pension_insurance_with_payments",
							"ie_medical_insurance_without_payments",
							"ie_medical_insurance_with_payments",
							"social_insurance",
							"casino_chips",
							"agent_payment",
							"excisable_goods_without_marking_code",
							"excisable_goods_with_marking_code",
							"goods_without_marking_code",
							"goods_with_marking_code",
							"another"
						],
						"examples": {
							"default": "goods_with_marking_code"
						}
					},
					"UserData": {
						"description": "`Тег ФФД: 1191`<br>\nДополнительный реквизит предмета расчета\n",
						"type": "string",
						"examples": {
							"default": "Данные пользователя ext.test.qa@tinkoff.ru"
						}
					},
					"Excise": {
						"description": "`Тег ФФД: 1229`<br>\nСумма акциза в рублях с учетом копеек,\nвключенная в стоимость предмета расчета\n* целая часть не более 8 знаков;\n* дробная часть не более 2 знаков;\n* значение не может быть отрицательным.\n",
						"type": "string",
						"examples": {
							"default": "12.2"
						}
					},
					"CountryCode": {
						"description": "`Тег ФФД: 1230`<br>\nЦифровой код страны происхождения товара в\nсоответствии с Общероссийским\nклассификатором стран мира (3 цифры)\n",
						"type": "string",
						"maxLength": 3,
						"examples": {
							"default": "056"
						}
					},
					"DeclarationNumber": {
						"description": "`Тег ФФД: 1231`<br>\nНомер таможенной декларации\n",
						"type": "string",
						"maxLength": 32,
						"examples": {
							"default": "12345678901"
						}
					},
					"MeasurementUnit": {
						"description": "`Тег ФФД: 2108`<br>   \nЕдиницы измерения.\nПередовать в соответствии с ОК 015-94 (МК 002-97)) <br>\nВозможные варианты указаны в <a href=\"https://www.consultant.ru/document/cons_doc_LAW_362322/0060b1f1924347c03afbc57a8d4af63888f81c6c/\">статье</a> (также возможна передача произвольных значений).<br> MeasurementUnit обязателен, в случае если ФФД онлайн-кассы 1.2\n",
						"type": "string",
						"examples": {
							"default": "шт"
						}
					},
					"MarkProcessingMode": {
						"description": "`Тег ФФД: 2102`<br>\nРежим обработки кода маркировки.\nДолжен принимать значение равное «0».\nВключается в чек в случае, если предметом расчета \nявляется товар, подлежащий обязательной\nмаркировке средством идентификации \n(соответствующий код в поле paymentObject).\n",
						"type": "string"
					},
					"MarkCode": {
						"type": "array",
						"description": "`Тег ФФД: 1163`<br>\nКод маркировки в машиночитаемой форме,\nпредставленный в виде одного из видов кодов,\nформируемых в соответствии с требованиями,\nпредусмотренными правилами, для нанесения\nна потребительскую упаковку, или на товары,\nили на товарный ярлык\n* Включается в чек в случае, если предметом расчета является товар, подлежащий обязательной маркировке средством идентификации (соответствующий код в поле paymentObject)\n",
						"$ref": "#/components/schemas/MarkCode"
					},
					"MarkQuantity": {
						"type": "object",
						"$ref": "#/components/schemas/MarkQuantity"
					},
					"SectoralItemProps": {
						"type": "object",
						"$ref": "#/components/schemas/SectoralItemProps"
					}
				}
			},
			"Receipt_FFD_12": {
				"type": "object",
				"description": "Объект с информацией о видах суммы платежа. Если объект не передан, то будет автоматически указана итоговая сумма чека с видом оплаты \"Безналичная\"",
				"required": ["FfdVersion", "Taxation", "Items"],
				"properties": {
					"FfdVersion": {
						"description": "Версия ФФД.\nВозможные значения:\n* \"FfdVersion\": \"1.2\",\n* \"FfdVersion\": \"1.05\".\n",
						"type": "string"
					},
					"ClientInfo": {
						"type": "object",
						"$ref": "#/components/schemas/ClientInfo"
					},
					"Taxation": {
						"description": "`Тег ФФД: 1055`<br>\nСистема налогообложения. Перечисление с\nвозможными значениями:\n* \"osn\" — общая СН,\n* \"usn_income\" — упрощенная СН (доходы),\n* \"usn_income_outcome\" — упрощенная СН (доходы минус расходы),\n* \"envd\" — единый налог на вмененный доход,\n* \"esn\" — единый сельскохозяйственный налог,\n* \"patent\" — патентная СН.\n",
						"type": "string",
						"enum": [
							"osn",
							"usn_income",
							"usn_income_outcome",
							"envd",
							"esn",
							"patent"
						],
						"examples": {
							"default": "osn"
						}
					},
					"Email": {
						"description": "`Тег ФФД: 1008`<br>\nЭлектронная почта клиента.\nАтрибут должен быть заполнен, если не передано значение \nв атрибуте `Phone` \n",
						"type": "string",
						"format": "email",
						"maxLength": 64,
						"examples": {
							"default": "a@test.ru"
						}
					},
					"Phone": {
						"description": "`Тег ФФД: 1008`<br>\nТелефон клиента в формате +{Ц}.\nАтрибут должен быть заполнен, если не передано значение \nв атрибуте `Email` \n",
						"type": "string",
						"maxLength": 64,
						"examples": {
							"default": "+79031234567"
						}
					},
					"Customer": {
						"description": "`Тег ФФД: 1227`<br>\nИдентификатор/Имя клиента\n",
						"type": "string",
						"examples": {
							"default": "78894325"
						}
					},
					"CustomerInn": {
						"description": "`Тег ФФД: 1228`<br>\nИНН клиента\n",
						"type": "string",
						"examples": {
							"default": "788621292"
						}
					},
					"Items": {
						"description": "Массив, содержащий в себе информацию о товарах",
						"type": "array",
						"$ref": "#/components/schemas/Items_FFD_12"
					},
					"Payments": {
						"description": "Объект c информацией о видах суммы платежа.\nСм. структура объекта `Payments`\n1. Если объект не передан, будет автоматически указана итоговая \nсумма чека с видом оплаты \"Безналичный\";\n2. Если передан объект `receipt.Payments`, то значение в `Electronic`\nдолжно быть равно итоговому значению `Amount` в методе **Init**. \nПри этом сумма введенных значений по всем видам оплат, \nвключая `Electronic`, должна быть равна сумме (**Amount**) всех товаров, \nпереданных в объекте `receipt.Items`\n",
						"type": "array",
						"$ref": "#/components/schemas/Payments"
					}
				}
			},
			"Shops": {
				"type": "object",
				"description": "JSON объект с данными Маркетплейса. Обязательный для маркетплейсов",
				"required": ["ShopCode", "Amount"],
				"properties": {
					"ShopCode": {
						"description": "Код магазина\n",
						"type": "string",
						"examples": {
							"default": "700456"
						}
					},
					"Amount": {
						"description": "Cумма в копейках, которая относится к\nуказанному `ShopCode`\n",
						"type": "number",
						"examples": {
							"default": 10000
						}
					},
					"Name": {
						"description": "Наименование товара\n",
						"type": "string",
						"maxLength": 128,
						"examples": {
							"default": "Товар"
						}
					},
					"Fee": {
						"description": "Сумма комиссии в копейках, удерживаемая из\nвозмещения Партнера в пользу Маркетплейса.\nЕсли не передано, используется комиссия,\nуказанная при регистрации\n",
						"type": "string",
						"examples": {
							"default": "500"
						}
					}
				}
			},
			"Init_FULL": {
				"type": "object",
				"required": ["TerminalKey", "Token", "Amount", "OrderId"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. <br>\nВыдается Мерчанту Т‑Кассой при заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Amount": {
						"description": "* Сумма в копейках. Например, сумма 3руб. 12коп. — это число 312;\n* Параметр должен быть равен сумме всех параметров `Amount`, переданных в объекте `Items`;\n* Минимальная сумма операции с помощью СБП составляет 10 руб.\n",
						"type": "number",
						"maxLength": 10,
						"examples": {
							"default": 140000
						}
					},
					"OrderId": {
						"description": "Идентификатор заказа в системе Мерчанта <br> Возможно повторное использование идентификатора, если ранее по нему не было успешной авторизации",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "21050"
						}
					},
					"Token": {
						"description": "Подпись запроса",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					},
					"Description": {
						"description": "Описание заказа.\nЗначение параметра будет отображено на платежной форме\n* Поле необходимо обязательно заполнять для осуществления привязки и одновременной оплаты по CБП. При оплате через СБП данная информация будет отображена в приложении мобильного банка клиента\n",
						"type": "string",
						"maxLength": 140,
						"examples": {
							"default": "Подарочная карта на 1400.00 рублей"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n* Обязателен, если передан атрибут `Recurrent`;\n* Если был передан в запросе, в нотификации будет указан `CustomerKey` и его `CardId`. См. метод [GetCardList](#tag/Metody-raboty-s-kartami/paths/~1GetCardList/post);\n* Необходим для сохранения карт на платежной форме (платежи в один клик);\n* Не является обязательным при рекуррентных платежах через СБП. \n",
						"type": "string",
						"maxLength": 36
					},
					"Recurrent": {
						"description": "Признак родительского рекуррентного платежа <br>\nДля регистрации автоплатежа — обязателен. Если передается и установлен в Y, то регистрирует платеж как рекуррентный. В этом случае после оплаты в нотификации на AUTHORIZED будет передан параметр RebillId для использования в методе Charge. Для осуществления привязки и одновременной оплаты по CБП необходимо передавать 'Y'. \n\nЗначение зависимо от атрибутов:\n  * OperationInitiatorType в методе /init,\n  * Recurrent в методе /Init. <br>\nДетальная информация представлена в описании [Рекуррентный платёж](#tag/Rekurrentnyj-platyozh) и [Инициализация платежа](#tag/Standartnyj-platyozh/paths/~1Init/post)\n",
						"type": "string",
						"maxLength": 1,
						"examples": {
							"default": "Y"
						}
					},
					"PayType": {
						"description": "Определяет тип проведения платежа — двухстадийная или одностадийная оплата.\n* \"O\" — одностадийная оплата,\n* \"T\" — двухстадийная оплата. <br>\nЕсли параметр передан — используется его значение\nЕсли нет — значение в настройках терминала\n",
						"type": "string",
						"enum": ["O", "T"]
					},
					"Language": {
						"description": "Язык платежной формы\n* ru — русский,\n* en — английский. <br>\nЕсли не передан, форма откроется на русском языке \n",
						"type": "string",
						"maxLength": 2,
						"examples": {
							"default": "ru"
						}
					},
					"NotificationURL": {
						"description": "URL на веб-сайте Мерчанта, куда будет отправлен\nPOST запрос о статусе выполнения вызываемых методов \n(настраивается в Личном кабинете):\n* Если параметр передан — используется его значение\n* Если нет — значение в настройках терминала\n",
						"type": "string",
						"format": "uri"
					},
					"SuccessURL": {
						"description": "URL на веб-сайте Мерчанта, куда будет\nпереведен клиент в случае успешной оплаты\n(настраивается в Личном кабинете):\n* Если параметр передан — используется его значение\n* Если нет — значение в настройках терминала\n",
						"type": "string",
						"format": "uri"
					},
					"FailURL": {
						"description": "URL на веб-сайте Мерчанта, куда будет\nпереведен клиент в случае неуспешной\nоплаты (настраивается в Личном кабинете):\n* Если параметр передан — используется его значение\n* Если нет — значение в настройках терминала\n",
						"type": "string",
						"format": "uri"
					},
					"RedirectDueDate": {
						"description": "Cрок жизни ссылки или динамического QR-кода\nСБП (если выбран данный способ оплаты).\nЕсли текущая дата превышает дату, переданную в\nданном параметре, ссылка для оплаты или\nвозможность платежа по QR-коду становятся\nнедоступными и платёж выполнить нельзя.\n* Максимальное значение: 90 дней от текущей даты;\n* Минимальное значение: 1 минута от текущей даты;\n* Формат даты: YYYY-MM-DDTHH24:MI:SS+GMT;\n* Пример даты: 2016-08-31T12:28:00+03:00. <br>\nЕсли не передан, принимает значение 24 часа для платежа \nи 30 дней для счета\n\nПри выставлении счета через Личный кабинет: <br>\nВ случае, если параметр RedirectDueDate не был передан, проверяется настроечный параметр\nплатежного терминала REDIRECT_TIMEOUT, который может содержать значение срока жизни ссылки в\nчасах. Если его значение больше нуля, то оно будет установлено в качестве срока жизни ссылки или\nдинамического QR-кода. Иначе, устанавливается значение «по умолчанию» — 1440 мин.(1 сутки).\n",
						"format": "date-time"
					},
					"DATA": {
						"description": "JSON-объект, который позволяет передавать дополнительные параметры по операции и задавать определенные настройки в формате \"ключ\":\"значение\"\n\nМаксимальная длина для каждого передаваемого параметра:\n  * Ключ — 20 знаков,\n  * Значение — 100 знаков.\n\nМаксимальное количество пар \"ключ\":\"значение\" - 20\n\n1. Если у терминала включена опция привязки клиента после \nуспешной оплаты и передается параметр `CustomerKey`, то в передаваемых \nпараметрах `DATA` могут присутствовать параметры метода **AddCustomer**. \nЕсли они присутствуют, то автоматически привязываются к клиенту.\nНапример, если указать: \n\n```\n\"DATA\":{\"Phone\":\"+71234567890\", \"Email\":\"a@test.com\"}\n``` \nк клиенту автоматически будут привязаны данные Email и телефон, \nи они будут возвращаться при вызове метода **GetCustomer**\n\n    Для МСС 4814 обязательно передать значение в параметре `Phone`\n    Требования по заполнению: \n      * минимум 7 символов,\n      * максимум 20 символов,\n      * разрешены только цифры, исключение — первый символ может быть «+».\n\n    Для МСС 6051 и 6050 обязательно передать параметр `account` (номер электронного кошелька, не должен превышать 30 символов). Пример:\n    \n    \"DATA\": {\"account\":\"123456789\"}\n\n2. Если используется функционал сохранения карт на платежной форме, \nто при помощи опционального параметра `DefaultCard` можно задать \nкакая карта будет выбираться по умолчанию. \nВозможные варианты:\n* Оставить платежную форму пустой. Пример:\n  ```\n  \"DATA\":{\"DefaultCard\":\"none\"}\n  ```\n* Заполнить данными передаваемой карты. В этом случае передается `CardId`. Пример:\n  ```\n   \"DATA\":{\"DefaultCard\":\"894952\"}\n  ```\n* Заполнить данными последней сохраненной карты. Применяется, если параметр `DefaultCard` не передан, передан с некорректным значением или в значении null.\nПо умолчанию возможность сохранение карт на платежной форме может быть отключена. Для активации обратитесь в службу технической поддержки.\n\n3. При реализации подключения оплаты через YandexPay Web или T‑Pay Web,\nнеобходимо обязательно передавать следующие параметры в объекте Data.\nПример:\n  ```\n  \"DATA\": {\n    \"TinkoffPayWeb\": \"true\",\n    \"Device\": \"Desktop\",\n    \"DeviceOs\": \"iOS\",\n    \"DeviceWebView\": \"true\",\n    \"DeviceBrowser\": \"Safari\"\n   }\n  ```\nгде следует передать параметры устройства, с которого будет осуществлен переход\n\nРекомендации для заполнения поля Device:\n  * \"SDK\" — при способе интеграции \"Мобильный SDK\";\n  * \"Mobile\"  — при оплате c мобильного устройства;\n  * \"Desktop\" — при оплате c десктопного устройства.\n\nРекомендации для заполнения поля DeviceOs:\n  * iOS,\n  * Android,\n  * macOS,\n  * Windows,\n  * Linux.\n\nРекомендации для заполнения поля DeviceBrowser:\n  * Chrome,\n  * Firefox,\n  * JivoMobile,\n  * Microsoft Edge,\n  * Miui,\n  * Opera,\n  * Safari,\n  * Samsung,\n  * WebKit,\n  * WeChat,\n  * Yandex.\n\n4. Параметр `notificationEnableSource` позволяет отправлять нотификации только если Source (также\nприсутствует в параметрах сессии) платежа входит в перечень указанных в параметре. Возможные\nварианты: T‑Pay, sbpqr, YandexPay. Пример:\n ```\n notificationEnableSource=TinkoffPay\n ```  \n5. Для осуществления привязки и одновременной оплаты по CБП необходимо передавать параметр \"QR\" = \"true\".\n6. При передаче в объекте DATA атрибута OperationInitiatorType учитывать взаимосвязь его значений с:\n   * Значением атрибута Reccurent в методе /Init;\n   * Значением атрибута RebillId в методе /Charge;\n   * Типом терминала, используемом для проведения операций (ECOM/AFT).\n  \n  Подробную таблицу см. в разделе [Передача признака инициатора операции](#section/Peredacha-priznaka-iniciatora-operacii)\n\n  В случае передачи значений атрибутов не соответствующих таблице — MAPI вернет ошибку 1126 \n  (Несопоставимые значения rebillId или Recurrent с переданным значением OperationInitiatorType)\n",
						"oneOf": [
							{
								"$ref": "#/components/schemas/Common"
							},
							{
								"$ref": "#/components/schemas/T-Pay"
							},
							{
								"$ref": "#/components/schemas/YandexPay"
							},
							{
								"$ref": "#/components/schemas/LongPay"
							}
						]
					},
					"Receipt": {
						"description": "JSON-объект с данными чека. Обязателен, если подключена онлайн-касса",
						"oneOf": [
							{
								"$ref": "#/components/schemas/Receipt_FFD_105"
							},
							{
								"$ref": "#/components/schemas/Receipt_FFD_12"
							}
						]
					},
					"Shops": {
						"type": "array",
						"description": "JSON-объект с данными Маркетплейса. Обязательный для маркетплейсов",
						"items": {
							"$ref": "#/components/schemas/Shops"
						}
					},
					"Descriptor": {
						"description": "Динамический дескриптор точки",
						"type": "string",
						"examples": {
							"default": "678451"
						}
					}
				}
			},
			"Init_SDK": {
				"type": "object",
				"description": "SDK",
				"required": ["TerminalKey", "Token", "Amount", "OrderId"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. <br>\nВыдается Мерчанту Т‑Кассой при заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Amount": {
						"description": "* Сумма в копейках. Например, сумма 3руб. 12коп. это число 312;\n* Параметр должен быть равен сумме всех параметров `Amount`, переданных в объекте `Items`;\n* Минимальная сумма операции с помощью СБП составляет 10 руб.\n",
						"type": "number",
						"maxLength": 10,
						"examples": {
							"default": 140000
						}
					},
					"OrderId": {
						"description": "Идентификатор заказа в системе Мерчанта",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "21050"
						}
					},
					"Token": {
						"description": "Подпись запроса",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					},
					"Description": {
						"description": "Описание заказа. Поле необходимо обязательно заполнять для осуществления привязки и одновременной оплаты по CБП",
						"type": "string",
						"maxLength": 250,
						"examples": {
							"default": "Подарочная карта на 1400.00 рублей"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n* Обязателен, если передан атрибут `Recurrent`;\n* Если был передан в запросе, в нотификации будет указан `CustomerKey` и его `CardId`. См. метод [GetCardList](#tag/Metody-raboty-s-kartami/paths/~1GetCardList/post);\n* Необходим для сохранения карт на платежной форме (платежи в один клик).\n",
						"type": "string",
						"maxLength": 36
					},
					"Recurrent": {
						"description": "Признак родительского рекуррентного платежа \n* Для регистрации автоплатежа — обязателен. Если передается и установлен в Y, то регистрирует платеж как рекуррентный. В этом случае после оплаты в нотификации на AUTHORIZED будет передан параметр RebillId для использования в методе [Charge](#tag/Rekurrentnyj-platyozh/paths/~1Charge/post).   \n* Для осуществления привязки и одновременной оплаты по CБП необходимо передавать 'Y'\n",
						"type": "string",
						"maxLength": 1,
						"examples": {
							"default": "Y"
						}
					},
					"PayType": {
						"description": "Определяет тип проведения платежа — двухстадийная или одностадийная оплата\n* \"O\" — одностадийная оплата,\n* \"T\" — двухстадийная оплата.\n",
						"type": "string",
						"enum": ["O", "T"]
					},
					"Language": {
						"description": "Язык платежной формы\n* ru — русский,\n* en — английский. \nЕсли не передан, форма откроется на русском языке \n",
						"type": "string",
						"maxLength": 2,
						"enum": ["ru", "en"]
					},
					"NotificationURL": {
						"description": "URL на веб-сайте Мерчанта, куда будет отправлен\nPOST запрос о статусе выполнения вызываемых методов \n(настраивается в Личном кабинете):\n* если параметр передан – используется его значение;\n* если нет – значение в настройках терминала.\n",
						"type": "string",
						"format": "uri"
					},
					"SuccessURL": {
						"description": "URL на веб-сайте Мерчанта, куда будет\nпереведен клиент в случае успешной оплаты (для установки обратитесь к персональному менеджеру)\n* если параметр передан – используется также значение, установленное через менеджера (актуально для SDK)\n",
						"type": "string",
						"format": "uri"
					},
					"FailURL": {
						"description": "URL на веб-сайте Мерчанта, куда будет\nпереведен клиент в случае неуспешной оплаты (для установки обратитесь к персональному менеджеру)\n* если параметр передан – используется также значение, установленное через менеджера (актуально для SDK)\n",
						"type": "string",
						"format": "uri"
					},
					"RedirectDueDate": {
						"description": "Cрок жизни ссылки или динамического QR-кода\nСБП (если выбран данный способ оплаты).\nЕсли текущая дата превышает дату, переданную в\nданном параметре, ссылка для оплаты или\nвозможность платежа по QR-коду становятся\nнедоступными и платёж выполнить нельзя.\n* Максимальное значение: 90 дней от текущей даты;\n* Минимальное значение: 1 минута от текущей даты;\n* Формат даты: YYYY-MM-DDTHH24:MI:SS+GMT;\n* Пример даты: 2016-08-31T12:28:00+03:00. <br>\nЕсли не передан, принимает значение 24 часа для платежа \nи 30 дней для счета\n",
						"type": "string",
						"format": "date-time"
					},
					"DATA": {
						"description": "JSON-объект, который позволяет передавать дополнительные параметры по операции и задавать определенные настройки в формате \"ключ\":\"значение\".\n\nМаксимальная длина для каждого передаваемого параметра:\n  * Ключ — 20 знаков;\n  * Значение — 100 знаков.\n\nМаксимальное количество пар \"ключ\":\"значение\" — 20\n\n1. Если у терминала включена опция привязки клиента после \nуспешной оплаты и передается параметр `CustomerKey`, то в передаваемых \nпараметрах `DATA` могут присутствовать параметры метода **AddCustomer**. \nЕсли они присутствуют, то автоматически привязываются к клиенту.\nНапример, если указать: \n```\n\"DATA\":{\"Phone\":\"+71234567890\", \"Email\":\"a@test.com\"}\n``` \nк клиенту автоматически будут привязаны данные Email и телефон, \nи они будут возвращаться при вызове метода **GetCustomer**.\n\n    Для МСС 4814 обязательно передать значение в параметре `Phone`\n\n    Для МСС 6051 и 6050 обязательно передать параметр `account` (номер электронного кошелька, не должен превышать 30 символов). Пример:\n```\n\"DATA\": {\"account\":\"123456789\"}\n```\n2. Если используется функционал сохранения карт на платежной форме, \nто при помощи опционального параметра `DefaultCard` можно задать \nкакая карта будет выбираться по умолчанию. \nВозможные варианты:\n* Оставить платежную форму пустой. Пример:\n  ```\n  \"DATA\":{\"DefaultCard\":\"none\"}\n  ```\n* Заполнить данными передаваемой карты. В этом случае передается `CardId`. Пример:\n  ```\n  \"DATA\":{\"DefaultCard\":\"894952\"}\n  ```\n* Заполнить данными последней сохраненной карты. Применяется, если параметр `DefaultCard` не передан, передан с некорректным значением или в значении null\n\n3. При реализации подключения оплаты через Yandex Pay Web или T‑Pay Web,\nнеобходимо обязательно передавать соотвествующие параметры в объекте Data\n4. Для осуществления привязки и одновременной оплаты по CБП необходимо передавать параметр \"QR\" = \"true\"\n",
						"oneOf": [
							{
								"$ref": "#/components/schemas/Common"
							},
							{
								"$ref": "#/components/schemas/T-Pay"
							},
							{
								"$ref": "#/components/schemas/YandexPay"
							},
							{
								"$ref": "#/components/schemas/LongPay"
							}
						]
					},
					"Receipt": {
						"description": "JSON объект с данными чека",
						"oneOf": [
							{
								"$ref": "#/components/schemas/Receipt_FFD_105"
							},
							{
								"$ref": "#/components/schemas/Receipt_FFD_12"
							}
						]
					},
					"Shops": {
						"description": "JSON объект с данными Маркетплейса",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Shops"
						}
					}
				}
			},
			"Response": {
				"type": "object",
				"required": [
					"TerminalKey",
					"Amount",
					"OrderId",
					"Success",
					"PaymentId",
					"ErrorCode",
					"Status"
				],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Amount": {
						"description": "Сумма в копейках\n",
						"type": "number",
						"maxLength": 20,
						"examples": {
							"default": 100000
						}
					},
					"OrderId": {
						"description": "Идентификатор заказа в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "21050"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Status": {
						"description": "Статус транзакции\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "NEW"
						}
					},
					"PaymentId": {
						"description": "Идентификатор платежа в системе Т‑Кассы\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "13660"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"PaymentURL": {
						"description": "Ссылка на платежную форму (параметр возвращается только `для Мерчантов без PCI DSS`)\n",
						"type": "string",
						"format": "uri",
						"maxLength": 100,
						"examples": {
							"default": "https://securepay.tinkoff.ru/rest/Authorize/1B63Y1"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"examples": {
							"default": "0"
						}
					}
				}
			},
			"PaymentData": {
				"type": "object",
				"required": ["TerminalKey", "Amount"],
				"description": "Информация о платеже",
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Amount": {
						"type": "number",
						"description": "Сумма в копейках. Параметр \"Amount\" должен быть равен сумме всех параметров \"Amount\", переданных в объекте Items",
						"examples": {
							"default": 1751
						}
					},
					"OrderId": {
						"type": "string",
						"description": "Уникальный номер заказа в системе Мерчанта",
						"examples": {
							"default": "autoOrd1615285401068DELb"
						}
					},
					"Description": {
						"type": "string",
						"description": "Краткое описание"
					},
					"DATA": {
						"type": "object",
						"description": "JSON объект, содержащии дополнительные параметры в виде \"ключ\" — «значение». Данные параметры будут переданы на страницу оплаты (в случае ее кастомизации). <br> Максимальная длина для каждого передаваемого параметра! <br> ключ — 20 знаков; <br> значение — 100 знаков. <br> Максимальное количество пар «ключ значение» не может превышать 20"
					},
					"Receipt": {
						"$ref": "#/components/schemas/Receipt_FFD_105"
					}
				}
			},
			"PaymentInfos": {
				"type": "object",
				"required": ["PaymentData"],
				"description": "Информация о платеже",
				"properties": {
					"InfoEmail": {
						"type": "string",
						"description": "Адрес электронной почты покупателя"
					},
					"PaymentData": {
						"type": "object",
						"description": "Идентификатор вашего магазина",
						"$ref": "#/components/schemas/PaymentData"
					}
				}
			},
			"PaymentItem": {
				"type": "object",
				"required": ["container", "paymentInfo"],
				"properties": {
					"container": {
						"type": "string"
					},
					"paymentInfo": {
						"$ref": "#/components/schemas/PaymentInfos"
					}
				}
			},
			"T-Payweb": {
				"type": "object",
				"description": "Объект с информацией о платежных системах",
				"properties": {
					"TinkoffPay": {
						"type": "object",
						"description": "Объект с информацией о T‑Pay"
					}
				}
			},
			"TbankFps": {
				"type": "object",
				"description": "Объект с информацией о платежных системах",
				"properties": {
					"TinkoffPay": {
						"type": "object",
						"description": "Объект с информацией о СБП"
					}
				}
			},
			"InitPayments": {
				"type": "object",
				"required": ["TerminalKey"],
				"properties": {
					"container": {
						"type": "string",
						"description": "ID элемента или элемент, в который вставляются кнопки"
					},
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор вашего магазина"
					},
					"paymentInfo": {
						"type": "object",
						"description": "Информация о платеже",
						"$ref": "#/components/schemas/PaymentInfos"
					},
					"paymentItems": {
						"type": "array",
						"description": "Список объектов с информацией о размещаемых кнопках",
						"items": [
							{
								"$ref": "#/components/schemas/PaymentItem"
							}
						]
					},
					"paymentSystems": {
						"type": "object",
						"description": "Объект с информацией о платежных системах",
						"oneOf": [
							{
								"$ref": "#/components/schemas/T-Payweb"
							},
							{
								"$ref": "#/components/schemas/TbankFps"
							}
						]
					}
				}
			},
			"InitPaymentsResponse": {
				"title": "Пример ответа",
				"type": "object",
				"properties": {
					"Success": {
						"type": "boolean",
						"description": "Успешность прохождения запроса",
						"enum": [true, false],
						"examples": {
							"default": "true"
						}
					}
				}
			},
			"3DSv2": {
				"type": "object",
				"required": [
					"threeDSCompInd",
					"language",
					"timezone",
					"screen_height",
					"screen_width",
					"cresCallbackUrl"
				],
				"properties": {
					"threeDSCompInd": {
						"type": "string",
						"description": "`deviceChannel 02 — BRW`<br>\nИдентификатор выполнения 3DS Method:\n* 'Y' — выполнение метода успешно завершено,\n* 'N' — выполнение метода завершено неуспешно или метод не выполнялся.\n",
						"examples": {
							"default": "Y"
						}
					},
					"language": {
						"type": "string",
						"description": "`deviceChannel 02 — BRW`<br> \nЯзык браузера по формату IETF BCP47.\nРекомендация по получению значения в браузере (из глобального объекта navigator):`navigator.language`\n",
						"examples": {
							"default": "RU"
						}
					},
					"timezone": {
						"type": "string",
						"description": "`deviceChannel 02 — BRW`<br>\nTime-zone пользователя в минутах.\nРекомендация по получению значения в браузере: вызов метода `getTimezoneOffset()`\n",
						"examples": {
							"default": "-300"
						}
					},
					"screen_height": {
						"type": "string",
						"description": "`deviceChannel 02 — BRW`<br>\nВысота экрана в пикселях.\nРекомендация по получению значения в браузере (из глобального объекта screen): `screen.height`\n",
						"examples": {
							"default": "1024"
						}
					},
					"screen_width": {
						"type": "string",
						"description": "`deviceChannel 02 — BRW`<br>\nШирина экрана в пикселях.\nРекомендация по получению значения в браузере (из глобального объекта screen): `screen.width`\n",
						"examples": {
							"default": "967"
						}
					},
					"cresCallbackUrl": {
						"type": "string",
						"description": "`deviceChannel 02 — BRW`<br>\nURL который будет использоваться для получения результата (CRES) после завершения Challenge Flow (аутентификации с дополнительным переходом на страницу ACS)\n",
						"examples": {
							"default": "www.callbackurl.ru"
						}
					},
					"colorDepth": {
						"type": "string",
						"description": "`deviceChannel 02 — BRW`<br>\nГлубина цвета в битах\n<br> Допустимые значения: 1/4/8/15/16/24/32/48\n<br> Рекомендация по получению значения в браузере (из глобального объекта screen): `screen.colorDepth`\n",
						"default": 48,
						"examples": {
							"default": "48"
						}
					},
					"javaEnabled": {
						"type": "string",
						"description": "`deviceChannel 02 — BRW`<br>\nПоддерживает ли браузер пользователя Java: \n* true,\n* false.\n",
						"default": false,
						"examples": {
							"default": "false"
						}
					}
				}
			},
			"FinishAuthorize_FULL": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "CardData", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала. <br>\nВыдается Мерчанту Т‑Кассой при заведении терминала\n",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"type": "string",
						"description": "Уникальный идентификатор транзакции в\nсистеме Т‑Кассы\n",
						"maxLength": 20,
						"examples": {
							"default": "700001702044"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса\n",
						"examples": {
							"default": "f5a3be479324a6d3a4d9efa0d02880b77d04a91758deddcbd9e752a6df97cab5"
						}
					},
					"IP": {
						"type": "string",
						"description": "IP-адрес клиента.\n\nОбязательный параметр для 3DS второй\nверсии. DS платежной системы требует \nпередавать данный адрес в полном формате, \nбез каких-либо  сокращений (8 групп по 4 символа).\n\nДанный формат регламентируется на уровне\nспецификации EMVCo<br>\n\nПример правильного адреса: \n  ``` 2011:0db8:85a3:0101:0101:8a2e:0370:7334 ```<br>\nПример неправильного адреса:\n``` 2a00:1fa1:c7da:9285:0:51:838b:1001 ```\n",
						"examples": {
							"default": "2011:0db8:85a3:0101:0101:8a2e:0370:7334"
						}
					},
					"SendEmail": {
						"type": "boolean",
						"description": "* true — отправлять клиенту информацию на\nпочту об оплате;\n* false — не отправлять.\n"
					},
					"Source": {
						"type": "string",
						"description": "Источник платежа.\nЗначение параметра зависит от параметра Route\n- ACQ — cards (так же поддерживается написание Cards), YandexPay,\n- MC — beeline / mts / tele2 / megafon,\n- EINV — einvoicing,\n- WM — webmoney.\n",
						"enum": [
							"cards",
							"beeline",
							"mts",
							"tele2",
							"megafon",
							"einvoicing",
							"webmoney",
							"YandexPay"
						],
						"examples": {
							"default": "cards"
						}
					},
					"DATA": {
						"type": "object",
						"description": "JSON объект, содержащий дополнительные\nпараметры в виде `ключ`:`значение`. \nДанные параметры будут переданы на страницу\nоплаты (в случае ее кастомизации).\nМаксимальная длина для каждого передаваемого параметра:\n* Ключ — 20 знаков,\n* Значение — 100 знаков. <br>\nМаксимальное количество пар `ключ`:`значение` не может \nпревышать 20\n",
						"oneOf": [
							{
								"$ref": "#/components/schemas/3DSv2"
							},
							{
								"type": "object",
								"additionalProperties": {
									"type": "string",
									"examples": {
										"default": "11111"
									}
								}
							}
						]
					},
					"InfoEmail": {
						"type": "string",
						"format": "email",
						"description": "Email для отправки информации об оплате.\nОбязателен при передаче `SendEmail`\n",
						"examples": {
							"default": "qwerty@test.com"
						}
					},
					"EncryptedPaymentData": {
						"type": "string",
						"description": "Данные карты.\nИспользуется и является обязательным только \nдля ApplePay или GooglePay\n"
					},
					"CardData": {
						"type": "string",
						"description": "Объект CardData собирается в виде списка `ключ`=`значение` c разделителем `;`.\nОбъект зашифровывается открытым ключом (X509 RSA 2048), получившееся бинарное значение кодируется в `Base64`.\nОткрытый ключ генерируется Т‑Кассой и выдается при регистрации терминала.\nДоступен в ЛК ИЭ в разделе \"Магазины\", при изменении типа подключения на \"Мобильное\".\n\n|Наименование|Тип данных|Обязательность|Описание|\n|---|---|---|---|\n|PAN|Number|ДА|Номер карты|\n|ExpDate| Number|Да| Месяц и год срока действия карты в формате MMYY|\n|CardHolder |String| Нет| Имя и фамилия держателя карты (как на карте)|\n|CVV |String| Нет |Код защиты (с обратной стороны карты). Для платежей по Apple Pay (с расшифровкой токена на своей стороне) не является обязательным|\n|ECI |String |Нет |Electronic Commerce Indicator. Индикатор, показывающий степень защиты, применяемую при предоставлении клиентом своих данных ТСП|\n|CAVV |String |Нет |Cardholder Authentication Verification Value или Accountholder Authentication Value|\n\n\nПример значения элемента формы CardData:\n```\nPAN=4300000000000777;ExpDate=0519;CardHolder=IVAN PETROV;CVV=111\n```\n\nДля YandexPay (расшифровка токена происходит на стороне Мерчанта) надо:\n1. Передавать `Route=ACQ` и `Source=YandexPay`.\n2. Передавать в `DATA.transactionId` значение `PaymentToken.messageId`.\n3. Передавать в `DATA.YandexPayWeb` значение true.\n4. Передавать параметр **CardData**:\n    Размапить параметры из расшифрованного токена `event.token`\n    - `paymentMethodDetails.pan` в **pan**,\n    - `paymentMethodDetails,expirationMonth` + `paymentMethodDetails.expirationYear` в **ExpDate**,\n    - `paymentMethodDetails.cryptogram` в **CAVV** (если есть),\n    - `paymentMethodDetails.eci` в **ECI** (если есть).<br>\n\nДля MirPay (если интеграция с НСПК для получения платежного токена) надо:\n1. Передавать `Route=ACQ` и `Source= MirPay`.\n2. Передавать в `DATA.transId` значение `transId`.\n3. Передавать в `DATA.tavv` значение `cav`.\n4. Передавать параметр **CardData**:\n    - **Pan** заполнять `tan`,\n    - **ExpDate** заполнять `tem + tey`.<br>\nДля случая, когда Мерчант интегрируется только с Банком для проведения платежа по MirPay данный \nметод не вызывается. Эквайер самостоятельно получает платежный токен и инициирует авторизацию, \nвместо Мерчанта<br> \n\nВ случае получения **CAVV** в **CardData** оплата будет проводиться как оплата токеном, иначе прохождение 3DS будет регулироваться стандартными настройками треминала/платежа\n\nНе используется и не является обязательным, если передается `EncryptedPaymentData`",
						"examples": {
							"default": "eyJzaWduYXR1cmUiOiJNRVVDSVFEdjNJS1A5WG9nWml4RytUUm9zZWFDK0RGd3RKd2FtMHVEcm91RUVGZVB6Z0lnYXBFbHhxQ3AwQWtZcVVmTFVMaVNhUjBKWkVQNmg 4THFqYks5YkJKQnM5d1x1MDAzZCIsInByb3RvY29sVmVyc2lvbiI6IkVDdjEiLCJzaWduZWRNZXNzYWdlIjoie1wiZW5jcnlwdGVkTWVzc2FnZVwiOlwiQW11dm5OYUIralBsa3VKTitrMUZLSDZFcm1VK2lTY052 L05rR3FFaXIxOHZmSWxkVFJ5L2U4cW5zMXkyanFtcm1acU1JSWNYMUhyTHBxRURpaXkvS3B6SUhNZFllcXRkSVVNOU1tRjNpejU2d2NTZUVVaXU2ODI3QThGcitaYm8xRWtWRjY1TUxRYVY3NlBOUFRndH UvQ1BodW5HUk0rN25KdVhDczVtbkVvOHFma0RNVk8xWktGWDQ4TnVEL2FKcDJQdVVIY2puSnBTZ0pTSDB4U21YSnAzU1MreXFDNm54N254WUEwN2h4YjYvSnp2R2s3ZExDU2hWWGU1Z2haUjNDaFQyV W8rRnpXTWJRRGZtSjBLQW9kc2VlR0xaaitqMzVqOUlKMkhJRFhIUUZZMWNuTW9YVUVoTjgvdEkvRkpqRnJiYVdFRkIzRDZwOFUzT2tkUmVaNHAyYi8yYURNZXVxR1ozSUtjc3R0R2lKMFhQQVhhZXYyQU8 o1M3RRQXVqQXRYdFlaekNTVjVBVXdXZS85T1VcXHUwMDNkXCJ9In0="
						}
					},
					"Amount": {
						"type": "number",
						"maxLength": 10,
						"description": "Сумма в копейках\n",
						"examples": {
							"default": 10000
						}
					},
					"deviceChannel": {
						"type": "string",
						"description": "Канал устройства.\nПоддерживается следующий\nканал устройства:\n* 01 = Application (APP),\n* 02 = Browser (BRW) (используется по умолчанию, передавать параметр не требуется).\n",
						"examples": {
							"default": "02"
						}
					},
					"Route": {
						"type": "string",
						"description": "Способ платежа.\nЯвляется обязательным для ApplePay или GooglePay\n",
						"enum": ["ACQ", "MC", "EINV", "WM"],
						"examples": {
							"default": "ACQ"
						}
					}
				}
			},
			"3DSv2SDK": {
				"type": "object",
				"required": [
					"sdkAppID",
					"sdkEncData",
					"sdkEphemPubKey",
					"sdkMaxTimeout",
					"sdkReferenceNumber",
					"sdkTransID",
					"sdkInterface",
					"sdkUiType"
				],
				"properties": {
					"sdkAppID": {
						"type": "string",
						"description": "`deviceChannel 01 — APP`<br>\nУникальный идентификатор приложения 3DS Requestor, который формируется 3DS SDK при каждой установке или обновлении приложения\n",
						"examples": {
							"default": "6dg99s67h9d6hv"
						}
					},
					"sdkEncData": {
						"type": "string",
						"description": "`deviceChannel 01 — APP`<br>\nДанные, собранные SDK\n<br> JWE объект, полученный от 3DS SDK\n<br> Должен быть дополнительно закодирован в `base64` строку\n",
						"examples": {
							"default": "f8s9v04bvglglgkvkUO0UvUF7rHlKL"
						}
					},
					"sdkEphemPubKey": {
						"type": "string",
						"description": "`deviceChannel 01 — APP`<br>\nКомпонент public key пары ephemeral key, сгенерированный 3DS SDK\n<br> JWE объект, полученный от 3DS SDK, должен быть дополнительно закодирован в `base64` строку\n",
						"examples": {
							"default": "f8s9v04POPP479GHky5dG7InO0UvUF7rHlKL"
						}
					},
					"sdkMaxTimeout": {
						"type": "string",
						"description": "`deviceChannel 01 — APP`<br>\nМаксимальное количество времени (в минутах)\n",
						"minLength": 5,
						"examples": {
							"default": "05"
						}
					},
					"sdkReferenceNumber": {
						"type": "string",
						"description": "`deviceChannel 01 — APP`<br>\nПоставщик и версия 3DS SDK\n",
						"examples": {
							"default": "3DSV2"
						}
					},
					"sdkTransID": {
						"type": "string",
						"description": "`deviceChannel 01 — APP`<br>\nУникальный идентификатор транзакции, назначенный 3DS SDK для идентификации одной транзакции\n",
						"examples": {
							"default": "194050GHYYtu86nOJ"
						}
					},
					"sdkInterface": {
						"type": "string",
						"description": "`deviceChannel 01 — APP`<br>\nСписок поддерживаемых интерфейсов SDK\n<br> Поддерживаемые значения:\n* 01 = Native,\n* 02 = HTML,\n* 03 = Both.\n",
						"examples": {
							"default": "02"
						}
					},
					"sdkUiType": {
						"type": "string",
						"description": "`deviceChannel 01 — APP`<br>\nСписок поддерживаемых типов UI\n<br> Значения для каждого интерфейса:\n* Native UI = 01–04,\n* HTML UI = 01–05.\n<br> Поддерживаемые значения:\n* 01 = Text,\n* 02 = Single Select,\n* 03 = Multi Select,\n* 04 = OOB,\n* 05 = HTML Other (valid only for HTML UI).\n",
						"examples": {
							"default": "04"
						}
					}
				}
			},
			"FinishAuthorize_SDK": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "CardData", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала. <br>\nВыдается Мерчанту Т‑Кассой при заведении терминала \n",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"type": "string",
						"description": "Уникальный идентификатор транзакции в\nсистеме Т‑Кассы\n",
						"maxLength": 20,
						"examples": {
							"default": "700001702044"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса\n",
						"examples": {
							"default": "f5a3be479324a6d3a4d9efa0d02880b77d04a91758deddcbd9e752a6df97cab5"
						}
					},
					"IP": {
						"type": "string",
						"description": "IP-адрес клиента.\n\nОбязательный параметр для 3DS второй\nверсии. DS платежной системы требует \nпередавать данный адрес в полном формате, \nбез каких-либо  сокращений (8 групп по 4 символа).\n\nДанный формат регламентируется на уровне\nспецификации EMVCo\n",
						"examples": {
							"default": "2011:0db8:85a3:0101:0101:8a2e:0370:7334"
						}
					},
					"SendEmail": {
						"type": "boolean",
						"description": "* true — отправлять клиенту информацию на\nпочту об оплате;\n* false — не отправлять.\n"
					},
					"Source": {
						"type": "string",
						"description": "Источник платежа\n",
						"enum": [
							"cards",
							"einvoicing",
							"Installment",
							"qrsbp",
							"Bnpl",
							"MC",
							"RC",
							"VC",
							"TinkoffPay",
							"TinkoffWallet",
							"YandexPay",
							"UP"
						],
						"examples": {
							"default": "YandexPay"
						}
					},
					"DATA": {
						"type": "object",
						"description": "JSON объект, содержащий дополнительные\nпараметры в виде “ключ”:”значение”. \nДанные параметры будут переданы на страницу\nоплаты (в случае ее кастомизации).\nМаксимальная длина для каждого передаваемого параметра:\n* Ключ — 20 знаков,\n* Значение — 100 знаков.<br>\nМаксимальное количество пар «ключ-значение» не может \nпревышать 20\n",
						"oneOf": [
							{
								"$ref": "#/components/schemas/3DSv2SDK"
							},
							{
								"type": "object",
								"additionalProperties": {
									"type": "string"
								}
							}
						]
					},
					"InfoEmail": {
						"type": "string",
						"format": "email",
						"description": "Email для отправки информации об оплате.\nОбязателен при передаче SendEmai\n",
						"examples": {
							"default": "qwerty@test.com"
						}
					},
					"EncryptedPaymentData": {
						"type": "string",
						"description": "Данные карты\n"
					},
					"CardData": {
						"type": "string",
						"description": "Объект CardData собирается в виде списка `ключ`=`значение` c разделителем `;`.\nОбъект зашифровывается открытым ключом (X509 RSA 2048), получившееся бинарное значение кодируется в `Base64`.\nОткрытый ключ генерируется Т‑Кассой и выдается при регистрации терминала.\nДоступен в ЛК ИЭ в разделе \"Магазины\", при изменении типа подключения на \"Мобильное\".\n\n|Наименование|Тип данных|Обязательность|Описание|\n|---|---|---|---|\n|PAN|Number|ДА|Номер карты|\n|ExpDate| Number|Да| Месяц и год срока действия карты в формате MMYY|\n|CardHolder |String| Нет| Имя и фамилия держателя карты (как на карте)|\n|CVV |String| Нет |Код защиты (с обратной стороны карты). Для платежей по Apple Pay (с расшифровкой токена на своей стороне) не является обязательным|\n|ECI |String |Нет |Electronic Commerce Indicator. Индикатор, показывающий степень защиты, применяемую при предоставлении клиентом своих данных ТСП|\n|CAVV |String |Нет |Cardholder Authentication Verification Value или Accountholder Authentication Value|\n\n\nПример значения элемента формы CardData:\n```\nPAN=4300000000000777;ExpDate=0519;CardHolder=IVAN PETROV;CVV=111\n```\n\nДля YandexPay (расшифровка токена происходит на стороне Мерчанта) надо:\n1. Передавать `Route=ACQ` и `Source=YandexPay`.\n2. Передавать в `DATA.transactionId` значение `PaymentToken.messageId`.\n3. Передавать в `DATA.YandexPayWeb` значение true.\n4. Передавать параметр **CardData**:\n    Размапить параметры из расшифрованного токена `event.token`\n    - `paymentMethodDetails.pan` в **pan**,\n    - `paymentMethodDetails,expirationMonth` + `paymentMethodDetails.expirationYear` в **ExpDate**,\n    - `paymentMethodDetails.cryptogram` в **CAVV** (если есть),\n    - `paymentMethodDetails.eci` в **ECI** (если есть).<br>\n\nДля MirPay (если интеграция с НСПК для получения платежного токена) надо:\n1. Передавать `Route=ACQ` и `Source= MirPay`.\n2. Передавать в `DATA.transId` значение `transId`.\n3. Передавать в `DATA.tavv` значение `cav`.\n4. Передавать параметр **CardData**:\n    - **Pan** заполнять `tan`,\n    - **ExpDate** заполнять `tem + tey`.<br>\nДля случая, когда Мерчант интегрируется только с Банком для проведения платежа по MirPay данный \nметод не вызывается. Эквайер самостоятельно получает платежный токен и инициирует авторизацию, \nвместо Мерчанта<br> \n\nВ случае получения **CAVV** в **CardData** оплата будет проводиться как оплата токеном, иначе прохождение 3DS будет регулироваться стандартными настройками треминала/платежа\n\nНе используется и не является обязательным, если передается `EncryptedPaymentData`",
						"examples": {
							"default": "eyJzaWduYXR1cmUiOiJNRVVDSVFEdjNJS1A5WG9nWml4RytUUm9zZWFDK0RGd3RKd2FtMHVEcm91RUVGZVB6Z0lnYXBFbHhxQ3AwQWtZcVVmTFVMaVNhUjBKWkVQNmg 4THFqYks5YkJKQnM5d1x1MDAzZCIsInByb3RvY29sVmVyc2lvbiI6IkVDdjEiLCJzaWduZWRNZXNzYWdlIjoie1wiZW5jcnlwdGVkTWVzc2FnZVwiOlwiQW11dm5OYUIralBsa3VKTitrMUZLSDZFcm1VK2lTY052 L05rR3FFaXIxOHZmSWxkVFJ5L2U4cW5zMXkyanFtcm1acU1JSWNYMUhyTHBxRURpaXkvS3B6SUhNZFllcXRkSVVNOU1tRjNpejU2d2NTZUVVaXU2ODI3QThGcitaYm8xRWtWRjY1TUxRYVY3NlBOUFRndH UvQ1BodW5HUk0rN25KdVhDczVtbkVvOHFma0RNVk8xWktGWDQ4TnVEL2FKcDJQdVVIY2puSnBTZ0pTSDB4U21YSnAzU1MreXFDNm54N254WUEwN2h4YjYvSnp2R2s3ZExDU2hWWGU1Z2haUjNDaFQyV W8rRnpXTWJRRGZtSjBLQW9kc2VlR0xaaitqMzVqOUlKMkhJRFhIUUZZMWNuTW9YVUVoTjgvdEkvRkpqRnJiYVdFRkIzRDZwOFUzT2tkUmVaNHAyYi8yYURNZXVxR1ozSUtjc3R0R2lKMFhQQVhhZXYyQU8 o1M3RRQXVqQXRYdFlaekNTVjVBVXdXZS85T1VcXHUwMDNkXCJ9In0="
						}
					}
				}
			},
			"FinishAuthorize": {
				"type": "object",
				"required": [
					"TerminalKey",
					"Amount",
					"OrderId",
					"Success",
					"ErrorCode",
					"Status"
				],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Amount": {
						"description": "Сумма в копейках\n",
						"type": "number",
						"maxLength": 20,
						"examples": {
							"default": 100000
						}
					},
					"OrderId": {
						"description": "Идентификатор заказа в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "21050"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Status": {
						"description": "Статус транзакции.\nПолучает в ответе 1 из 4 статусов платежа:\n  * CONFIRMED — при одностадийной оплате,\n  * AUTHORIZED — при двухстадийной оплате,\n  * 3DS_CHECKING — при необходимости прохождения проверки 3-D Secure. Если используется своя ПФ (протокол EACQ C PCI DSS) и платеж завис в таком статусе, необходимо обратиться к эмитенту для устранения ошибок оплаты;\n  * REJECTED — при неуспешном прохождении платежа.\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "NEW"
						}
					},
					"PaymentId": {
						"description": "Идентификатор платежа в системе Т‑Кассы\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "13660"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"examples": {
							"default": "0"
						}
					},
					"RebillId": {
						"type": "string",
						"description": "Идентификатор рекуррентного платежа",
						"examples": {
							"default": "21813157"
						}
					},
					"CardId": {
						"description": "Идентификатор карты в системе Т‑Кассы. Передается только для сохраненной карты",
						"type": "string"
					}
				}
			},
			"Without3DS": {
				"allOf": [
					{
						"$ref": "#/components/schemas/FinishAuthorize"
					},
					{
						"type": "object",
						"properties": {
							"CardId": {
								"type": "string",
								"description": "Идентификатор карты в системе Т‑Кассы. \nПередается только для сохраненной карты\n"
							}
						}
					}
				]
			},
			"With3DS": {
				"allOf": [
					{
						"$ref": "#/components/schemas/FinishAuthorize"
					},
					{
						"type": "object",
						"properties": {
							"MD": {
								"type": "string",
								"description": "Уникальный идентификатор транзакции в системе Т‑Кассы\n",
								"examples": {
									"default": "ACQT-563587431"
								}
							},
							"PaReq": {
								"type": "string",
								"description": "Шифрованная строка, содержащая результаты 3-D Secure аутентификации (возвращается в ответе от ACS)\n",
								"examples": {
									"default": "\"eJxVUl1TwjAQ/CtM30s+KLTDHGHQwsiogFh09C2kp1RpC2nLh7/eBAtqnnYvN3ubvUD/kK4bO9RFkmc9hzWp08BM5XGSvfecRTRyA6cvIFppxP\nARVaVRwD0WhXzHRhL3HMUU73itwKVtyl1Pcs8Nli3pymUQK+z2Sww6joDZYI5bAfUgYeY0OZAzNYparWRWCpBqezWeiDZnLe3BqSmkqMeh4PRy2p\n02BfJThkymKCIsSiAnCCqvslIfhXEG5Eyg0muxKstN0SVkv983yyT7zN/emroiQOwlkF8js8qiwogdklg8rEfT5WK0jj6G7D4cepNo8TWNBmwSDXtAbAfEskTjkPk0\noF6DeV3a6jLj8VQHmVoXglFTqTFs7IjBn4u/BTBZa7OK8yPODPCwyTM0HSbACwby6/f6xsaoSpNMMN89+uHdV/iUPz2nyat/uxrPXz5nuX/c2nBPTVYxMflwzthJ0hIgVobUeyP1yg469xW+AedOuuM=\"\n"
								}
							},
							"ACSUrl": {
								"type": "string",
								"format": "uri",
								"description": "Если в ответе метода **FinishAuthorize** возвращается статус **3DS_CHECKING**, \nМерчанту необходимо сформировать запрос на URL ACS банка, \nвыпустившего карту (в ответе параметр `ACSUrl`) и вместе с этим перенаправить клиента на эту же страницу ACSUrl для прохождения 3DS\n",
								"examples": {
									"default": "https://secure.tcsbank.ru/acs/auth/start.do"
								}
							}
						}
					}
				]
			},
			"With3DSv2APP": {
				"allOf": [
					{
						"$ref": "#/components/schemas/FinishAuthorize"
					},
					{
						"type": "object"
					},
					{
						"required": [
							"TdsServerTransId",
							"AcsTransId",
							"AcsReferenceNumber",
							"SdkTransID"
						],
						"properties": {
							"TdsServerTransId": {
								"type": "string",
								"description": "Уникальный идентификатор транзакции,генерируемый 3DS-Server, обязательный параметр для 3DS второй версии\n",
								"examples": {
									"default": "d93f7c66-3ecf-4d10-ba62-46046e7b7596"
								}
							},
							"AcsTransId": {
								"type": "string",
								"description": "Идентификатор транзакции,присвоенный ACS, полученный в ответе на FinishAuthorize\n",
								"examples": {
									"default": "aceca6af-56ee-43f0-80ef-ea8d30d5c5b0"
								}
							},
							"AcsInterface": {
								"type": "string",
								"format": "uri",
								"description": "`Обязательное поле, если Transaction Status = C`<br>\nТип пользовательского интерфейса ACS.\n<br> Возможные значения:\n  - 01 - Native UI,\n  - 02 - HTML UI.\n",
								"examples": {
									"default": "02"
								}
							},
							"AcsUiTemplate": {
								"type": "string",
								"format": "uri",
								"description": "`Обязательное поле, если Transaction Status = C`<br>\nФормат шаблона пользовательского интерфейса ACS.\n<br> Возможные значения: \n  - 01 - Text,\n  - 02 - Single Select,\n  - 03 - Multi Select,\n  - 04 - OOB,\n  - 05 - HTML Other (valid only for HTML UI).\n",
								"examples": {
									"default": "03"
								}
							},
							"AcsSignedContent": {
								"type": "string",
								"format": "uri",
								"description": "`Обязательное поле, если Transaction Status = C`<br>\nJWS object (представленный как string), созданный ACS для ARes.\n<br> Содержит:\n  - ACS URL (3DS SDK должен отправить Challenge Request на этот URL),\n  - ACS Ephemeral Public Key (QT),\n  - SDK Ephemeral Public Key (QC).\n",
								"examples": {
									"default": "eyJ4NWMiOlsiTUlJRGtUQ0NBbm1nQXdJQkFnSVVRU1VEV05VZEFicWozS1Uya0M0VHpaSEpVVHd3RFFZSktvWklodmNOQVFFTEJRQXdXREVMTUFrR0ExVUVCaE1DVWxVeER6QU5CZ05WQkFnTUJrMXZjMk52ZHpFUE1BMEdBMVVFQnd3R1RXOXpZMjkzTVJJ d0VBWURWUVFLREFsVGIyMWxJR0poYm1zeEV6QVJCZ05WQkFNTUNtUnpMbTF2WTJzdWNuVXdIaGNOTWpBd056RTRNVFExT1RNM1doY05NakV3TnpFNE1UUTFPVE0zV2pCWU1Rc3dDUVlEVlFRR0V3SlNWVEVQTUEwR0ExVUVDQXdHVFc5elkyOTNNUTh3RF FZRFZRUUhEQVpOYjNOamIzY3hFakFRQmdOVkJBb01DVk52YldVZ1ltRnVhekVUTUJFR0ExVUVBd3dLWkhNdWJXOWpheTV5ZFRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUhNdXB1Wlg3VUFWR3Z5dm9uZ1o4U3BJcisrRD RnMjBRaFwvZ0NGb3JUN1pDUkRaVWhRamlDSzdXSWpiVHRKQUFKVG1yelhcLzlMSGJIdHpIcFFvRFVTNXZPTnRqVWFaVGVQUE91SklMRWl6NDBBVjJCUVZRd0xnRzBjbm9oK21Qa0dNMEZ4VmJFcHFEVHk3SHB0dFAwdm96cGxHNjdFWk1HTXdKSUpESmlDYUdG OGZ0aTlYR3M4MXB3NUhWZElmOHNpQnFaWW94cGt0QWJ1dnpBTFJEUnp3dFBhclFHOTZyQStPM0dJaE53VDhZXC9pallwS0hWNkJCWDBKNmxZdFdoaVY5blhBVktYNTNlVTJ4M1E2Njh4U3BLa2dwSVh1N2xiNUN2M2dDTlIrelVqK0lTODNZYjJhUlR2WkF6MFI1 V3dBNW5Zb2J6V3Vta1wvdE5iV1FYdzBWTUNBd0VBQWFOVE1GRXdIUVlEVlIwT0JCWUVGRmVWN0dzR0tCSzhUTDljaVk4UFF2N0RhY290TUI4R0ExVWRJd1FZTUJhQUZGZVY3R3NHS0JLOFRMOWNpWThQUXY3RGFjb3RNQThHQTFVZEV3RUJcL3dRRk1BT UJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZqVGppUkxKOFpaWld5dXFLNTZHVkR6dnJiXC9uRlVDTHVjVXZEV2toK09lRWkxWUFPOUJZV3RFVTVzdmRNNTlsOWVTMGtjbGxrRzVDTklcL1U4S2dKSnUzV0tEVXp5cU80eVRNU3g3RWZDXC9qVE1oT2d2Y UJubktWK2hvV3FQZTlKNHZVYzZ2R0wzWE1cL0FNeWpoVDlBRko1ZjZBaVdZMk5QYkxHczQ2N0ZPY2Vwb1RJMkdseHBtcWdaMFVGKzlsblNZbDU0WEg2dGNZYUszWjcxS2NES0I0QkUySWVmV1Y3MUM3anBVdjFFSlFsNTY4XC8xaGpsZktXUExWcE5NTzVlTlNMR 1ZKd1VmdFA0V0tKU2Y2VmdtbG5XOU1yVStiK3hvZW44MFF1dUxrSWs1ZXBIM2l1ZDV4a1IxcVVXQU1aTUZTQW4yUHJDdjQrZFFMRDd2OG83d3BrPSJdLCJhbGciOiJQUzI1NiJ9.eyJhY3NFcGhlbVB1YktleSI6eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IlRoRj NJY3BIMVVLanliQW5lNWhHcy1BNnpyYXo2aUxiYVk0WmVEOU1oSU0iLCJ5Ijoid0VuVXNvNlRLZDlfbjZSc2NjUXRCeFc2Q1gzLXFSTGk0UWJBU3pNbm4tTSJ9LCJzZGtFcGhlbVB1YktleSI6eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6Ikp6R2tGM2w3WGxnclJ6NU 1PTl9ncDg3WUxfd0NkVVJpVUlxOXJmNnVyR2MiLCJ5IjoiTnI4UmllTE9vVzJXUkhiX2RFazFmdHRoWEZXTHdYaWZFUzNZZkFnMkhvWSJ9LCJhY3NVUkwiOiJodHRwczovL2VhY3EtZHMtbW9jay1zZXJ2aWNlLXRlc3QudGNzYmFuay5ydS9jaGFsbGVuZ2UvZDkzZjdj NjYtM2VjZi00ZDEwLWJhNjItNDYwNDZlN2I3NTk2In0.hQLVTT5YMAY8TjISRdYX2IT04zH8Z8DgoB4kIAyVfkuJ0X6AGIKXSVcIVSNgC-A_SEkCZRqAyUeu0ZJtpoIVyOf1mumBGEK-uC6yVQlX5WSPidQUj4nuBvpYsfdrGPeoHWvNsrBpMMxvvW4559jtbAUY00NcW3rwDShAi4gVKgJcssMPAM1zOOR5vi0_ClUsCW1k9a201Hv6cYcEBuO2JQ8NPLampEkZ55nOmwcPPTEziXeZsq9VjROXNfBewbA4wLuQmh8aSrcOcwFtJo0CPpdrsKiY77KPT0c8XMmZZK_FiAxzrWocfHraqC7cRJNQ5glEBakXvSfrwGg_xXA"
								}
							},
							"AcsReferenceNumber": {
								"type": "string",
								"format": "uri",
								"description": "Уникальный идентификатор, назначенный EMVCo",
								"examples": {
									"default": "12345"
								}
							},
							"SdkTransID": {
								"type": "string",
								"format": "uri",
								"description": "Уникальный идентификатор транзакции,назначенный 3DS SDK для идентификации одной транзакции,полученный в ответе на FinishAuthorize\n",
								"examples": {
									"default": "d5a44dfe-673b-4666-82f9-96346107e424"
								}
							}
						}
					}
				]
			},
			"With3DSv2BRW": {
				"allOf": [
					{
						"$ref": "#/components/schemas/FinishAuthorize"
					},
					{
						"type": "object"
					},
					{
						"required": ["TdsServerTransId", "AcsTransId"],
						"properties": {
							"TdsServerTransId": {
								"type": "string",
								"description": "Уникальный идентификатор транзакции,генерируемый 3DS-Server, обязательный параметр для 3DS второй версии\n",
								"examples": {
									"default": "d7171a06-7159-4bdd-891a-a560fe9938d2"
								}
							},
							"AcsTransId": {
								"type": "string",
								"description": "Идентификатор транзакции,присвоенный ACS, полученный в ответе на FinishAuthorize\n",
								"examples": {
									"default": "e176d5d3-2f19-40f5-8234-46d3464e0b08"
								}
							},
							"ACSUrl": {
								"type": "string",
								"format": "uri",
								"description": "Если в ответе метода **FinishAuthorize** возвращается статус **3DS_CHECKING**, \nМерчанту необходимо сформировать запрос на URL ACS банка, \nвыпустившего карту (в ответе параметр `ACSUrl`) и вместе с этим перенаправить клиента на эту же страницу ACSUrl для прохождения 3DS\n",
								"examples": {
									"default": "https://acs.vendorcert.mirconnect.ru/mdpayacs/creq"
								}
							}
						}
					}
				]
			},
			"Confirm": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала выдается Мерчанту Т‑Кассой",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"type": "string",
						"description": "Идентификатор платежа в системе Т‑Кассы",
						"maxLength": 20,
						"examples": {
							"default": "2304882"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса (хэш SHA-256)",
						"examples": {
							"default": "c0ad1dfc4e94ed44715c5ed0e84f8ec439695b9ac219a7a19555a075a3c3ed24"
						}
					},
					"IP": {
						"type": "string",
						"description": "IP-адрес клиента",
						"examples": {
							"default": "192.168.255.255"
						}
					},
					"Amount": {
						"type": "number",
						"description": "Сумма в копейках (если не передан, используется `Amount`, переданный в методе **Init**)",
						"examples": {
							"default": 19200
						}
					},
					"Receipt": {
						"type": "object",
						"description": "JSON-объект с данными чека. Обязателен, если подключена онлайн-касса",
						"oneOf": [
							{
								"$ref": "#/components/schemas/Receipt_FFD_12"
							},
							{
								"$ref": "#/components/schemas/Receipt_FFD_105"
							}
						]
					},
					"Shops": {
						"type": "array",
						"description": "Обязательный для маркетплейсов. JSON-объект с данными Маркетплейса",
						"items": {
							"$ref": "#/components/schemas/Shops"
						}
					},
					"Route": {
						"type": "string",
						"description": "Способ платежа \n",
						"enum": ["TCB", "BNPL"],
						"examples": {
							"default": "BNPL"
						}
					},
					"Source": {
						"type": "string",
						"description": "Источник платежа \n",
						"enum": ["installment", "BNPL"],
						"examples": {
							"default": "BNPL"
						}
					}
				}
			},
			"Items_Params": {
				"type": "object",
				"description": "Информация по способу оплаты/деталям для платежей в рассрочку",
				"properties": {
					"Route": {
						"type": "string",
						"description": "Способ платежа\n",
						"enum": ["ACQ", "BNPL", "TCB", "SBER"],
						"examples": {
							"default": "ТСВ"
						}
					},
					"Source": {
						"type": "string",
						"description": "Источник платежа\n",
						"enum": [
							"BNPL",
							"cards",
							"Installment",
							"MirPay",
							"qrsbp",
							"SberPay",
							"TinkoffPay",
							"YandexPay"
						],
						"examples": {
							"default": "Installment"
						}
					},
					"CreditAmount": {
						"type": "number",
						"description": "Сумма выданного кредита в копейках (возвращается только в случае платежей в рассрочку)\n",
						"examples": {
							"default": 100000
						}
					}
				}
			},
			"Confirm-2": {
				"type": "object",
				"required": [
					"TerminalKey",
					"OrderId",
					"Success",
					"Status",
					"PaymentId",
					"ErrorCode"
				],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала выдается Мерчанту Т‑Кассой",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"OrderId": {
						"type": "string",
						"description": "Идентификатор заказа в системе Мерчанта",
						"examples": {
							"default": "21057"
						}
					},
					"Success": {
						"type": "boolean",
						"description": "Успешность прохождения запроса (true/false)",
						"examples": {
							"default": true
						}
					},
					"Status": {
						"type": "string",
						"description": "Статус транзакции",
						"enum": [
							"NEW",
							"AUTHORIZING",
							"AUTHORIZED",
							"AUTH_FAIL",
							"CANCELED",
							"CHECKING",
							"CHECKED",
							"COMPLETING",
							"COMPLETED",
							"CONFIRMING",
							"CONFIRMED",
							"DEADLINE_EXPIRED",
							"FORM_SHOWED",
							"PARTIAL_REFUNDED",
							"PREAUTHORIZING",
							"PROCESSING",
							"3DS_CHECKING",
							"3DS_CHECKED",
							"REVERSING",
							"REVERSED",
							"REFUNDING",
							"REFUNDED",
							"REJECTED",
							"UNKNOWN"
						],
						"examples": {
							"default": "CONFIRMED"
						}
					},
					"PaymentId": {
						"type": "string",
						"description": "Уникальный идентификатор транзакции в системе Т‑Кассы",
						"examples": {
							"default": "2304882"
						}
					},
					"ErrorCode": {
						"type": "string",
						"description": "Код ошибки. «0» в случае успеха",
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"type": "string",
						"description": "Краткое описание ошибки",
						"maxLength": 255,
						"examples": {
							"default": "OK"
						}
					},
					"Details": {
						"type": "string",
						"description": "Подробное описание ошибки",
						"examples": {
							"default": "None"
						}
					},
					"Params": {
						"description": "Детали для платежей в рассрочку\n",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Items_Params"
						}
					}
				}
			},
			"ShopsCancel": {
				"type": "object",
				"description": "JSON-объект с данными Маркетплейса. Обязательный для маркетплейсов",
				"required": ["ShopCode", "Amount"],
				"properties": {
					"ShopCode": {
						"description": "Код магазина\n",
						"type": "string",
						"examples": {
							"default": "700456"
						}
					},
					"Amount": {
						"description": "Cумма в копейках, которая относится к\nуказанному `ShopCode`\n",
						"type": "number",
						"examples": {
							"default": 10000
						}
					},
					"Name": {
						"description": "Наименование товара\n",
						"type": "string",
						"maxLength": 128,
						"examples": {
							"default": "Товар"
						}
					}
				}
			},
			"Cancel": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала выдается Мерчанту Т‑Кассой",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"type": "string",
						"description": "Идентификатор платежа в системе Т‑Кассы",
						"examples": {
							"default": "2304882"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса (хэш `SHA-256`)",
						"examples": {
							"default": "c0ad1dfc4e94ed44715c5ed0e84f8ec439695b9ac219a7a19555a075a3c3ed24"
						}
					},
					"IP": {
						"type": "string",
						"description": "IP-адрес клиента",
						"examples": {
							"default": "192.168.255.255"
						}
					},
					"Amount": {
						"type": "number",
						"description": "Сумма в копейках (если не передан, используется `Amount`, переданный в методе **Init**).\nВ случае отмены статуса **NEW** поле `Amount`, даже если оно заполнено, игнорируется. Отмена производится на полную сумму.\n",
						"examples": {
							"default": 19200
						}
					},
					"Receipt": {
						"type": "object",
						"description": "JSON-объект с данными чека. Обязателен, если подключена онлайн-касса <br> Данные переданные в данном запросе могут отличаться от переданных в **Init**, если отмена производится только по части товаров <br> В случае полной отмены структура чека не передается. В случае частичной отмены необходимо передавать те товары, которые нужно отменить",
						"oneOf": [
							{
								"$ref": "#/components/schemas/Receipt_FFD_12"
							},
							{
								"$ref": "#/components/schemas/Receipt_FFD_105"
							}
						]
					},
					"Shops": {
						"type": "array",
						"description": "Обязательный для маркетплейсов. JSON обьект с данными Маркетплейса",
						"items": {
							"$ref": "#/components/schemas/ShopsCancel"
						}
					},
					"QrMemberId": {
						"type": "string",
						"description": "Код банка в классификации СБП, в который необходимо выполнить возврат. См. параметр `MemberId` в методе [**QrMembersList**](#tag/Oplata-cherez-SBP/paths/~1QrMembersList/post)",
						"examples": {
							"default": "77892"
						}
					},
					"Route": {
						"type": "string",
						"description": "Способ платежа\n",
						"enum": ["TCB", "BNPL"],
						"examples": {
							"default": "BNPL"
						}
					},
					"Source": {
						"type": "string",
						"description": "Источник платежа \n",
						"enum": ["installment", "BNPL"],
						"examples": {
							"default": "BNPL"
						}
					},
					"ExternalRequestId": {
						"type": "string",
						"maxLength": 256,
						"description": "Идентификатор операции на стороне мерчанта. Параметр не работает для операций по СБП. Является обязательным для операций Долями и Рассрочки\n* если поле не передано или пустое (\"\"), то запрос будет обработан без проверки ранее созданных возвратов;\n* если поле заполнено, то перед проведением возврата проверяется запрос на отмену с таким ExternalRequestId;\n* если такой запрос уже есть, то в ответе вернется текущее состояние платежной операции; \n* если такого запроса нет, то произойдет отмена платежа.\n* Для операций Долями при заполнении параметра необходимо генерировать значение в формате UUID v4\n* Для операций Рассрочки при заполнении параметра необходимо генерировать значение  с типом string (ограничение 100 символов)\n"
					}
				}
			},
			"Cancel-2": {
				"type": "object",
				"required": [
					"TerminalKey",
					"OrderId",
					"Success",
					"Status",
					"PaymentId",
					"ErrorCode",
					"OriginalAmount",
					"NewAmount"
				],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала выдается Мерчанту Т‑Кассой",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"OrderId": {
						"type": "string",
						"description": "Идентификатор заказа в системе Мерчанта",
						"examples": {
							"default": "21057"
						}
					},
					"Success": {
						"type": "boolean",
						"description": "Успешность прохождения запроса (true/false)",
						"examples": {
							"default": true
						}
					},
					"Status": {
						"type": "string",
						"description": "Статус транзакции",
						"examples": {
							"default": "REVERSED"
						}
					},
					"OriginalAmount": {
						"type": "number",
						"description": "Сумма в копейках до операции отмены",
						"examples": {
							"default": 13000
						}
					},
					"NewAmount": {
						"type": "number",
						"description": "Сумма в копейках после операции отмены",
						"examples": {
							"default": 5000
						}
					},
					"PaymentId": {
						"type": "number",
						"description": "Уникальный идентификатор транзакции в системе Т‑Кассы",
						"examples": {
							"default": "2304882"
						}
					},
					"ErrorCode": {
						"type": "string",
						"description": "Код ошибки. «0» в случае успеха",
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"type": "string",
						"description": "Краткое описание ошибки",
						"maxLength": 255,
						"examples": {
							"default": "OK"
						}
					},
					"Details": {
						"type": "string",
						"description": "Подробное описание ошибки",
						"examples": {
							"default": "None"
						}
					},
					"ExternalRequestId": {
						"type": "string",
						"description": "Идентификатор операции на стороне Мерчанта",
						"examples": {
							"default": "756478567845678436"
						}
					}
				}
			},
			"Charge_FULL": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "RebillId", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. <br>\nВыдается Мерчанту Т‑Кассой при заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"type": "string",
						"maxLength": 20,
						"description": "Уникальный идентификатор транзакции в\nсистеме Т‑Кассы\n",
						"examples": {
							"default": "700001702044"
						}
					},
					"RebillId": {
						"description": "Идентификатор рекуррентного платежа. Значение зависимо от атрибутов:\n  * OperationInitiatorType в методе /init,\n  * Recurrent в методе /Init. <br>\nДетальная информация представлена в описании [Рекуррентный платёж](#tag/Rekurrentnyj-platyozh) и [Инициализация платежа](#tag/Standartnyj-platyozh/paths/~1Init/post)\n",
						"type": "string",
						"examples": {
							"default": "145919"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса\n",
						"examples": {
							"default": "f5a3be479324a6d3a4d9efa0d02880b77d04a91758deddcbd9e752a6df97cab5"
						}
					},
					"IP": {
						"type": "string",
						"description": "IP-адрес клиента\n",
						"examples": {
							"default": "2011:0db8:85a3:0101:0101:8a2e:0370:7334"
						}
					},
					"SendEmail": {
						"type": "boolean",
						"description": "* true — если клиент хочет получать\nуведомления на почту\n"
					},
					"InfoEmail": {
						"type": "string",
						"format": "email",
						"description": "Адрес почты клиента\n* Обязателен при передаче **SendEmail**\n",
						"examples": {
							"default": "customer@test.com"
						}
					}
				}
			},
			"Charge_SDK": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "RebillId", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. <br>\nВыдается Мерчанту Т‑Кассой при заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"type": "string",
						"description": "Уникальный идентификатор транзакции в\nсистеме Т‑Кассы\n",
						"maxLength": 20,
						"examples": {
							"default": "700001702044"
						}
					},
					"RebillId": {
						"description": "Идентификатор рекуррентного платежа\n",
						"type": "string",
						"examples": {
							"default": "145919"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса\n",
						"examples": {
							"default": "f5a3be479324a6d3a4d9efa0d02880b77d04a91758deddcbd9e752a6df97cab5"
						}
					}
				}
			},
			"GetState_FULL": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. <br>\nВыдается Мерчанту Т‑Кассой при заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"description": "Идентификатор платежа в системе Т‑Кассы\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "13660"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					},
					"IP": {
						"description": "IP-адрес клиента\n",
						"type": "string",
						"examples": {
							"default": "192.168.0.52"
						}
					}
				}
			},
			"GetState_SDK": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. <br>\nВыдается Мерчанту Т‑Кассой при заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"description": "Идентификатор платежа в системе Т‑Кассы\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "13660"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					}
				}
			},
			"AddCustomer": {
				"type": "object",
				"required": ["TerminalKey", "CustomerKey", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"CustomerKey": {
						"type": "string",
						"description": "Идентификатор клиента в системе Мерчанта",
						"maxLength": 36,
						"examples": {
							"default": "4387c647-a693-449d-bc35-91faecfc50de"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса",
						"examples": {
							"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
						}
					},
					"IP": {
						"type": "string",
						"description": "IP-адрес запроса",
						"maxLength": 40,
						"examples": {
							"default": "10.100.10.10"
						}
					},
					"Email": {
						"type": "string",
						"description": "Email клиента",
						"format": "email",
						"maxLength": 64,
						"examples": {
							"default": "username@test.ru"
						}
					},
					"Phone": {
						"description": "Телефон клиента в формате +{Ц}\n",
						"type": "string",
						"maxLength": 64,
						"examples": {
							"default": "+79031234567"
						}
					}
				}
			},
			"AddCustomerResponse": {
				"type": "object",
				"required": ["Success", "ErrorCode", "TerminalKey", "CustomerKey"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Продавцу Т‑Кассой",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"CustomerKey": {
						"type": "string",
						"description": "Идентификатор клиента в системе Мерчанта",
						"maxLength": 36,
						"examples": {
							"default": "05d65baa-9718-445e-8212-76fa0dd4c1d2"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Терминал не найден"
						}
					}
				}
			},
			"GetOrRemoveCustomer": {
				"type": "object",
				"required": ["TerminalKey", "CustomerKey", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"CustomerKey": {
						"type": "string",
						"description": "Идентификатор клиента в системе Мерчанта",
						"maxLength": 36
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса",
						"examples": {
							"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
						}
					},
					"IP": {
						"type": "string",
						"description": "IP-адрес запроса",
						"maxLength": 40
					}
				}
			},
			"GetCustomerResponse": {
				"type": "object",
				"required": ["Success", "ErrorCode", "TerminalKey", "CustomerKey"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"CustomerKey": {
						"type": "string",
						"description": "Идентификатор клиента в системе Мерчанта",
						"maxLength": 36,
						"examples": {
							"default": "4264aa7b-08ab-4429-ab5a-2a171d841ced"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверный статус клиента"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Клиент не найден."
						}
					},
					"Email": {
						"type": "string",
						"description": "Email клиента",
						"format": "email",
						"maxLength": 64,
						"examples": {
							"default": "a@test.ru"
						}
					},
					"Phone": {
						"description": "Телефон клиента в формате +{Ц}\n",
						"type": "string",
						"maxLength": 64,
						"examples": {
							"default": "+79031234567"
						}
					}
				}
			},
			"RemoveCustomerResponse": {
				"type": "object",
				"required": ["Success", "ErrorCode", "TerminalKey", "CustomerKey"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"CustomerKey": {
						"type": "string",
						"description": "Идентификатор клиента в системе Мерчанта",
						"maxLength": 36
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string"
					}
				}
			},
			"AddCard_FULL": {
				"type": "object",
				"required": ["TerminalKey", "CustomerKey", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
						"type": "string",
						"examples": {
							"default": "1111133333"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "testCustomer1234"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
						}
					},
					"CheckType": {
						"description": "Если CheckType не передается, автоматически проставляется значение NO.\n Возможные значения:\n * NO — сохранить карту без проверок. `RebillID` для рекуррентных платежей не возвращается;\n * HOLD — при сохранении сделать списание на 0 руб. `RebillID` возвращается для терминалов без\n поддержки 3DS;\n * 3DS — при сохранении карты выполнить проверку 3DS и выполнить списание на 0 р. В этом случае `RebillID` будет только для 3DS карт. Карты, не\n поддерживающие 3DS, привязаны не будут;\n * 3DSHOLD – при привязке карты выполнить проверку, поддерживает карта 3DS или нет. Если карта не поддерживает 3DS, то выполняется\n списание на 0 руб.\n",
						"type": "string",
						"enum": ["NO", "HOLD", "3DS", "3DSHOLD"]
					},
					"IP": {
						"type": "string",
						"maxLength": 40,
						"description": "IP-адрес запроса\n",
						"examples": {
							"default": "10.100.10.10"
						}
					},
					"ResidentState": {
						"description": "Признак резидентности добавляемой карты:\nВозможные значения:\n* true — Карта РФ,\n* false — Карта не РФ,\n* null — не специфицируется (универсальная карта).\n",
						"type": "boolean"
					}
				}
			},
			"AddCard_SDK": {
				"type": "object",
				"required": ["TerminalKey", "CustomerKey", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
						"type": "string",
						"examples": {
							"default": "1241421414"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "testCustomer1234"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
						}
					},
					"CheckType": {
						"description": "Возможные значения:\n* NO – сохранить карту без проверок. Rebill ID для\nрекуррентных платежей не возвращается;\n* HOLD – при сохранении сделать списание на 0\nруб. RebillID возвращается для терминалов без\nподдержки 3DS;\n* 3DS – при сохранении карты выполнить проверку\n3DS и выполнить списание на 0 р. В этом случае\nRebillID будет только для 3DS карт. Карты, не\nподдерживающие 3DS, привязаны не будут;\n* 3DSHOLD – при привязке карты выполнить\nпроверку, поддерживает карта 3DS или нет. Если карта не поддерживает 3DS, то выполняется\nсписание на 0р.\n",
						"type": "string",
						"enum": ["NO", "HOLD", "3DS", "3DSHOLD"]
					}
				}
			},
			"AddCardResponse_FULL": {
				"type": "object",
				"required": [
					"PaymentId",
					"TerminalKey",
					"CustomerKey",
					"RequestKey",
					"Success",
					"ErrorCode",
					"PaymentURL"
				],
				"properties": {
					"PaymentId": {
						"description": "Идентификатор платежа в системе Т‑Кассы\n",
						"type": "number",
						"maxLength": 20,
						"examples": {
							"default": "6155312072"
						}
					},
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "906540"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку карты\n",
						"type": "string",
						"examples": {
							"default": "ed989549-d3be-4758-95c7-22647e03f9ec"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"examples": {
							"default": "Терминал не найден"
						}
					},
					"PaymentURL": {
						"description": "UUID, используется для работы без PCI DSS\n",
						"type": "string",
						"format": "uri",
						"maxLength": 100,
						"examples": {
							"default": "82a31a62-6067-4ad8-b379-04bf13e37642d"
						}
					}
				}
			},
			"AddCardResponse_SDK": {
				"type": "object",
				"required": [
					"PaymentId",
					"TerminalKey",
					"CustomerKey",
					"RequestKey",
					"Success",
					"ErrorCode"
				],
				"properties": {
					"PaymentId": {
						"description": "Идентификатор платежа в системе Т‑Кассы\n",
						"type": "number",
						"maxLength": 20,
						"examples": {
							"default": "6155312073"
						}
					},
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "906540"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку карты\n",
						"type": "string",
						"examples": {
							"default": "ed989549-d3be-4758-95c7-22647e03f9ec"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Терминал не найден"
						}
					}
				}
			},
			"AttachCard": {
				"type": "object",
				"required": ["TerminalKey", "RequestKey", "CardData", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку карты\n",
						"type": "string",
						"format": "uuid",
						"examples": {
							"default": "13021e10-a3ed-4f14-bcd1-823b5ac37390"
						}
					},
					"CardData": {
						"description": "Зашифрованные данные карты в формате:\nPAN=4300000000000777;ExpDate=0519;CardHolder=IVAN PETROV;CVV=111\n",
						"type": "string",
						"examples": {
							"default": "U5jDbwqOVx+2vDApxe/rfACMt+rfWXzPdJ8ZXxNFVIiZaLZrOW72bGe9cKZdIDnekW0nqm88YxRD↵jyfa5Ru0kY5cQV alU+juS1u1zpamSDtaGFeb8sRZfhj72yGw+io+qHGSBeorcfgoKStyKGuBPWfG↵d0PLHuyBE6QgZyIAM1XfdmNlV0UAxOnkTGDsskL pIt3AWhw2e8KOar0vwbgCTDjznDB1/DLgOW01↵Aj/bXyLJoG1BkOrPBm9JURs+f+uyFae0hkRicNKNgXoN5pJTSQxOEauOi6ylsVJ B3WK5MNYXtj6x↵GlxcmTk/LD9kvHcjTeojcAlDzRZ87GdWeY8wgg=="
						}
					},
					"DATA": {
						"description": "В объекте передаются дополнительные параметры в формате `Ключ`:`Значение` с разделителем `|`,\nнапример, меняем на JSON объект, содержащий дополнительные параметры в виде `Ключ`:`Значение`\n\nЕсли ключи или значения содержат в себе специальные символы, то получившееся значение должно быть закодировано\nфункцией urlencode. Максимальная длина для каждого передаваемого параметра:\n* Ключ — 20 знаков,\n* Значение — 100 знаков. \n\nМаксимальное количество пар «ключ-значение» не может превышать 20\n\n>**ВАЖНО!** Для 3DS второй версии в DATA необходимо передавать параметры, описанные в объекте\n3DSv2. В HttpHeaders запроса обязательны заголовки: `User-Agent` и `Accept` \n",
						"oneOf": [
							{
								"type": "object",
								"additionalProperties": {
									"type": "string"
								}
							},
							{
								"$ref": "#/components/schemas/3DSv2"
							}
						]
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					}
				}
			},
			"AttachCardResponse": {
				"type": "object",
				"required": [
					"TerminalKey",
					"CustomerKey",
					"RequestKey",
					"CardId",
					"Success",
					"ErrorCode"
				],
				"properties": {
					"TerminalKey": {
						"description": "Платежный ключ, выдается Мерчанту при заведении\nтерминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "testRegress"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"examples": {
							"default": "testCustomerKey"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку карты\n",
						"type": "string",
						"format": "uuid",
						"examples": {
							"default": "8de92934-26c9-474c-a4ce-424f2021d24d"
						}
					},
					"CardId": {
						"description": "Идентификатор карты в системе Т‑Кассы\n",
						"type": "string",
						"examples": {
							"default": "5555"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Status": {
						"description": "Статус привязки карты:\n* NEW — новая сессия привязки карты;\n* FORM_SHOWED — показ формы привязки карты;\n* 3DS_CHECKING — отправка клиента на проверку 3DS;\n* 3DS_CHECKED — клиент успешно прошел проверку 3DS;\n* AUTHORIZING — отправка платежа на 0 руб;\n* AUTHORIZED — платеж на 0 руб прошел успешно;\n* COMPLETED — карта успешно привязана;\n* REJECTED — привязать карту не удалось.\n",
						"enum": [
							"NEW",
							"FORM_SHOWED",
							"3DS_CHECKING",
							"3DS_CHECKED",
							"AUTHORIZING",
							"AUTHORIZED",
							"COMPLETED",
							"REJECTED"
						],
						"type": "string",
						"maxLength": 20
					},
					"RebillId": {
						"description": "Идентификатор рекуррентного платежа\n",
						"type": "string",
						"examples": {
							"default": "130799909"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string"
					},
					"ACSUrl": {
						"description": "Адрес сервера управления доступом, для проверки 3DS\n(возвращается в ответе на статус 3DS_CHECKING)\n",
						"type": "string",
						"format": "uri",
						"examples": {
							"default": "https://secure.tcsbank.ru/acs/auth/start.do"
						}
					},
					"MD": {
						"description": "Уникальный идентификатор транзакции в системе\nТ‑Кассы (возвращается в ответе на статус 3DS_CHECKING)\n",
						"type": "string",
						"examples": {
							"default": "ACQT-563587431"
						}
					},
					"PaReq": {
						"description": "Результат аутентификации 3-D Secure (возвращается в ответе на статус 3DS_CHECKING)\n",
						"type": "string",
						"examples": {
							"default": "eJxVUl1TwjAQ/CtM30s+KLTDHGHQwsiogFh09C2kp1RpC2nLh7/eBAtqnnYvN3ubvUD/kK4bO9RFkmc9hzWp08BM5XGSvfecRT RyA6cvIFppxPARVaVRwD0WhXzHRhL3HMUU73itwKVtyl1Pcs8Nli3pymUQK+z2Sww6joDZYI5bAfUgYeY0OZAzNYparWRWCpBqe zWeiDZnLe3BqSmkqMeh4PRy2p02BfJThkymKCIsSiAnCCqvslIfhXEG5Eyg0muxKstN0SVkv983yyT7zN/emroiQOwlkF8js8qiwogdk lg8rEfT5WK0jj6G7D4cepNo8TWNBmwSDXtAbAfEskTjkPk0oF6DeV3a6jLj8VQHmVoXglFTqTFs7IjBn4u/BTBZa7OK8yPODPCwyT M0HSbACwby6/f6xsaoSpNMMN89+uHdV/iUPz2nyat/uxrPXz5nuX/c2nBPTVYxMflwzthJ0hIgVobUeyP1yg469xW+AedOuuM="
						}
					}
				}
			},
			"GetAddCardState": {
				"type": "object",
				"required": ["TerminalKey", "RequestKey", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "testRegressBank"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку карты\n",
						"type": "string",
						"examples": {
							"default": "13021e10-a3ed-4f14-bcd1-823b5ac37390"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
						}
					}
				}
			},
			"GetAddCardStateResponse": {
				"type": "object",
				"required": ["Success", "TerminalKey", "RequestKey", "Status"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку карты\n",
						"type": "string",
						"examples": {
							"default": "13021e10-a3ed-4f14-bcd1-823b5ac37390"
						}
					},
					"Status": {
						"description": "Статус привязки карты:\n* NEW — новая сессия привязки карты,\n* FORM_SHOWED — показ формы привязки карты,\n* 3DS_CHECKING — отправка клиента на проверку 3DS;\n* 3DS_CHECKED — клиент успешно прошел проверку 3DS;\n* AUTHORIZING — отправка платежа на 0 руб;\n* AUTHORIZED — платеж на 0 руб прошел успешно;\n* COMPLETED — карта успешно привязана,\n* REJECTED — привязать карту не удалось.\n",
						"enum": [
							"NEW",
							"FORM_SHOWED",
							"3DS_CHECKING",
							"3DS_CHECKED",
							"AUTHORIZING",
							"AUTHORIZED",
							"COMPLETED",
							"REJECTED"
						],
						"type": "string",
						"maxLength": 20
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"CardId": {
						"description": "Идентификатор карты в системе Т‑Кассы\n",
						"type": "string",
						"maxLength": 40,
						"examples": {
							"default": "156516516"
						}
					},
					"RebillId": {
						"description": "Идентификатор рекуррентного платежа\n",
						"type": "string",
						"examples": {
							"default": "134249124"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"examples": {
							"default": "Данный RequestKey не найден."
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "testCustomer1234"
						}
					}
				}
			},
			"GetCardList_FULL": {
				"type": "object",
				"required": ["TerminalKey", "CustomerKey", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
						"type": "string",
						"examples": {
							"default": "testRegressBank"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"examples": {
							"default": "testCustomer1234"
						}
					},
					"SavedCard": {
						"description": "Признак сохранения карты для оплаты в 1 клик\n",
						"type": "boolean",
						"examples": {
							"default": "true"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
						}
					},
					"IP": {
						"description": "IP-адрес запроса\n",
						"type": "string",
						"examples": {
							"default": "2011:0db8:85a3:0101:0101:8a2e:0370:7334"
						}
					}
				}
			},
			"GetCardList_SDK": {
				"type": "object",
				"required": ["TerminalKey", "CustomerKey", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
						"type": "string",
						"examples": {
							"default": "testRegressBank"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"examples": {
							"default": "testCustomer1234"
						}
					},
					"SavedCard": {
						"description": "Признак сохранения карты для оплаты в 1 клик\n",
						"type": "boolean",
						"examples": {
							"default": "true"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
						}
					}
				}
			},
			"RemoveCard": {
				"type": "object",
				"required": ["TerminalKey", "CustomerKey", "CardId", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "testRegressBank"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "testCustomer1234"
						}
					},
					"CardId": {
						"description": "Идентификатор карты в системе Т‑Кассы\n",
						"type": "string",
						"maxLength": 40,
						"examples": {
							"default": "156516516"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "30797e66108934dfa3d841b856fdad227c6b9c46d6a39296e02dc800d86d181e"
						}
					},
					"IP": {
						"description": "IP-адрес запроса\n",
						"type": "string",
						"maxLength": 40,
						"examples": {
							"default": "2011:0db8:85a3:0101:0101:8a2e:0370:7334"
						}
					}
				}
			},
			"RemoveCardResponse": {
				"type": "object",
				"required": [
					"Success",
					"ErrorCode",
					"TerminalKey",
					"CardId",
					"CustomerKey",
					"CardType",
					"Status"
				],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Status": {
						"description": "Статус карты: D — удалена\n",
						"type": "string",
						"maxLength": 100,
						"examples": {
							"default": "D"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "testCustomer1234"
						}
					},
					"CardId": {
						"description": "Идентификатор карты в системе Т‑Кассы\n",
						"type": "string",
						"maxLength": 40,
						"examples": {
							"default": "156516516"
						}
					},
					"CardType": {
						"description": "Тип карты:\n* карта списания (0),\n* карта пополнения(1),\n* карта пополнения и списания (2).\n",
						"type": "number",
						"enum": [0, 1, 2],
						"examples": {
							"default": 0
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 15,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"examples": {
							"default": "Не удалось удалить карту клиента, для данного клиента такая карта не существует"
						}
					}
				}
			},
			"GetQr": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"type": "number",
						"description": "Уникальный идентификатор транзакции в системе Т‑Кассы. Запрос будет работать даже если указать значение в \"string\" формате  \n",
						"examples": {
							"default": 10063
						}
					},
					"DataType": {
						"type": "string",
						"description": "Тип возвращаемых данных:\n* PAYLOAD – В ответе возвращается только Payload (по-умолчанию);\n* IMAGE – В ответе возвращается SVG изображение QR.\n",
						"default": "PAYLOAD",
						"enum": ["PAYLOAD", "IMAGE"],
						"examples": {
							"default": "PAYLOAD"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса",
						"examples": {
							"default": "871199b37f207f0c4f721a37cdcc71dfcea880b4a4b85e3cf852c5dc1e99a8d6"
						}
					}
				}
			},
			"QrResponse_FULL": {
				"type": "object",
				"required": [
					"TerminalKey",
					"OrderId",
					"Success",
					"Data",
					"PaymentId",
					"ErrorCode",
					"RequestKey"
				],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"OrderId": {
						"description": "Номер заказа в системе Мерчанта\n",
						"type": "string",
						"examples": {
							"default": "21057"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Data": {
						"type": "string",
						"description": "В зависимости от параметра DataType в запросе это:\n  * Payload — информация, которая должна быть закодирована в QR;\n  * SVG изображение QR в котором уже закодирован Payload.\n",
						"examples": {
							"default": "https://qr.nspk.ru/AS1000670LSS7DN18SJQDNP4B05KLJL2?type=01&bank=100000000001&sum=10000&cur=RUB&crc=C08B"
						}
					},
					"PaymentId": {
						"description": "Уникальный идентификатор транзакции в системе Т‑Кассы\n",
						"type": "number",
						"examples": {
							"default": "10063"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"examples": {
							"default": "Подробное описание ошибки"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку счета. Передается в случае привязки и одновременной оплаты по CБП\n",
						"type": "string",
						"examples": {
							"default": "Идентификатор запроса"
						}
					}
				}
			},
			"QrResponse_SDK": {
				"type": "object",
				"required": [
					"TerminalKey",
					"OrderId",
					"Success",
					"Data",
					"PaymentId",
					"ErrorCode",
					"RequestKey"
				],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"OrderId": {
						"description": "Номер заказа в системе Мерчанта\n",
						"type": "string",
						"examples": {
							"default": "21057"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Data": {
						"type": "string",
						"description": "В зависимости от параметра DataType в запросе это:\n  * Payload — информация, которая должна быть закодирована в QR;\n  * SVG изображение QR в котором уже закодирован Payload.\n",
						"examples": {
							"default": "https://qr.nspk.ru/AS1000670LSS7DN18SJQDNP4B05KLJL2?type=01&bank=100000000001&sum=10000&cur=RUB&crc=C08B"
						}
					},
					"PaymentId": {
						"description": "Уникальный идентификатор транзакции в системе Т‑Кассы\n",
						"type": "number",
						"examples": {
							"default": "10063"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"examples": {
							"default": "Подробное описание ошибки"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку счета. Передается в случае привязки и одновременной оплаты по CБП\n",
						"type": "string",
						"examples": {
							"default": "Идентификатор запроса"
						}
					}
				}
			},
			"EventData": {
				"type": "object",
				"properties": {
					"SessionId": {
						"type": "string",
						"description": "Идентификатор сессии T‑Pay"
					},
					"Type": {
						"type": "string",
						"description": "Тип события"
					},
					"AccessToken": {
						"type": "string",
						"description": "Aвторизационный токен пользователя"
					},
					"AccountId": {
						"type": "string",
						"description": "Идентификатор счета оплаты"
					},
					"EventSessionId": {
						"type": "string",
						"description": "Идентификатор события"
					}
				}
			},
			"T-PayEvent": {
				"type": "object",
				"required": ["TerminalKey", "EventData", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала. <br> Выдается Мерчанту Т‑Кассой при заведении терминала"
					},
					"EventData": {
						"type": "string",
						"description": "Данные события. Объект EventData собирается в виде списка «ключ=значение» (разделитель «;»), зашифровывается открытым ключом (X509 RSA 2048), получившееся бинарное значение кодируется в Base64. Открытый ключ генерируется Банком и выдается при регистрации терминала. Все поля обязательны.",
						"$ref": "#/components/schemas/EventData"
					},
					"PaymentId": {
						"type": "string",
						"description": "Идентификатор платежа"
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса"
					}
				}
			},
			"Member": {
				"type": "object",
				"required": ["MemberId", "MemberName", "IsPayee"],
				"properties": {
					"MemberId": {
						"type": "string",
						"description": "Идентификатор участника\n",
						"examples": {
							"default": "1000000"
						}
					},
					"MemberName": {
						"type": "string",
						"description": "Наименование участника\n",
						"examples": {
							"default": "T-Банк"
						}
					},
					"IsPayee": {
						"type": "boolean",
						"description": "* true — если данный участник был получателем\nуказанного платежа, \n* false — в противном случае.\n",
						"examples": {
							"default": true
						}
					}
				}
			},
			"AddAccountQr": {
				"type": "object",
				"required": ["TerminalKey", "Description", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Description": {
						"type": "string",
						"description": "Подробное описание деталей заказа"
					},
					"DataType": {
						"type": "string",
						"description": "Тип возвращаемых данных:\n* PAYLOAD — в ответе возвращается только Payload\n(по-умолчанию);\n* IMAGE — в ответе возвращается SVG изображение QRя\n",
						"default": "PAYLOAD",
						"enum": ["PAYLOAD", "IMAGE"],
						"examples": {
							"default": "PAYLOAD"
						}
					},
					"Data": {
						"type": "object",
						"description": "JSON объект, содержащий\nдополнительные параметры в виде `ключ`:`значение`. Данные параметры будут\nпереданы на страницу оплаты (в случае ее\nкастомизации). Максимальная длина для\nкаждого передаваемого параметра:\n  * Ключ — 20 знаков,\n  * Значение — 100 знаков.<br>\nМаксимальное количество пар `ключ`:`значение` не может превышать 20\n",
						"additionalProperties": {
							"type": "string"
						}
					},
					"RedirectDueDate": {
						"type": "string",
						"format": "datatime",
						"description": "Cрок жизни ссылки или динамического QR-кода СБП (если выбран данный способ\nоплаты). В случае, если параметр `RedirectDueDate` не был передан, проверяется настроечный параметр\nплатежного терминала `REDIRECT_TIMEOUT`, который может содержать значение срока жизни ссылки в \nчасах. Если его значение больше нуля, то оно будет установлено в качестве срока жизни ссылки или\nдинамического QR-кода. Иначе, устанавливается значение «по умолчанию» — 1440 мин (1 сутки).\n\nЕсли текущая дата превышает дату, переданную в данном параметре, ссылка для оплаты или возможность\nплатежа по QR-коду становятся недоступными и платёж выполнить нельзя.\nМаксимальное значение: 90 дней от текущей даты.\nМинимальное значение: 1 минута от текущей даты.\nФормат даты: YYYY-MM-DDTHH24:MI:SS+GMT.\n",
						"examples": {
							"default": "2016-08-31T12:28:00+03:00"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса",
						"examples": {
							"default": "871199b37f207f0c4f721a37cdcc71dfcea880b4a4b85e3cf852c5dc1e99a8d6"
						}
					}
				}
			},
			"AddAccountQrResponse": {
				"type": "object",
				"required": [
					"TerminalKey",
					"Data",
					"RequestKey",
					"Success",
					"ErrorCode"
				],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту\nТ‑Кассой\n",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Data": {
						"type": "string",
						"description": "В зависимости от параметра DataType в запросе это:\n  * Payload — информация, которая должна быть закодирована в QR;\n  * SVG изображение QR в котором уже закодирован Payload.\n",
						"examples": {
							"default": "https://qr.nspk.ru/AS1000670LSS7DN18SJQDNP4B05KLJL2?type=01&bank=100000000001&sum=10000&cur=RUB&crc=C08B"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку счета\n",
						"type": "string",
						"examples": {
							"default": "ed989549-d3be-4758-95c7-22647e03f9ec"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "OK"
						}
					}
				}
			},
			"GetAddAccountQrState": {
				"type": "object",
				"required": ["RequestKey", "TerminalKey", "Token"],
				"properties": {
					"RequestKey": {
						"description": "Идентификатор запроса на привязку счета\n",
						"type": "string",
						"format": "uuid",
						"examples": {
							"default": "13021e10-a3ed-4f14-bcd1-823b5ac37390"
						}
					},
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					}
				}
			},
			"GetAddAccountQrStateResponse": {
				"type": "object",
				"required": [
					"TerminalKey",
					"RequestKey",
					"Status",
					"Success",
					"ErrorCode"
				],
				"properties": {
					"TerminalKey": {
						"description": "Платежный ключ, выдается Мерчанту при заведении\nтерминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "testRegress"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку счета\n",
						"type": "string",
						"format": "uuid",
						"examples": {
							"default": "211258"
						}
					},
					"BankMemberId": {
						"description": "Идентификатор Банка клиента, который будет\nсовершать оплату по привязаному счету —\nзаполнен, если статус ACTIVE, INACTIVE\n",
						"type": "string",
						"examples": {
							"default": "100000000004"
						}
					},
					"BankMemberName": {
						"description": "Наименование Банка-эмитента, заполнен если BankMemberId\nпередан\n",
						"type": "string",
						"examples": {
							"default": "T-Банк"
						}
					},
					"AccountToken": {
						"description": "Идентификатор привязки счета, назначаемый Банком Плательщика\n",
						"type": "string",
						"examples": {
							"default": "a022254a5c3c46a7327c8a12cb5c8389"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Status": {
						"description": "Статус привязки карты:\n* NEW — получен запрос на привязку счета;\n* PROCESSING — запрос в обработке,\n* ACTIVE — привязка счета успешна,\n* INACTIVE — привязка счета неуспешна/деактивирована.\n",
						"enum": ["NEW", "PROCESSING", "ACTIVE", "INACTIVE"],
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "ACTIVE"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "OK"
						}
					}
				}
			},
			"GetAccountQrList": {
				"type": "object",
				"required": ["TerminalKey", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					}
				}
			},
			"GetAccountQrListResponse": {
				"type": "object",
				"required": [
					"TerminalKey",
					"RequestKey",
					"Status",
					"Success",
					"ErrorCode"
				],
				"properties": {
					"TerminalKey": {
						"description": "Платежный ключ, выдается Мерчанту при заведении\nтерминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "testRegress"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "OK"
						}
					},
					"AccountTokens": {
						"description": "Список привязанных счетов покупателя по магазину\n",
						"type": "object",
						"properties": {
							"RequestKey": {
								"description": "Идентификатор запроса на привязку карты\n",
								"type": "string",
								"format": "uuid",
								"examples": {
									"default": "8de92934-26c9-474c-a4ce-424f2021d24d"
								}
							},
							"Status": {
								"description": "Статус привязки карты:\n* NEW — получен запрос на привязку счета;\n* PROCESSING — запрос в обработке,\n* ACTIVE — привязка счета успешна,\n* INACTIVE — привязка счета неуспешна/деактивирована.\n",
								"enum": ["NEW", "PROCESSING", "ACTIVE", "INACTIVE"],
								"type": "string",
								"maxLength": 20
							},
							"AccountToken": {
								"description": "Идентификатор привязки счета, назначаемый Банком Плательщика\n",
								"type": "string",
								"examples": {
									"default": "0b67f2cae19b41809f85d5674de30a1a"
								}
							},
							"BankMemberId": {
								"description": "Идентификатор банка клиента (эмитент), который будет\nсовершать оплату по привязаному счету —\nзаполнен, если статус ACTIVE, INACTIVE\n",
								"type": "string",
								"examples": {
									"default": "5555"
								}
							},
							"BankMemberName": {
								"description": "Наименование банка-эмитента, заполнен если BankMemberId\nпередан\n",
								"type": "string",
								"examples": {
									"default": "T-Банк"
								}
							}
						}
					}
				}
			},
			"ChargeQr": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "AccountToken", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. <br>\nВыдается Мерчанту Т‑Кассой при заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"type": "string",
						"description": "Уникальный идентификатор транзакции в\nсистеме Т‑Кассы\n",
						"examples": {
							"default": "700001702044"
						}
					},
					"AccountToken": {
						"type": "string",
						"description": "Идентификатор привязки счета,\nназначаемый банком-эмитентом\n",
						"examples": {
							"default": "70LSS7DN18SJQRS10006DNPKLJL24B05"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса\n",
						"examples": {
							"default": "f5a3be479324a6d3a4d9efa0d02880b77d04a91758deddcbd9e752a6df97cab5"
						}
					},
					"IP": {
						"type": "string",
						"description": "IP-адрес клиента\n",
						"examples": {
							"default": "2011:0db8:85a3:0101:0101:8a2e:0370:7334"
						}
					},
					"SendEmail": {
						"type": "boolean",
						"description": "* true – если клиент хочет получать\nуведомления на почту\n"
					},
					"InfoEmail": {
						"type": "string",
						"format": "email",
						"description": "Адрес почты клиента. Обязательно, если передан параметр SendEmail = true\n",
						"examples": {
							"default": "customer@test.com"
						}
					}
				}
			},
			"ChargeQrResponse": {
				"type": "object",
				"required": [
					"TerminalKey",
					"Amount",
					"OrderId",
					"Success",
					"PaymentId",
					"ErrorCode"
				],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Amount": {
						"description": "Сумма в копейках\n",
						"type": "number",
						"maxLength": 20,
						"examples": {
							"default": 100000
						}
					},
					"OrderId": {
						"description": "Идентификатор заказа в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "21050"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Status": {
						"description": "Статус платежа \n\nПолучает в ответе 1 из 3 статусов:\n* CONFIRMED — если платеж выполнен,\n* REJECTED — если платеж не выполнен,\n* FORM SHOWED — если форма оплаты пока что только отображается, и клиент еще не успел провести оплату.\n",
						"type": "string",
						"maxLength": 20,
						"enum": ["CONFIRMED", "REJECTED"]
					},
					"PaymentId": {
						"description": "Идентификатор платежа в системе Т‑Кассы\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "13660"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки.\n* \"0\" — успешная операция,\n* \"3013\" — рекуррентные платежи недоступны,\n* \"3015\" — неверный статус AccountToken.\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string"
					},
					"Currency": {
						"type": "number",
						"description": "Код валюты по ISO 4217",
						"examples": {
							"default": 643
						}
					}
				}
			},
			"SbpPayTest": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "Token"],
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"description": "Идентификатор платежа в системе Т‑Кассы\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "13660"
						}
					},
					"Token": {
						"description": "Подпись запроса\n",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					},
					"IsDeadlineExpired": {
						"description": "Признак эмуляции отказа проведения платежа Банком по таймауту. По умолчанию не используется (эмуляция не требуется)\n* false — эмуляция не требуется,\n* true — требуется эмуляция (не может быть использован вместе с IsRejected = true).\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"IsRejected": {
						"description": "Признак эмуляции отказа Банка в проведении платежа. По умолчанию не используется (эмуляция не требуется)\n* false — эмуляция не требуется,\n* true — требуется эмуляция (не может быть использован вместе с IsDeadlineExpired = true).\n",
						"type": "boolean",
						"examples": {
							"default": false
						}
					}
				}
			},
			"SbpPayTestResponse": {
				"type": "object",
				"required": ["Success", "ErrorCode", "Message", "Details"],
				"properties": {
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"maxLength": 255,
						"examples": {
							"default": "OK"
						}
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string",
						"examples": {
							"default": "0"
						}
					}
				}
			},
			"GetQRStateResponse_FULL": {
				"type": "object",
				"required": ["Success", "ErrorCode"],
				"properties": {
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"enum": [true, false],
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"examples": {
							"default": "0"
						}
					},
					"Status": {
						"description": "Статус платежа <br>\nОбязателен, если не произошло ошибки при получении статуса\n",
						"type": "string",
						"examples": {
							"default": "CONFIRMED"
						}
					},
					"QrCancelCode": {
						"description": "Код ошибки возврата, полученный от СБП\n",
						"type": "string",
						"examples": {
							"default": "I05043"
						}
					},
					"QrCancelMessage": {
						"description": "Дополнительное описание ошибки, прозошедшей при возврате по QR\n",
						"type": "string",
						"examples": {
							"default": "У клиента нет расчетного счета в этом банке. Попробуйте вернуть деньги на счет этого клиента в другом банке"
						}
					},
					"OrderId": {
						"description": "Номер заказа в системе Мерчанта\n",
						"type": "string",
						"examples": {
							"default": "7830122"
						}
					},
					"Amount": {
						"description": "Сумма отмены в копейках\n",
						"type": "number",
						"examples": {
							"default": 10000
						}
					},
					"Message": {
						"description": "Краткое описание ошибки, произошедшей при запросе статуса\n",
						"type": "string",
						"examples": {
							"default": "OK"
						}
					}
				}
			},
			"GetQRStateResponse_SDK": {
				"type": "object",
				"required": ["Success", "ErrorCode"],
				"properties": {
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"enum": [true, false],
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"examples": {
							"default": "0"
						}
					},
					"Status": {
						"description": "Статус платежа <br>\nОбязателен, если не произошло ошибки при получении статуса\n",
						"type": "string",
						"examples": {
							"default": "CONFIRMED"
						}
					},
					"QrCancelCode": {
						"description": "Код ошибки возврата, полученный от СБП\n",
						"type": "string",
						"examples": {
							"default": "I05043"
						}
					},
					"QrCancelMessage": {
						"description": "Дополнительное описание ошибки, прозошедшей при возврате по QR\n",
						"type": "string",
						"examples": {
							"default": "У клиента нет расчетного счета в этом банке. Попробуйте вернуть деньги на счет этого клиента в другом банке"
						}
					},
					"OrderId": {
						"description": "Номер заказа в системе Мерчанта\n",
						"type": "string",
						"examples": {
							"default": "7830122"
						}
					},
					"Amount": {
						"description": "Сумма отмены в копейках\n",
						"type": "number",
						"examples": {
							"default": 10000
						}
					},
					"Message": {
						"description": "Краткое описание ошибки, произошедшей при запросе статуса\n",
						"type": "string",
						"examples": {
							"default": "OK"
						}
					}
				}
			},
			"CheckOrder": {
				"type": "object",
				"required": ["TerminalKey", "OrderId", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала выдается Мерчанту Т‑Кассой",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"OrderId": {
						"type": "string",
						"description": "Номер заказа в системе Мерчанта <br> Не является уникальным идентификатором \n",
						"examples": {
							"default": "21057"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса",
						"examples": {
							"default": "4c4c36adf9936b011879fa26f60759e7b47e57f7968283129b0ae9ac457486ab"
						}
					}
				}
			},
			"PaymentsCheckOrder": {
				"type": "object",
				"description": "Детали",
				"required": ["PaymentId", "Status", "Success", "ErrorCode", "Message"],
				"properties": {
					"PaymentId": {
						"description": "Уникальный идентификатор транзакции в системе Т‑Кассы\n",
						"type": "string",
						"examples": {
							"default": 124671934
						}
					},
					"Amount": {
						"description": "Сумма операции в копейках\n",
						"type": "number",
						"examples": {
							"default": 13660
						}
					},
					"Status": {
						"description": "Статус операции\n",
						"type": "string",
						"examples": {
							"default": "NEW"
						}
					},
					"RRN": {
						"description": "RRN операции\n",
						"type": "string",
						"examples": {
							"default": "12345678"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "string",
						"examples": {
							"default": "true"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "number",
						"examples": {
							"default": 0
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string",
						"examples": {
							"default": "None"
						}
					}
				}
			},
			"CheckOrder-2": {
				"type": "object",
				"required": [
					"Success",
					"ErrorCode",
					"TerminalKey",
					"OrderId",
					"Payments"
				],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала выдается Мерчанту Т‑Кассой",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"OrderId": {
						"type": "string",
						"description": "Идентификатор заказа в системе Мерчанта",
						"examples": {
							"default": "21057"
						}
					},
					"Success": {
						"type": "boolean",
						"description": "Успешность прохождения запроса (true/false)",
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"type": "string",
						"description": "Код ошибки. «0» в случае успеха",
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"type": "string",
						"description": "Краткое описание ошибки",
						"maxLength": 255,
						"examples": {
							"default": "OK"
						}
					},
					"Details": {
						"type": "string",
						"description": "Подробное описание ошибки",
						"examples": {
							"default": "None"
						}
					},
					"Payments": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PaymentsCheckOrder"
						}
					}
				}
			},
			"SendClosingReceipt": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "Token", "Receipt"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала выдается Мерчанту Т‑Кассой",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentId": {
						"type": "string",
						"description": "Идентификатор платежа в системе Т‑Кассы",
						"examples": {
							"default": "2304882"
						}
					},
					"Receipt": {
						"type": "object",
						"description": "Объект с данными чека",
						"oneOf": [
							{
								"$ref": "#/components/schemas/Receipt_FFD_12"
							},
							{
								"$ref": "#/components/schemas/Receipt_FFD_105"
							}
						]
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса"
					}
				}
			},
			"SendClosingReceipt-2": {
				"type": "object",
				"required": ["Success", "ErrorCode"],
				"properties": {
					"Success": {
						"type": "boolean",
						"description": "Успешность прохождения запроса (true/false)",
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"type": "string",
						"description": "Код ошибки. «0» в случае успеха",
						"examples": {
							"default": "2304882"
						}
					},
					"Message": {
						"type": "string",
						"description": "Краткое описание ошибки",
						"maxLength": 255,
						"examples": {
							"default": "Неверные параметры"
						}
					}
				}
			},
			"DataNotification": {
				"type": "object",
				"description": "Дополнительные параметры платежа, переданные при создании заказа. Явяляются обязательными для платежей «в Рассрочку». В ответе параметр приходит в формате <b>Data</b> (не полностью в верхнем регистре).",
				"properties": {
					"Route": {
						"description": "Способ платежа\n",
						"type": "string",
						"enum": ["TCB"],
						"examples": {
							"default": "TCB"
						}
					},
					"Source": {
						"description": "Источник платежа\n",
						"type": "string",
						"enum": ["Installment"],
						"examples": {
							"default": "Installment"
						}
					},
					"CreditAmount": {
						"description": "Сумма выданного кредита в копейках\n",
						"type": "number",
						"examples": {
							"default": 10000
						}
					}
				}
			},
			"NotificationPayment": {
				"type": "object",
				"description": "**Нотификация о платеже**\n",
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Amount": {
						"description": "Сумма в копейках\n",
						"type": "number",
						"maxLength": 10,
						"examples": {
							"default": 100000
						}
					},
					"OrderId": {
						"description": "Идентификатор заказа в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "21050"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Status": {
						"description": "Статус платежа\n",
						"type": "string",
						"maxLength": 20
					},
					"PaymentId": {
						"description": "Уникальный идентификатор транзакции в системе Т‑Кассы\n",
						"type": "number",
						"maxLength": 20,
						"examples": {
							"default": "13660"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string"
					},
					"Details": {
						"description": "Подробное описание ошибки\n",
						"type": "string"
					},
					"RebillId": {
						"type": "number",
						"maxLength": 20,
						"description": "Идентификатор автоплатежа",
						"examples": {
							"default": 3207469334
						}
					},
					"CardId": {
						"description": "Идентификатор карты в системе Т‑Кассы\n",
						"type": "number",
						"examples": {
							"default": 10452089
						}
					},
					"Pan": {
						"type": "string",
						"description": "Замаскированный номер карты/Замаскированный номер телефона"
					},
					"ExpDate": {
						"type": "string",
						"description": "Срок действия карты\nВ формате MMYY, где YY — две последние цифры года\n",
						"examples": {
							"default": "0229"
						}
					},
					"Token": {
						"description": "Подпись запроса. Формируется по такому же принципу, как и в случае\nзапросов в Т‑Кассу\n",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					},
					"DATA": {
						"type": "object",
						"$ref": "#/components/schemas/DataNotification"
					}
				}
			},
			"NotificationAddCard": {
				"type": "object",
				"description": "**Нотификации о привязке**\n\nУведомления магазину о статусе выполнения метода привязки карты `AttachCard`.\nПосле успешного выполнения метода `AttachCard` Т‑Касса отправляет POST-запрос с информацией о привязке карты. Нотификация отправляется на ресурс Мерчанта на адрес `Notification URL` синхронно и ожидает ответа в течение 10 секунд. \nПосле получения ответа или неполучения его за заданное время сервис переадресует клиента на `Success AddCard URL` или `Fail AddCard URL` в зависимости от результата привязки карты.\nВ случае успешной обработки нотификации Мерчант должен вернуть ответ с телом сообщения: OK (без тегов и заглавными английскими буквами). <br>\nЕсли тело сообщения отлично от **OK**, любая нотификация считается неуспешной, и сервис будет повторно отправлять нотификацию раз в час в течение 24 часов. Если нотификация за это время так и не доставлена, она складывается в дамп\n",
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой \nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"CustomerKey": {
						"description": "Идентификатор клиента в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "testCustomer1234"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку карты\n",
						"type": "string",
						"format": "uuid",
						"examples": {
							"default": "13021e10-a3ed-4f14-bcd1-823b5ac37390"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Status": {
						"description": "Статус привязки карты\nПолучает в ответе 1 из 2 статусов привязки:\n  * COMPLETED — при одностадийной оплате,\n  * REJECTED — при двухстадийной оплате.\n",
						"type": "string",
						"maxLength": 20,
						"enum": ["COMPLETED", "REJECTED"]
					},
					"PaymentId": {
						"description": "Идентификатор платежа в системе Т‑Кассы\n",
						"type": "number",
						"maxLength": 20,
						"examples": {
							"default": "13660"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"RebillId": {
						"type": "string",
						"maxLength": 20,
						"description": "Идентификатор автоплатежа",
						"examples": {
							"default": "3207469334"
						}
					},
					"CardId": {
						"description": "Идентификатор карты в системе Т‑Кассы\n",
						"type": "string",
						"examples": {
							"default": "10452089"
						}
					},
					"Pan": {
						"type": "string",
						"description": "Замаскированный номер карты"
					},
					"ExpDate": {
						"type": "string",
						"description": "Срок действия карты\nВ формате MMYY, где YY — две последние цифры года\n",
						"examples": {
							"default": "0229"
						}
					},
					"Token": {
						"description": "Подпись запроса. Формируется по такому же принципу, как и в случае\nзапросов в Т‑Кассу\n",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					}
				}
			},
			"Receipt_FFD_12-2": {
				"type": "object",
				"description": "Объект с информацией о видах суммы платежа",
				"properties": {
					"FfdVersion": {
						"description": "Версия ФФД.\nВозможные значения:\n* \"FfdVersion\": \"1.2\",\n* \"FfdVersion\": \"1.05\".\n",
						"type": "string"
					},
					"ClientInfo": {
						"description": "Информация по клиенту.\n",
						"$ref": "#/components/schemas/ClientInfo"
					},
					"Taxation": {
						"description": "Система налогообложения. Перечисление с\nвозможными значениями:\n* \"osn\" - общая СН,\n* \"usn_income\" - упрощенная СН (доходы),\n* \"usn_income_outcome\" - упрощенная СН (доходы минус расходы),\n* \"envd\" - единый налог на вмененный доход;\n* \"esn\" - единый сельскохозяйственный налог,\n* \"patent\" - патентная СН.\n",
						"type": "string",
						"enum": [
							"osn",
							"usn_income",
							"usn_income_outcome",
							"envd",
							"esn",
							"patent"
						],
						"examples": {
							"default": "osn"
						}
					},
					"Email": {
						"description": "Электронная почта клиента\n",
						"type": "string",
						"format": "email",
						"maxLength": 64,
						"examples": {
							"default": "a@test.ru"
						}
					},
					"Phone": {
						"description": "Телефон клиента в формате +{Ц}\n",
						"type": "string",
						"maxLength": 64,
						"examples": {
							"default": "+79031234567"
						}
					},
					"Customer": {
						"description": "Идентификатор/Имя клиента",
						"type": "string"
					},
					"CustomerInn": {
						"description": "ИНН клиента",
						"type": "string"
					},
					"Items": {
						"description": "Массив, содержащий в себе информацию о товарах",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Items_FFD_12"
						}
					},
					"Payments": {
						"description": "Объект c информацией о видах суммы платежа.\n* Если объект не передан, будет автоматически указана итоговая сумма чека с видом оплаты\n\"Безналичный\";\n* Если передан объект **receipt.Payments**, то значение в **Electronic** должно быть равно итоговому значению\nAmount в методе `Init`. При этом сумма введенных значений по всем видам оплат, включая Electronic,\nдолжна быть равна сумме (Amount) всех товаров, переданных в объекте **receipt.Items**.\n",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Payments"
						}
					}
				}
			},
			"Receipt_FFD_105-2": {
				"type": "object",
				"description": "Объект с информацией о видах суммы платежа",
				"properties": {
					"Items": {
						"description": "Массив позиций чека с информацией о товарах",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Items_FFD_105"
						}
					},
					"FfdVersion": {
						"description": "Версия ФФД.\nВозможные значения:\n* \"FfdVersion\": \"1.2\",\n* \"FfdVersion\": \"1.05\".\nПо умолчанию версия ФФД - 1.05\n",
						"type": "string",
						"default": "1.05"
					},
					"Email": {
						"description": "Электронная почта клиента.\nАтрибут должен быть заполнен, если не передано значение \nв атрибуте “Phone” \n",
						"type": "string",
						"format": "email",
						"maxLength": 64,
						"examples": {
							"default": "a@test.ru"
						}
					},
					"Phone": {
						"description": "Телефон клиента в формате +{Ц}\n",
						"type": "string",
						"maxLength": 64,
						"examples": {
							"default": "+79031234567"
						}
					},
					"Taxation": {
						"description": "Система налогообложения. Перечисление с\nвозможными значениями:\n* \"osn\" - общая СН,\n* \"usn_income\" - упрощенная СН (доходы),\n* \"usn_income_outcome\" - упрощенная СН (доходы минус расходы),\n* \"envd\" - единый налог на вмененный доход;\n* \"esn\" - единый сельскохозяйственный налог,\n* \"patent\" - патентная СН.\n",
						"type": "string",
						"enum": [
							"osn",
							"usn_income",
							"usn_income_outcome",
							"envd",
							"esn",
							"patent"
						],
						"examples": {
							"default": "osn"
						}
					},
					"Payments": {
						"description": "Объект c информацией о видах суммы платежа.\n* Если объект не передан, будет автоматически указана итоговая сумма чека с видом оплаты\n\"Безналичный\";\n* Если передан объект **receipt.Payments**, то значение в **Electronic** должно быть равно итоговому значению\nAmount в методе `Init`. При этом сумма введенных значений по всем видам оплат, включая Electronic,\nдолжна быть равна сумме (Amount) всех товаров, переданных в объекте **receipt.Items**\n",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Payments"
						}
					}
				}
			},
			"NotificationFiscalization": {
				"type": "object",
				"description": "**Нотификация о фискацизации**\n\nЕсли используется подключенная онлайн касса, по результату фискализации будет\nотправлена нотификация с фискальными данными\n",
				"properties": {
					"TerminalKey": {
						"description": "Идентификатор терминала. Выдается Мерчанту Т‑Кассой\nпри заведении терминала\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"OrderId": {
						"description": "Идентификатор заказа в системе Мерчанта\n",
						"type": "string",
						"maxLength": 36,
						"examples": {
							"default": "21050"
						}
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"Status": {
						"description": "Для нотификации о фискализации значение всегда RECEIPT\n",
						"type": "string",
						"maxLength": 20,
						"default": "RECEIPT"
					},
					"PaymentId": {
						"description": "Идентификатор платежа в системе Т‑Кассы\n",
						"type": "number",
						"maxLength": 20,
						"examples": {
							"default": "13660"
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"ErrorMessage": {
						"type": "string",
						"description": "Описание ошибки, если она произошла"
					},
					"Amount": {
						"description": "Сумма в копейках\n",
						"type": "number",
						"maxLength": 10,
						"examples": {
							"default": 100000
						}
					},
					"FiscalNumber": {
						"type": "integer",
						"description": "Номер чека в смене"
					},
					"ShiftNumber": {
						"type": "integer",
						"description": "Номер смены"
					},
					"ReceiptDatetime": {
						"type": "string",
						"format": "datetime",
						"description": "Дата и время документа из ФН"
					},
					"FnNumber": {
						"type": "string",
						"description": "Номер ФН"
					},
					"EcrRegNumber": {
						"type": "string",
						"description": "Регистрационный номер ККТ"
					},
					"FiscalDocumentNumber": {
						"type": "integer",
						"description": "Фискальный номер документа"
					},
					"FiscalDocumentAttribute": {
						"type": "integer",
						"description": "Фискальный признак документа"
					},
					"Receipt": {
						"type": "object",
						"description": "Состав чека",
						"oneOf": [
							{
								"$ref": "#/components/schemas/Receipt_FFD_12-2"
							},
							{
								"$ref": "#/components/schemas/Receipt_FFD_105-2"
							}
						]
					},
					"Type": {
						"type": "string",
						"description": "Признак расчета"
					},
					"Token": {
						"description": "Подпись запроса. Формируется по такому же принципу, как и в случае\nзапросов в Т‑Кассу\n",
						"type": "string",
						"examples": {
							"default": "7241ac8307f349afb7bb9dda760717721bbb45950b97c67289f23d8c69cc7b96"
						}
					},
					"Ofd": {
						"type": "string",
						"description": "Наименование оператора фискальных данных"
					},
					"Url": {
						"type": "string",
						"description": "URL адрес с копией чека"
					},
					"QrCodeUrl": {
						"type": "string",
						"description": "URL адрес с QR кодом для проверки чека в ФНС"
					},
					"CalculationPlace": {
						"type": "string",
						"description": "Место осуществления расчетов"
					},
					"CashierName": {
						"type": "string",
						"description": "Имя кассира"
					},
					"SettlePlace": {
						"type": "string",
						"description": "Место нахождения (установки) ККМ"
					}
				}
			},
			"NotificationQr": {
				"type": "object",
				"description": "**Нотификация о статусе привязки счета по QR**\n\nПосле привязки счета по QR, магазину отправляется статус привязки и токен.\nНотификация будет приходить по статусам **ACTIVE** и **INACTIVE**\n",
				"required": [
					"TerminalKey",
					"RequestKey",
					"Status",
					"NotificationType",
					"Success",
					"ErrorCode",
					"Token"
				],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой\n",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"RequestKey": {
						"description": "Идентификатор запроса на привязку счета\n",
						"type": "string",
						"format": "uuid",
						"examples": {
							"default": "13021e10-a3ed-4f14-bcd1-823b5ac37390"
						}
					},
					"AccountToken": {
						"type": "string",
						"description": "Идентификатор привязки счета,\nназначаемый банком-эмитентом\n",
						"examples": {
							"default": "70LSS7DN18SJQRS10006DNPKLJL24B05"
						}
					},
					"BankMemberId": {
						"description": "Идентификатор банка-эмитента клиента, который будет\nсовершать оплату по привязаному счету —\nзаполнен, если статус ACTIVE\n",
						"type": "string",
						"examples": {
							"default": "5555"
						}
					},
					"BankMemberName": {
						"description": "Наименование банка-эмитента, заполнен если BankMemberId\nпередан\n",
						"type": "string"
					},
					"NotificationType": {
						"type": "string",
						"description": "Тип нотификации, всегда константа «LINKACCOUNT»",
						"default": "LINKACCOUNT"
					},
					"Success": {
						"description": "Успешность прохождения запроса (true/false)\n",
						"type": "boolean",
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"description": "Код ошибки. «0» в случае успеха\n",
						"type": "string",
						"maxLength": 20,
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"description": "Краткое описание ошибки\n",
						"type": "string"
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса. Формируется по такому же\nпринципу, как и в случае запросов в Т‑Кассу\n",
						"examples": {
							"default": "871199b37f207f0c4f721a37cdcc71dfcea880b4a4b85e3cf852c5dc1e99a8d6"
						}
					},
					"Status": {
						"type": "string",
						"description": "Cтатус привязки",
						"examples": {
							"default": "ACTIVE"
						}
					}
				}
			},
			"GetDeepLink": {
				"type": "object",
				"required": ["TerminalKey", "PaymentId", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала. <br> Выдается Мерчанту Т‑Кассой при заведении терминала",
						"examples": {
							"default": "bestforu"
						}
					},
					"PaymentId": {
						"type": "string",
						"description": "Уникальный идентификатор транзакции в системе Банка",
						"examples": {
							"default": "2559680770"
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса",
						"examples": {
							"default": "871199b37f207f0c4f721a37cdcc71dfcea880b4a4b85e3cf852c5dc1e99a8d6"
						}
					}
				}
			},
			"GetDeepLinkResponse": {
				"type": "object",
				"required": ["Success", "ErrorCode"],
				"properties": {
					"Success": {
						"type": "boolean",
						"description": "Успешность прохождения запроса (true/false)",
						"enum": [true, false],
						"examples": {
							"default": "true"
						}
					},
					"ErrorCode": {
						"type": "string",
						"description": "Код ошибки, «0» - если успешно",
						"examples": {
							"default": 0
						}
					},
					"Deeplink": {
						"type": "string",
						"description": "Сформированный и подписанный JWT-токеном deeplink",
						"examples": {
							"default": "mirpay://pay.mironline.ru/inapp/eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCIsImprdSI6Imh0dHBzOi8vc3AtbnNway5la2Fzc2lyLmNvbS9qd2tzL0IwMDAwMDAwMC1qd2tzLmp«Протокол MIRPAY EACQ с PCI DSS»28zb24iLCJraWQiOiIxMDAwIn0.eyJpYXQiOjE2NjA1NTMwNzksImlzcyI6IjAwMDAwMDAwIiwib3JkZXJJZCI6IjEyMzQ1NiIsInN1bSI6MTAwMDAsImN1ciI6NjQzLCJtZWRpYSI6IkRMIiwicnVybCI6Imh0dHBzOi8vbWVyY2hhbnQvYXBpL3YxL2luYXBwL21lcmNoYW50cy8wMDAwMDAwMC9vcmRlcnMvMTIzNDU2In0.rk0LjOtx3RR9hboAiVQopZvKzIQpu0SGg2wlt6a1LJN1gQ7NEqcXY0NXfjmhqbPdv8BnDonhXMWLoi9GK4wT8-P_TOfRnqz5JfA4crvtVaD6yvmfkmdFMsFjTDDJfcsaMlqblVw2u5De3SU9oCNKWaWLUUg7i6gRtTCFdvPc1XDlB7WUd_doHLVEV4s5kP1jmArXMBxo1EpJk3pZ-KHmxFeKLjf47NQuNzRv0wZKTgkHk252lXX9QBCE_uTBvV477YZ6FTqAXh9vP1zGiSG6Elel3EKMVxUNkMAhHIACxwmOGRpGsPv0WFlw1T0y44Q7paV_t6st6vlHO3RXYfbA"
						}
					},
					"Message": {
						"type": "string",
						"description": "Краткое описание ошибки"
					},
					"Details": {
						"type": "string",
						"description": "Подробное описание ошибки"
					}
				}
			},
			"GetTerminalPayMethods": {
				"type": "object",
				"required": ["TerminalKey", "Paysource"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала. <br> Выдается Мерчанту Т‑Кассой при заведении терминала",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"Paysource": {
						"type": "string",
						"description": "Тип подключения:   \n- API;   \n- SDK.\n",
						"examples": {
							"default": "API"
						}
					}
				}
			},
			"Paymethod": {
				"type": "object",
				"required": ["PayMethod"],
				"description": "Перечень доступных методов оплаты",
				"properties": {
					"PayMethod": {
						"type": "string",
						"description": "Доступные методы оплаты:\n* TinkoffPay,\n* YandexPay,\n* ApplePay,\n* GooglePay,\n* SBP,\n* MirPay.\n",
						"examples": {
							"default": "TinkoffPay"
						}
					},
					"Params": {
						"type": "object",
						"description": "Перечень параметров подключения в формате ключзначение",
						"examples": {
							"default": "\"Version\":2.0,\n\"CustomButton\":{\n  \"СustomButtonType\":\"percentButton\",\n  \"Percent\":5,}\n"
						}
					}
				}
			},
			"GetTerminalPayMethodsResponse": {
				"type": "object",
				"required": [
					"Success",
					"ErrorCode",
					"TerminalInfo",
					"TerminalInfo.AddCardScheme",
					"TerminalInfo.TokenRequired",
					"TerminalInfo.InitTokenRequired",
					"PayMethod"
				],
				"properties": {
					"Success": {
						"type": "boolean",
						"description": "Успешность прохождения запроса (true/false)",
						"enum": [true, false],
						"examples": {
							"default": "true"
						}
					},
					"ErrorCode": {
						"type": "string",
						"description": "Код ошибки, «0» - если успешно",
						"examples": {
							"default": "0"
						}
					},
					"Message": {
						"type": "string",
						"description": "Краткое описание ошибки"
					},
					"Details": {
						"type": "string",
						"description": "Подробное описание ошибки"
					},
					"TerminalInfo": {
						"type": "object",
						"description": "Характеристики терминала"
					},
					"TerminalInfo.Paymethods": {
						"type": "array",
						"description": "Перечень доступных методов оплаты",
						"items": {
							"$ref": "#/components/schemas/Paymethod"
						}
					},
					"TerminalInfo.AddCardScheme": {
						"type": "boolean",
						"description": "Признак возможности сохранения карт",
						"enum": [true, false],
						"examples": {
							"default": "false"
						}
					},
					"TerminalInfo.TokenRequired": {
						"type": "boolean",
						"description": "Признак необходимости подписания токеном",
						"enum": [true, false],
						"examples": {
							"default": "true"
						}
					},
					"TerminalInfo.InitTokenRequired": {
						"type": "boolean",
						"description": "Признак необходимости подписания токеном запроса `Init`",
						"enum": [true, false],
						"examples": {
							"default": "true"
						}
					}
				}
			},
			"by_url": {
				"title": "на URL",
				"required": ["TerminalKey", "CallbackUrl", "PaymentIdList", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"CallbackUrl": {
						"type": "string",
						"description": "URL сервиса получения справок",
						"examples": {
							"default": "https://www.tinkoff.ru"
						}
					},
					"PaymentIdList": {
						"type": "array",
						"description": "Json-массив, содержащий в себе перечень paymentID (уникальных идентификаторов в системе Т‑Кассы) c типом Number",
						"items": {
							"type": "number"
						},
						"examples": {
							"default": [1201206437, 1201206442]
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса",
						"examples": {
							"default": "f2fdd7fec8225872590e1558b7ea258c75df8f300d808006c41ab540dd7514d9"
						}
					}
				}
			},
			"by_email": {
				"title": "на E-mail",
				"required": ["TerminalKey", "PaymentIdList", "EmailList", "Token"],
				"properties": {
					"TerminalKey": {
						"type": "string",
						"description": "Идентификатор терминала, выдается Мерчанту Т‑Кассой",
						"examples": {
							"default": "TinkoffBankTest"
						}
					},
					"PaymentIdList": {
						"type": "array",
						"description": "Json-массив, содержащий в себе перечень paymentID (уникальных идентификаторов в системе Т‑Кассы) c типом Number",
						"items": {
							"type": "number"
						},
						"examples": {
							"default": [1201206437, 1201206442]
						}
					},
					"EmailList": {
						"type": "array",
						"description": "Json-массив, содержащий перечень E-mail с типом String",
						"items": {
							"type": "string",
							"properties": {
								"Email": {
									"type": "string"
								}
							}
						},
						"examples": {
							"default": ["test1@tinkoff.ru", "test2@tinkoff.ru"]
						}
					},
					"Token": {
						"type": "string",
						"description": "Подпись запроса",
						"examples": {
							"default": "f2fdd7fec8225872590e1558b7ea258c75df8f300d808006c41ab540dd7514d9"
						}
					}
				}
			},
			"PaymentIdListForGCO": {
				"type": "object",
				"description": "Json-массив с объектами, содержащими информацию по запросу",
				"required": ["Success", "ErrorCode", "Message", "PaymentId"],
				"properties": {
					"Success": {
						"type": "boolean",
						"description": "Успешность прохождения запроса (true/false)",
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"type": "string",
						"description": "Код ошибки. «0» в случае успеха",
						"examples": {
							"default": 0
						}
					},
					"Message": {
						"type": "string",
						"description": "Сервисное сообщение",
						"examples": {
							"default": "Запрос на отправку документа принят"
						}
					},
					"PaymentId": {
						"type": "number",
						"description": "Идентификатор операции",
						"examples": {
							"default": "1201206442"
						}
					}
				}
			},
			"response_by_url": {
				"title": "Ответ на запрос (URL)",
				"type": "object",
				"required": ["Success", "ErrorCode", "PaymentIdList", "RequestList"],
				"properties": {
					"Success": {
						"type": "boolean",
						"description": "Успешность прохождения запроса (true/false)",
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"type": "string",
						"description": "Код ошибки. «0» в случае успеха",
						"examples": {
							"default": 0
						}
					},
					"Message": {
						"type": "string",
						"description": "Краткое описание ошибки",
						"examples": {
							"default": "OK"
						}
					},
					"PaymentIdList": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PaymentIdListForGCO"
						}
					}
				}
			},
			"response_by_email": {
				"title": "Ответ на запрос (e-mail)",
				"type": "object",
				"required": ["Success", "ErrorCode", "PaymentIdList", "RequestList"],
				"properties": {
					"Success": {
						"type": "boolean",
						"description": "Успешность прохождения запроса (true/false)",
						"examples": {
							"default": true
						}
					},
					"ErrorCode": {
						"type": "string",
						"description": "Код ошибки. «0» в случае успеха",
						"examples": {
							"default": 0
						}
					},
					"Message": {
						"type": "string",
						"description": "Краткое описание ошибки",
						"examples": {
							"default": "OK"
						}
					},
					"PaymentIdList": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PaymentIdListForGCO"
						}
					}
				}
			}
		}
	},
	"x-tagGroups": [
		{
			"name": "Приём платежей по картам",
			"tags": [
				"Сценарии оплаты по карте",
				"Стандартный платеж",
				"Двухстадийный платеж",
				"Прохождение 3DS",
				"Рекуррентный платеж",
				"Отмена платежа"
			]
		},
		{
			"name": "Другие способы приема платежей",
			"tags": [
				"Оплата через СБП",
				"Оплата через T‑Pay",
				"Оплата через YandexPay",
				"Оплата через SberPay"
			]
		},
		{
			"name": "Привязка карты",
			"tags": [
				"Сценарии привязки карты",
				"Методы работы с клиентами",
				"Методы работы с картами"
			]
		},
		{
			"name": "Нотификации Мерчанта об операциях",
			"tags": ["Нотификации Мерчанта об операциях"]
		},
		{
			"name": "Фискализация",
			"tags": [
				"Общая информация",
				"Подключение Онлайн-кассы",
				"Методы работы с чеками",
				"Квитанции",
				"Описание дополнительных объектов"
			]
		},
		{
			"name": "Тестирование и обработка ошибок",
			"tags": ["Коды ошибок", "Типовые ошибки Онлайн-кассы", "Тестовые карты"]
		},
		{
			"name": "Возмещения и реестры",
			"tags": [
				"Правила расчета возмещений по операционному реестру",
				"Формат реестра"
			]
		},
		{
			"name": "Обратная связь",
			"tags": ["Обратная связь"]
		},
		{
			"name": "История изменений",
			"tags": ["История изменений"]
		}
	],
	"webhooks": {
		"Notification": {
			"post": {
				"operationId": "Notification",
				"description": "Метод реализуется на стороне Мерчанта для получения уведомлений об изменении статуса платежа\n\n> **Нотификации о привязке (NotificationAddCard)** \n`Для Мерчантов с PCI DSS`\n<br> Уведомления магазину о статусе выполнения метода привязки карты `AttachCard`.\nПосле успешного выполнения метода `AttachCard` Т‑Касса отправляет POST-запрос с информацией о привязке карты. Нотификация отправляется на ресурс Мерчанта на адрес `Notification URL` синхронно и ожидает ответа в течение 10 секунд. \nПосле получения ответа или неполучения его за заданное время сервис переадресует клиента на `Success AddCard URL` или `Fail AddCard URL` в зависимости от результата привязки карты.\nВ случае успешной обработки нотификации Мерчант должен вернуть ответ с телом сообщения: OK (без тегов и заглавными английскими буквами). <br>\nЕсли тело сообщения отлично от **OK**, любая нотификация считается неуспешной, и сервис будет повторно отправлять нотификацию раз в час в течение 24 часов. Если нотификация за это время так и не доставлена, она складывается в дамп\n\n> **Нотификация о фискализации (NotificationFiscalization)**\n<br> Если используется подключенная онлайн касса, по результату фискализации будет\nотправлена нотификация с фискальными данными\n\n> **Нотификация о статусе привязки счета по QR (NotificationQr)**\n<br> После привязки счета по QR, магазину отправляется статус привязки и токен.\nНотификация будет приходить по статусам **ACTIVE** и **INACTIVE**\n",
				"summary": "Нотификации",
				"servers": [
					{
						"url": "http://api.merchant-site.com",
						"description": "Т‑Касса будет уведомлять Мерчанта об изменении статуса платежа по этому URL"
					}
				],
				"tags": ["Нотификации Мерчанта об операциях"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/NotificationPayment"
									},
									{
										"$ref": "#/components/schemas/NotificationAddCard"
									},
									{
										"$ref": "#/components/schemas/NotificationFiscalization"
									},
									{
										"$ref": "#/components/schemas/NotificationQr"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		}
	}
}
